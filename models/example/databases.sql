{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table almowear_db.maplemonk.Inventory_summary as with last90_days as ( select sku ,sum(suborder_quantity) as sub_quantity from sales_consolidated_aw where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-90,current_timestamp()::date) group by 1 ) ,last30_days as ( select sku ,sum(suborder_quantity) as sub_quantity from sales_consolidated_aw where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-30,current_timestamp()::date) group by 1 ),last7_days as( select sku, sum(suborder_quantity) as sub_quantity from sales_consolidated_aw where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-7,current_timestamp()::date) group by 1 ),non_event_L90 as( with cte as ( select *, case when sku_match is null and marketplace_match is null then suborder_quantity else 0 end as event_flag from ( select order_date,l.sku ,l.marketplace ,suborder_quantity,e.sku as sku_match ,e.marketplace as marketplace_match from sales_consolidated_aw l left join almo_event_days e on l.marketplace= e.marketplace and l.sku = e.sku and l.order_date::date >= e.start_date and l.order_date::date <= e.end_date where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-90,current_timestamp()::date) order by 1 ) )select sku, sum(event_flag) as nonevent_unitsSold_L90 from cte group by 1 ) ,non_event_L30 as( with cte as ( select *, case when sku_match is null and marketplace_match is null then suborder_quantity else 0 end as event_flag from ( select order_date,l.sku ,l.marketplace ,suborder_quantity,e.sku as sku_match ,e.marketplace as marketplace_match from sales_consolidated_aw l left join almo_event_days e on l.marketplace= e.marketplace and l.sku = e.sku and l.order_date::date >= e.start_date and l.order_date::date <= e.end_date where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-30,current_timestamp()::date) order by 1 ) )select sku, sum(event_flag) as nonevent_unitsSold_L30 from cte group by 1 ) ,non_event_L7 as( with cte as ( select *, case when sku_match is null and marketplace_match is null then suborder_quantity else 0 end as event_flag from ( select order_date,l.sku ,l.marketplace ,suborder_quantity,e.sku as sku_match ,e.marketplace as marketplace_match from sales_consolidated_aw l left join almo_event_days e on l.marketplace= e.marketplace and l.sku = e.sku and l.order_date::date >= e.start_date and l.order_date::date <= e.end_date where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-7,current_timestamp()::date) order by 1 ) )select sku, sum(event_flag) as nonevent_unitsSold_L7 from cte group by 1 ) select p._airbyte_emitted_at as DATE ,p.updated_at ::date Inventory_last_updated_at ,a.sku as SKU ,p.product_name PRODUCT_NAME ,ifnull(sum(a.sub_quantity),0) as units_sold_L90 ,ifnull(sum(b.sub_quantity),0) as units_sold_L30 ,ifnull(sum(c.sub_quantity),0) as units_sold_L7 ,sum(inventory) as inventory_available ,case when sum(a.sub_quantity) =0 then 0 else round(inventory_available/((sum(a.sub_quantity) /90)*7),2) end as Weeks_of_Supply_L90 ,case when sum(b.sub_quantity)=0 then 0 else round(inventory_available/((sum(b.sub_quantity) /30)*7),2) end as Weeks_of_Supply_L30 ,case when sum(c.sub_quantity)=0 then 0 else round(inventory_available/((sum(c.sub_quantity) /7)*7),2) end as Weeks_of_Supply_L7 ,sum(nonevent_unitsSold_L90) as NE_L90 ,sum(nonevent_unitsSold_L30) as NE_L30 ,sum(nonevent_unitsSold_L7) as NE_L7 from last90_days a left join easyecom_in_product_master p on a.sku = p.sku left join last30_days b on a.sku = b.sku left join last7_days c on a.sku = c.sku left join non_event_L90 na on a.sku = na.sku left join non_event_L30 nb on a.sku = nb.sku left join non_event_L7 nc on a.sku = nc.sku group by 1,2,3,4 order by 1,2 desc;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from ALMOWEAR_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        