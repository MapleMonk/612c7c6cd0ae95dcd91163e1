{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table VAHDAM_DB.MAPLEMONK.vahdam_refund_event_list as With Charge as (select A.value:AmazonOrderId as AmazonOrderID, A.value:MarketplaceName as ProductName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderAdjustmentItemId as OrderAdjustmentItemId, B.value:SellerSKU as SellerSKU, C.value:\"ChargeAmount\":\"CurrencyCode\" as Currency, sum(case when lower(C.value:ChargeType) = \'tax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as Tax, sum(case when lower(C.value:ChargeType) = \'principal\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as Principal, sum(case when lower(C.value:ChargeType) = \'shippingtax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as ShippingTax, sum(case when lower(C.value:ChargeType) = \'shippingcharge\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as ShippingCharge, sum(case when lower(C.value:ChargeType) = \'giftwrap\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as GiftWrap, sum(case when lower(C.value:ChargeType) = \'giftwraptax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as GiftWrapTax, sum(case when lower(C.value:ChargeType) = \'exportcharge\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as ExportCharge from vahdam_db.maplemonk.asp_us_listfinancialevents,lateral flatten(input => refundeventlist) A,lateral flatten(input =>A.value:ShipmentItemAdjustmentList)B, lateral flatten(input => B.value:ItemChargeAdjustmentList)C group by 1,2,3,4,5,6,7) , Fee as (Select A.value:AmazonOrderId as AmazonOrderID, A.value:MarketplaceName as ProductName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderAdjustmentItemId as OrderAdjustmentItemId, B.value:SellerSKU as SellerSKU, D.value:\"FeeAmount\":\"CurrencyCode\" as Currency, sum(case when lower(D.value:FeeType) = \'commission\' then D.value:\"FeeAmount\":\"CurrencyAmount\" else 0 end) as Commission, sum(case when lower(D.value:FeeType) = \'refundcommission\' then D.value:\"FeeAmount\":\"CurrencyAmount\" else 0 end) as RefundCommission, sum(case when lower(D.value:FeeType) = \'giftwrapchargeback\' then D.value:\"FeeAmount\":\"CurrencyAmount\" else 0 end) as GiftwrapChargeback, sum(case when lower(D.value:FeeType) = \'shippingchargeback\' then D.value:\"FeeAmount\":\"CurrencyAmount\" else 0 end) as ShippingChargeback from vahdam_db.maplemonk.asp_us_listfinancialevents,lateral flatten(input => refundeventlist) A,lateral flatten(input =>A.value:ShipmentItemAdjustmentList)B,lateral flatten(input =>B.value:ItemFeeAdjustmentList)D group by 1,2,3,4,5,6,7), Quantity as (Select A.value:AmazonOrderId as AmazonOrderID, A.value:MarketplaceName as ProductName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderAdjustmentItemId as OrderAdjustmentItemId, B.value:SellerSKU as SellerSKU, sum(B.value:QuantityShipped) as Quantity from vahdam_db.maplemonk.asp_us_listfinancialevents,lateral flatten(input => refundeventlist) A,lateral flatten(input =>A.value:ShipmentItemAdjustmentList)B group by 1,2,3,4,5,6), TCM as (Select A.value:AmazonOrderId as AmazonOrderID, A.value:MarketplaceName as ProductName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderAdjustmentItemId as OrderAdjustmentItemId, B.value:SellerSKU as SellerSKU, E.value:TaxCollectionModel as TaxCollectionModel from vahdam_db.maplemonk.asp_us_listfinancialevents,lateral flatten(input => refundeventlist) A,lateral flatten(input =>A.value:ShipmentItemAdjustmentList)B,lateral flatten(input => B.value:ItemTaxWithheldList)E) select replace(coalesce(C.AmazonOrderID,F.AmazonOrderID,Q.AmazonOrderID,T.AmazonOrderID),\'\"\"\',\'\') as AmazonOrderID ,replace(coalesce(C.ProductName,F.ProductName,Q.ProductName,T.ProductName),\'\"\"\',\'\') as ProductName ,replace(coalesce(C.PostedDate,F.PostedDate,Q.PostedDate,T.PostedDate),\'\"\"\',\'\') as PostedDate ,replace(coalesce(C.SellerOrderId,F.SellerOrderId,Q.SellerOrderId,T.SellerOrderId),\'\"\"\',\'\') as SellerOrderId ,replace(coalesce(C.SellerSKU,F.SellerSKU,Q.SellerSKU,T.SellerSKU),\'\"\"\',\'\') SellerSKU ,replace(coalesce(C.OrderAdjustmentItemId,F.OrderAdjustmentItemId,Q.OrderAdjustmentItemId,T.OrderAdjustmentItemId),\'\"\"\',\'\') OrderAdjustmentItemId ,replace(T.TaxCollectionModel,\'\"\"\',\'\') TaxCollectionModel ,Q.Quantity ,C.Tax ,C.Principal ,C.ShippingTax ,C.ShippingCharge ,C.GiftWrap ,C.GiftWrapTax ,C.ExportCharge ,F.Commission ,F.RefundCommission ,F.GiftwrapChargeback ,F.ShippingChargeback from Charge C left join Fee F on C.AmazonOrderID=F.AmazonOrderID and C.OrderAdjustmentItemId = F.OrderAdjustmentItemId left join Quantity Q on C.AmazonOrderID=Q.AmazonOrderID and C.OrderAdjustmentItemId = Q.OrderAdjustmentItemId left join TCM T on C.AmazonOrderID=T.AmazonOrderID and C.OrderAdjustmentItemId = T.OrderAdjustmentItemId; create or replace table vahdam_db.maplemonk.vahdam_shipment_event_list as With Tax as (Select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, D.value:\"ChargeAmount\":\"CurrencyCode\" as Currency, sum(case when lower(D.value:ChargeType) = \'marketplacefacilitatortax-principal\' then D.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) MarketplaceFacilitatorTaxPrincipal, sum(case when lower(D.value:ChargeType) = \'marketplacefacilitatortax-shipping\' then D.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) MarketplaceFacilitatorTaxShipping, sum(case when lower(D.value:ChargeType) = \'marketplacefacilitatortax-other\' then D.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) MarketplaceFacilitatorTaxOther, sum(case when lower(D.value:ChargeType) = \'marketplacefacilitatorvat-shipping\' then D.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) MarketplaceFacilitatorVATShipping, sum(case when lower(D.value:ChargeType) = \'marketplacefacilitatorvat-principal\' then D.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) MarketplaceFacilitatorVATPrincipal from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B ,lateral flatten(input =>B.value:ItemTaxWithheldList)C ,lateral flatten(input =>C.value:TaxesWithheld)D group by 1,2,3,4,5,6,7), Promotion as (Select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, C.value:\"PromotionAmount\":\"CurrencyCode\" as Currency, sum(ifnull(C.value:\"PromotionAmount\":\"CurrencyAmount\",0)) Promotion from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B ,lateral flatten(input =>B.value:PromotionList)C group by 1,2,3,4,5,6,7), Charge as (select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, C.value:\"ChargeAmount\":\"CurrencyCode\" as Currency, sum(case when lower(C.value:ChargeType) = \'principal\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as Principal, sum(case when lower(C.value:ChargeType) = \'tax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as Tax, sum(case when lower(C.value:ChargeType) = \'giftwrap\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as GiftWrap, sum(case when lower(C.value:ChargeType) = \'giftwraptax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as GiftWrapTax, sum(case when lower(C.value:ChargeType) = \'shippingcharge\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as ShippingCharge, sum(case when lower(C.value:ChargeType) = \'shippingtax\' then C.value:\"ChargeAmount\":\"CurrencyAmount\" else 0 end) as ShippingTax from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B ,lateral flatten(input =>B.value:ItemChargeList)C group by 1,2,3,4,5,6,7), Fee as (select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, D.value:\"FeeAmount\":\"CurrencyCode\" as Currency, sum(case when lower(D.value:FeeType) = \'fbaperorderfulfillmentfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as FBAPerOrderFulfillmentFee, sum(case when lower(D.value:FeeType) = \'fbaperunitfulfillmentfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as FBAPerUnitFulfillmentFee, sum(case when lower(D.value:FeeType) = \'fbaweightbasedfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as FBAWeightBasedFee, sum(case when lower(D.value:FeeType) = \'commission\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as Commission, sum(case when lower(D.value:FeeType) = \'fixedclosingfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as FixedclosingFee, sum(case when lower(D.value:FeeType) = \'giftwrapchargeback\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as GiftWrapChargeback, sum(case when lower(D.value:FeeType) = \'shippingchargeback\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as ShippingChargeback, sum(case when lower(D.value:FeeType) = \'variableclosingfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as VariableClosingFee, sum(case when lower(D.value:FeeType) = \'salestaxcollectionfee\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as SalesTaxCollectionFee, sum(case when lower(D.value:FeeType) = \'giftwrapcommission\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as GiftWrapCommission, sum(case when lower(D.value:FeeType) = \'shippinghb\' then D.value:\"FeeAmount\":\"CurrencyAmount\" end) as ShippingHB from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B ,lateral flatten(input =>B.value:ItemFeeList)D group by 1,2,3,4,5,6,7), Quantity as (select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, sum(B.value:QuantityShipped) as Quantity from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B group by 1,2,3,4,5,6), TCM as (select A.value:AmazonOrderId as AmazonOrderId, A.value:MarketplaceName as MarketplaceName, A.value:PostedDate as PostedDate, A.value:SellerOrderId as SellerOrderId, B.value:OrderItemId as OrderItemId, B.value:SellerSKU as SellerSKU, E.value:TaxCollectionModel as TaxCollectionModel from vahdam_db.maplemonk.asp_us_listfinancialevents ,lateral flatten(input =>SHIPMENTEVENTLIST)A ,lateral flatten(input =>A.value:ShipmentItemList)B ,lateral flatten(input =>B.value:ItemTaxWithheldList)E) select replace(coalesce(C.AmazonOrderId,F.AmazonOrderId,Q.AmazonOrderId,T.AmazonOrderId,P.AmazonOrderId,Z.AmazonOrderId),\'\"\"\',\'\') as AmazonOrderId ,replace(coalesce(C.MarketplaceName,F.MarketplaceName,Q.MarketplaceName,T.MarketplaceName,P.MarketplaceName,Z.MarketplaceName),\'\"\"\',\'\') as MarketplaceName ,replace(coalesce(C.PostedDate,F.PostedDate,Q.PostedDate,T.PostedDate,P.PostedDate,Z.PostedDate),\'\"\"\',\'\') as PostedDate ,replace(coalesce(C.SellerOrderId,F.SellerOrderId,Q.SellerOrderId,T.SellerOrderId,P.SellerOrderId,Z.SellerOrderId),\'\"\"\',\'\') as SellerOrderId ,replace(coalesce(C.OrderItemId,F.OrderItemId,Q.OrderItemId,T.OrderItemId,P.OrderItemId,Z.OrderItemId),\'\"\"\',\'\') as OrderItemId ,replace(coalesce(C.SellerSKU,F.SellerSKU,Q.SellerSKU,T.SellerSKU,P.SellerSKU,Z.SellerSKU),\'\"\"\',\'\') as SellerSKU ,replace(coalesce(C.Currency,F.Currency,P.Currency,Z.Currency),\'\"\"\',\'\') as Currency ,Q.Quantity ,C.Principal ,F.FBAPerUnitFulfillmentFee ,F.Commission ,ifnull(P.Promotion,0) Promotion ,C.Tax ,C.GiftWrap ,C.GiftWrapTax ,C.ShippingCharge ,C.ShippingTax ,ifnull(Z.MarketplaceFacilitatorTaxPrincipal,0) MarketplaceFacilitatorTaxPrincipal ,ifnull(Z.MarketplaceFacilitatorTaxShipping,0) MarketplaceFacilitatorTaxShipping ,ifnull(Z.MarketplaceFacilitatorTaxOther,0) MarketplaceFacilitatorTaxOther ,ifnull(Z.MarketplaceFacilitatorVATShipping,0) MarketplaceFacilitatorVATShipping ,ifnull(Z.MarketplaceFacilitatorVATPrincipal,0) MarketplaceFacilitatorVATPrincipal ,F.FBAPerOrderFulfillmentFee ,F.FBAWeightBasedFee ,F.FixedclosingFee ,F.GiftWrapChargeback ,F.ShippingChargeback ,F.VariableClosingFee ,F.SalesTaxCollectionFee ,F.GiftWrapCommission ,F.ShippingHB ,T.TaxCollectionModel from Charge C left join Fee F on C.AmazonOrderID=F.AmazonOrderID and C.OrderItemId = F.OrderItemId left join Quantity Q on C.AmazonOrderID=Q.AmazonOrderID and C.OrderItemId = Q.OrderItemId left join TCM T on C.AmazonOrderID=T.AmazonOrderID and C.OrderItemId = T.OrderItemId left join Promotion P on C.AmazonOrderID=P.AmazonOrderID and C.OrderItemId = P.OrderItemId left join Tax Z on C.AmazonOrderID=Z.AmazonOrderID and C.OrderItemId = Z.OrderItemId; create or replace table vahdam_db.maplemonk.vahdam_adjustment_event_list as select replace(A.value:PostedDate,\'\"\',\'\') as PostedDate ,replace(B.value:ProductDescription,\'\"\"\',\'\') as ProductDescription ,replace(B.value:SellerSKU,\'\"\',\'\') as SellerSKU ,replace(B.value:\"TotalAmount\":\"CurrencyCode\",\'\"\',\'\') as Currency ,sum(case when A.value:AdjustmentType = \'COMPENSATED_CLAWBACK\' then replace(B.value:Quantity,\'\"\',\'\') else 0 end) as Compensated_Clawback_Quantity ,sum(case when A.value:AdjustmentType = \'COMPENSATED_CLAWBACK\' then replace(B.value:\"TotalAmount\":\"CurrencyAmount\",\'\"\',\'\') else 0 end) as Compensated_Clawback_Total_Amount ,sum(case when A.value:AdjustmentType = \'WAREHOUSE_DAMAGE\' then replace(B.value:Quantity,\'\"\',\'\') else 0 end) as WAREHOUSE_DAMAGE_Quantity ,sum(case when A.value:AdjustmentType = \'WAREHOUSE_DAMAGE\' then replace(B.value:\"TotalAmount\":\"CurrencyAmount\",\'\"\',\'\') else 0 end) as WAREHOUSE_DAMAGE_Total_Amount ,sum(case when A.value:AdjustmentType = \'REVERSAL_REIMBURSEMENT\' then replace(B.value:Quantity,\'\"\',\'\') else 0 end) as REVERSAL_REIMBURSEMENT_Quantity ,sum(case when A.value:AdjustmentType = \'REVERSAL_REIMBURSEMENT\' then replace(B.value:\"TotalAmount\":\"CurrencyAmount\",\'\"\',\'\') else 0 end) as REVERSAL_REIMBURSEMENT_Total_Amount ,sum(case when A.value:AdjustmentType = \'WAREHOUSE_LOST_MANUAL\' then replace(B.value:Quantity,\'\"\',\'\') else 0 end) as WAREHOUSE_LOST_MANUAL_Quantity ,sum(case when A.value:AdjustmentType = \'WAREHOUSE_LOST_MANUAL\' then replace(B.value:\"TotalAmount\":\"CurrencyAmount\",\'\"\',\'\') else 0 end) as WAREHOUSE_LOST_MANUAL_Total_Amount ,sum(case when A.value:AdjustmentType = \'FREE_REPLACEMENT_REFUND_ITEMS\' then replace(B.value:Quantity,\'\"\',\'\') else 0 end) as FREE_REPLACEMENT_REFUND_ITEMS_Quantity ,sum(case when A.value:AdjustmentType = \'FREE_REPLACEMENT_REFUND_ITEMS\' then replace(B.value:\"TotalAmount\":\"CurrencyAmount\",\'\"\',\'\') else 0 end) as FREE_REPLACEMENT_REFUND_ITEMS_Total_Amount from vahdam_db.maplemonk.asp_us_listfinancialevents,lateral flatten(input =>ADJUSTMENTEVENTLIST)A, lateral flatten (input => A.value:AdjustmentItemList)B group by 1,2,3,4;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from VAHDAM_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        