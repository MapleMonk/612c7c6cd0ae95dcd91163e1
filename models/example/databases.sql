{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE TEMP TABLE Inventory_Data_Base AS SELECT * FROM ( SELECT NULL AS COMPANYID, NULL AS COMPANYNAME, PARSE_DATETIME(\'%Y-%m-%dT%H:%M:%E*SZ\', timestamp) AS CREATIONDATE, PARSE_DATETIME(\'%Y-%m-%dT%H:%M:%E*SZ\', timestamp) AS LASTUPDATEDATE, DATETIME(TIMESTAMP(timestamp), \"Asia/Kolkata\") AS DATA_FETCH_DATE, REPLACE(SKUCODE, \'\\'\', \'\') AS SKU, REPLACE(SKUCODE, \'\\'\', \'\') AS ACCOUNTINGSKU, REPLACE(SKUCODE, \'\\'\', \'\') AS PRODUCTID, REPLACE(SKUCODE, \'\\'\', \'\') AS COMPANYPRODUCTID, NULL AS MODELNO, NULL AS PRODUCTUNIQUECODE, UPPER(NAME) AS PRODUCTNAME, NULL AS DESCRIPTION, NULL AS IS_COMBO, NULL AS IMAGEURL, NULL AS SIZE, UPPER(BRAND) AS BRAND, CATEGORYCODE AS CATEGORY, NULL AS COLOR, NULL AS WIDTH, NULL AS HEIGHT, NULL AS LENGTH, NULL AS WEIGHT, NULL AS MRP, NULL AS COST, FACILITY AS LOCATION_KEY, NULL AS ACCOUNTINGUNIT, PUTAWAYPENDING AS RESERVEDINVENTORY, INVENTORY AS AVAILABLEINVENTORY, NULL AS INVENTORYTHRESHOLD, NULL AS SELLINGPRICETHRESHOLD, ROW_NUMBER() OVER (PARTITION BY FACILITY, REPLACE(SKUCODE, \'\\'\', \'\'), cast(DATETIME(TIMESTAMP(timestamp), \"Asia/Kolkata\") as date) ORDER BY DATETIME(TIMESTAMP(timestamp), \"Asia/Kolkata\") DESC) AS rw FROM MAPLEMONK.UNICOMMERCE_ZOUK_UC_GET_INVENTORY_SNAPSHOT ) WHERE rw = 1; CREATE TEMP TABLE Inventory_Data AS SELECT DATA_FETCH_DATE, SKU, PRODUCTID, PRODUCTNAME, SIZE, BRAND, CATEGORY, COLOR, SUM(IFNULL(AVAILABLEINVENTORY, 0)) AS AVAILABLEINVENTORY FROM Inventory_Data_Base GROUP BY 1, 2, 3, 4, 5, 6, 7, 8; CREATE TEMP TABLE Sales_Data_Daily AS SELECT order_date, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY, SUM(IFNULL(SELLING_PRICE,0)) SELLING_PRICE FROM maplemonk.zouk_sales_consolidated GROUP BY 1, 2; CREATE TEMP TABLE Sales_Data_Max_Weekly AS WITH WeeklySales AS ( SELECT DATE_TRUNC(order_date, WEEK) AS week_Start, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY, SUM(IFNULL(SELLING_PRICE,0)) SELLING_PRICE FROM maplemonk.zouk_sales_consolidated WHERE DATE_DIFF(CURRENT_DATE(), order_date, DAY) <= 56 GROUP BY 1, 2 ) SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY FROM ( SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY, SELLING_PRICE, ROW_NUMBER() OVER (PARTITION BY SKU ORDER BY QUANTITY DESC) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1; CREATE TEMP TABLE Sales_Data_Min_Weekly AS WITH WeeklySales AS ( SELECT DATE_TRUNC(order_date, WEEK) AS week_Start, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY, SUM(IFNULL(SELLING_PRICE,0)) SELLING_PRICE FROM maplemonk.zouk_sales_consolidated WHERE DATE_DIFF(CURRENT_DATE(), order_date, DAY) <= 56 GROUP BY 1, 2 ) SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY, SELLING_PRICE FROM ( SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY, SELLING_PRICE, ROW_NUMBER() OVER (PARTITION BY SKU ORDER BY QUANTITY) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1; CREATE TEMP TABLE Sales_56avg_w_Inv AS SELECT ID.DATA_FETCH_DATE, ID.SKU, ID.PRODUCTID, UPPER(cast(ID.PRODUCTNAME as string)) AS Product_Final_Name, UPPER(cast(ID.CATEGORY as string)) AS Category, UPPER(cast(ID.COLOR as string)) AS COLOR, MAX(IFNULL(cast(ID.AVAILABLEINVENTORY as FLOAT64), 0)) AS Available_Inventory, SUM(IFNULL(cast(SD56.QUANTITY as FLOAT64), 0)) AS Sold_Quantity_56_Days, SUM(IFNULL(cast(SD56.SELLING_PRICE as FLOAT64), 0)) AS Selling_Price_56_Days, MAX(IFNULL(cast(SWMax.QUANTITY as FLOAT64), 0)) AS Max_Weekly_Sales, MAX(IFNULL(cast(SWMin.QUANTITY as FLOAT64), 0)) AS Min_Weekly_Sales FROM Inventory_Data ID LEFT JOIN Sales_Data_Daily SD56 ON ID.SKU = SD56.SKU AND DATE_DIFF(IFNULL(ID.DATA_FETCH_DATE, CURRENT_DATE()), SD56.ORDER_DATE, DAY) BETWEEN 1 AND 56 LEFT JOIN Sales_Data_Max_Weekly SWMax ON ID.SKU = SWMax.SKU LEFT JOIN Sales_Data_Min_Weekly SWMin ON ID.SKU = SWMin.SKU GROUP BY 1, 2, 3, 4, 5, 6; CREATE TEMP TABLE Sales_56_14_Avg_w_Inv AS SELECT DATA_FETCH_DATE, SD56.SKU, PRODUCTID, Product_Final_Name, Category, COLOR, Available_Inventory, Max_Weekly_Sales, Min_Weekly_Sales, Sold_Quantity_56_Days, Selling_Price_56_Days, SUM(IFNULL(SD14.QUANTITY, 0)) AS Sold_Quantity_14_Days, SUM(IFNULL(SD14.SELLING_PRICE, 0)) AS Selling_Price_14_Days FROM Sales_56avg_w_Inv SD56 LEFT JOIN Sales_Data_Daily SD14 ON SD56.SKU = SD14.SKU AND DATE_DIFF(IFNULL(SD56.DATA_FETCH_DATE, CURRENT_DATE()), SD14.ORDER_DATE, DAY) BETWEEN 1 AND 14 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11; CREATE TEMP TABLE Sales_56_14_mtd_Avg_w_Inv AS SELECT DATA_FETCH_DATE, SD56.SKU, PRODUCTID, Product_Final_Name, Category, COLOR, Available_Inventory, Max_Weekly_Sales, Min_Weekly_Sales, Sold_Quantity_56_Days, Selling_Price_56_Days, Sold_Quantity_14_Days, Selling_Price_14_Days, SUM(IFNULL(SDmtd.QUANTITY, 0)) AS sold_quantity_mtd, SUM(IFNULL(SDmtd.Selling_Price, 0)) AS Selling_Price_mtd FROM Sales_56_14_Avg_w_Inv SD56 LEFT JOIN Sales_Data_Daily SDmtd ON SD56.SKU = SDmtd.SKU AND DATE_TRUNC(SDmtd.ORDER_DATE - INTERVAL 1 DAY, MONTH) = DATE_TRUNC(IFNULL(SD56.DATA_FETCH_DATE, CURRENT_DATE()), MONTH) AND SDmtd.ORDER_DATE < IFNULL(SD56.DATA_FETCH_DATE, CURRENT_DATE()) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13; CREATE TEMP TABLE Sales_56_14_mtd_7_Avg_w_Inv AS SELECT DATA_FETCH_DATE, EXTRACT(DAY FROM DATE_SUB(DATA_FETCH_DATE, INTERVAL 1 DAY)) AS mtd_Days, SD56_14.SKU, PRODUCTID, Product_Final_Name, Category, COLOR, Available_Inventory, Max_Weekly_Sales, Min_Weekly_Sales, Sold_Quantity_56_Days, Selling_Price_56_Days, Sold_Quantity_14_Days, Selling_Price_14_Days, sold_quantity_mtd, Selling_Price_mtd, SUM(IFNULL(SD7.QUANTITY, 0)) AS Sold_Quantity_7_Days, SUM(IFNULL(SD7.SELLING_PRICE, 0)) AS Selling_Price_7_Days FROM Sales_56_14_mtd_Avg_w_Inv SD56_14 LEFT JOIN Sales_Data_Daily SD7 ON SD56_14.SKU = SD7.SKU AND DATE_DIFF(IFNULL(SD56_14.DATA_FETCH_DATE, CURRENT_DATE()), SD7.ORDER_DATE, DAY) BETWEEN 1 AND 7 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16; CREATE TEMP TABLE Sales_56_14_mtd_30_7_Avg_w_Inv AS SELECT DATA_FETCH_DATE, mtd_Days, SD56_14_7.SKU, PRODUCTID, Product_Final_Name, Category, COLOR, Available_Inventory, Max_Weekly_Sales, Min_Weekly_Sales, Sold_Quantity_56_Days, Selling_Price_56_Days, Sold_Quantity_14_Days, Selling_Price_14_Days, sold_quantity_mtd, Selling_Price_mtd, Sold_Quantity_7_Days, Selling_Price_7_Days, SUM(IFNULL(SD30.QUANTITY, 0)) AS Sold_Quantity_30_Days, SUM(IFNULL(SD30.SELLING_PRICE, 0)) AS Selling_Price_30_Days FROM Sales_56_14_mtd_7_Avg_w_Inv SD56_14_7 LEFT JOIN Sales_Data_Daily SD30 ON SD56_14_7.SKU = SD30.SKU AND DATE_DIFF(IFNULL(SD56_14_7.DATA_FETCH_DATE, CURRENT_DATE()), SD30.ORDER_DATE, DAY) BETWEEN 1 AND 30 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18; CREATE TEMP TABLE INVENTORY_FINAL AS SELECT DATA_FETCH_DATE, mtd_Days, SD56_14_7_30.SKU, PRODUCTID, Product_Final_Name, Category, COLOR, Available_Inventory, Max_Weekly_Sales, Min_Weekly_Sales, Sold_Quantity_56_Days, Selling_Price_56_Days, Sold_Quantity_14_Days, Selling_Price_14_Days, sold_quantity_mtd, Selling_Price_mtd, Sold_Quantity_7_Days, Selling_Price_7_Days, Sold_Quantity_30_Days, Selling_Price_30_Days, SUM(IFNULL(SD1.QUANTITY, 0)) AS Sold_Quantity_last_day, SUM(IFNULL(SD1.SELLING_PRICE, 0)) AS Selling_Price_last_day FROM Sales_56_14_mtd_30_7_Avg_w_Inv SD56_14_7_30 LEFT JOIN Sales_Data_Daily SD1 ON SD56_14_7_30.SKU = SD1.SKU AND DATE_DIFF(IFNULL(SD56_14_7_30.DATA_FETCH_DATE, CURRENT_DATE()), SD1.ORDER_DATE, DAY) = 1 GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20; CREATE OR REPLACE TABLE MAPLEMONK.ZOUK_INVENTORY_FACT_ITEMS AS SELECT IFT.DATA_FETCH_DATE ,IFT.mtd_Days ,IFT.SKU ,IFT.PRODUCTID ,coalesce(SM.NAME,IFT.Product_Final_Name) Product_Final_Name ,coalesce(SM.CATEGORY ,IFT.Category) Category ,IFT.COLOR ,SM.SUB_CATEGORY ,SM.CATEGORY_CODE ,SM.COLLECTION ,SM.PRINT ,SM.PRODUCT_TYPE ,SM.BAU_ONLINE ,IFT.Available_Inventory ,IFT.Max_Weekly_Sales ,IFT.Min_Weekly_Sales ,IFT.Sold_Quantity_56_Days ,IFT.Selling_Price_56_Days ,IFT.Sold_Quantity_30_Days ,IFT.Selling_Price_30_Days ,IFT.Sold_Quantity_14_Days ,IFT.Selling_Price_14_Days ,IFT.sold_quantity_mtd ,IFT.Selling_Price_mtd ,IFT.Sold_Quantity_7_Days ,IFT.Selling_Price_7_Days ,IFT.Sold_Quantity_last_day ,IFT.Selling_Price_last_day ,safe_cast(WIP.WIP_FINAL as INT64) WIP_INVENTORY FROM INVENTORY_FINAL IFT LEFT JOIN (SELECT * from (select * ,row_number() over (partition by commonsku order by 1) rw from MAPLEMONK.FINAL_SKU_MASTER ) where rw =1 ) SM ON lower(IFT.SKU) = lower(SM.commonsku) LEFT JOIN (select * from (select * ,row_number() over (partition by lower(SKU_ID) order by 1) rw from MapleMonk.Zouk_Inventory_WIP where sku_id is not null ) where rw = 1 ) WIP ON lower(IFT.SKU) = lower(WIP.SKU_ID);",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from maplemonk.INFORMATION_SCHEMA.TABLES
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            