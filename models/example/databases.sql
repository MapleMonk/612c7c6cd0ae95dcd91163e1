{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE TABLE IF NOT EXISTS MM_TEST.Maplemonk.ASP_<<source name 1>>_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_GENERAL ( SKU VARCHAR(16777216), ASIN VARCHAR(16777216), CURRENCY VARCHAR(16777216), \"item-tax\" VARCHAR(16777216), QUANTITY VARCHAR(16777216), \"ship-city\" VARCHAR(16777216), \"item-price\" VARCHAR(16777216), \"ship-state\" VARCHAR(16777216), \"item-status\" VARCHAR(16777216), \"order-status\" VARCHAR(16777216), \"product-name\" VARCHAR(16777216), \"ship-country\" VARCHAR(16777216), \"shipping-tax\" VARCHAR(16777216), \"gift-wrap-tax\" VARCHAR(16777216), \"order-channel\" VARCHAR(16777216), \"promotion-ids\" VARCHAR(16777216), \"purchase-date\" TIMESTAMP_TZ(9), \"sales-channel\" VARCHAR(16777216), \"shipping-price\" VARCHAR(16777216), \"amazon-order-id\" VARCHAR(16777216), \"gift-wrap-price\" VARCHAR(16777216), \"ship-postal-code\" VARCHAR(16777216), \"is-business-order\" VARCHAR(16777216), \"last-updated-date\" TIMESTAMP_TZ(9), \"merchant-order-id\" VARCHAR(16777216), \"price-designation\" VARCHAR(16777216), \"ship-service-level\" VARCHAR(16777216), \"fulfillment-channel\" VARCHAR(16777216), \"purchase-order-number\" VARCHAR(16777216), \"item-promotion-discount\" VARCHAR(16777216), \"ship-promotion-discount\" VARCHAR(16777216)); CREATE TABLE IF NOT EXISTS MM_TEST.Maplemonk.sku_master (skucode VARCHAR(16777216), name VARCHAR(16777216), category VARCHAR(16777216), sub_category VARCHAR(16777216)); CREATE OR REPLACE TABLE MM_TEST.Maplemonk.amazon_fact_items_MM_TEST AS SELECT uptest3 AS shop_name, \"amazon-order-id\" AS order_id, NULL AS order_name, NULL AS customer_id, NULL AS name, NULL AS email, NULL AS phone, NULL AS tags, NULL AS line_item_id, sku, ASIN AS product_id, currency, case when \"order-status\" in (\'Shipped - Returned to Seller\', \'Shipped - Returning to Seller\',\'Shipped - Rejected by Buyer\',\'Shipped - Damaged\') then 1 else 0 end AS is_refund, upper(\"ship-city\") AS city, upper(\"ship-state\") AS state, \"product-name\" AS product_name, NULL AS category, \"order-status\" AS order_status, \"Purchase-datetime-PDT\" AS order_timestamp, TRY_CAST(\"item-price\" AS FLOAT) AS line_item_sales, TRY_CAST(\"shipping-price\" AS FLOAT) AS shipping_price, TRY_CAST(QUANTITY AS FLOAT) AS quantity, TRY_CAST(\"item-tax\" AS FLOAT) AS tax, null as tax_rate, TRY_CAST(\"item-promotion-discount\" AS FLOAT) AS discount, TRY_CAST(\"item-promotion-discount\" AS FLOAT) AS discount_before_tax, NULL AS gross_sales_after_tax, NULL AS gross_sales_before_tax, NULL AS net_sales_before_tax, TRY_CAST(\"item-price\" AS FLOAT)-TRY_CAST(\"item-promotion-discount\" AS FLOAT) AS total_sales, \'Amazon\' AS source, NULL AS landing_utm_medium, NULL AS landing_utm_source, NULL AS landing_utm_campaign, NULL AS referring_utm_medium, NULL AS referring_utm_source, NULL AS landing_utm_channel, NULL AS referring_utm_channel, NULL AS final_utm_channel, NULL AS new_customer_flag, NULL AS acquisition_channel, NULL AS acquisition_product, TRY_CAST(\"shipping-tax\" AS FLOAT) AS shipping_tax, TRY_CAST(\"ship-promotion-discount\" AS FLOAT) AS ship_promotion_discount, TRY_CAST(\"gift-wrap-price\" AS FLOAT) AS gift_wrap_price, TRY_CAST(\"gift-wrap-tax\" AS FLOAT) AS gift_wrap_tax FROM (SELECT *, CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\', \"purchase-date\":: DATETIME) as \"Purchase-datetime-PDT\" FROM MM_TEST.Maplemonk.ASP_uptest3_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_GENERAL )X WHERE \"ship-country\" = \'<<AWS Region for source name 1>> AND \"item-price\" NOT IN(\'\',\'0.0\') CREATE OR REPLACE TABLE MM_TEST.Maplemonk.amazon_fact_items_MM_TEST_TEMP_Category as select fi.* ,p.name as product_name_final ,coalesce(Upper(p.CATEGORY),upper(fi.category)) AS product_category ,Upper(p.sub_category) as product_sub_category from MM_TEST.Maplemonk.amazon_fact_items_MM_TEST fi left join (select distinct skucode, name, category, sub_category from MM_TEST.Maplemonk.sku_master) p on fi.sku = p.skucode; CREATE OR REPLACE TABLE MM_TEST.Maplemonk.amazon_fact_items_MM_TEST AS SELECT * FROM MM_TEST.Maplemonk.amazon_fact_items_MM_TEST_TEMP_Category;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from MM_TEST.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        