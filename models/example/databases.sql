{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table prd_db.justherbs.dwh_pandlsummary as select x.*, coalesce(y.date,z.date,m.date,n.date,o.date,p.date,q.date,r.date,ORDER_TIMESTAMP_PRE)::date as ORDER_TIMESTAMP, upper(coalesce(y.channel_pre,z.channel_pre,m.channel_pre,n.channel_pre,o.channel_pre,p.channel_pre,q.channel_pre,r.channel_pre,x.channel_pre)) as channel, CASE WHEN MONTH(ORDER_TIMESTAMP::date) >= 4 THEN YEAR(ORDER_TIMESTAMP::date) + 1 ELSE YEAR(ORDER_TIMESTAMP::date) END AS financial_year, div0(ifnull(coalesce(y.spend, z.spend,m.spend, n.spend, o.spend, p.spend, q.spend, r.spend),0), count(1) over (partition by ORDER_TIMESTAMP::date,upper(channel))) spend from( select m.* ,d.return_sales ,e.customer_id_final ,case when lower(final_utm_channel) in (\'google\',\'meta\',\'crm\',\'organic\',\'affiliates (cps)\',\'influencer marketing\',\'partnerships & alliances (cpe)\',\'native ads\',\'influencer marketing\',\'others\') then upper(final_utm_channel) else \'ALL_OTHERS\' end channel_pre from ( select a.FINAL_UTM_channel_NR ,a.ORDER_TIMESTAMP as ORDER_TIMESTAMP_PRE ,a.ORDER_ID ,a.ORDER_NAME ,a.MRP_SALES ,a.TOTAL_SALES ,a.TOTAL_DISCOUNT ,a.DISCOUNT_PERCENT ,a.NR ,a.TOTAL_COGS ,a.LOGISTICS_COST ,a.SPM_COST ,a.GC ,a.GC_PERCENT ,a.DISCOUNT_CODE ,a.PRODUCT_LIST ,a.GC_FILTER ,a.TIMESTAMPED_DATE ,b.final_utm_source ,b.final_utm_channel ,b.shopify_new_customer_flag ,b.tax from prd_db.justherbs.DWH_GROSS_CONTRIBUTION_JH a left join ( select order_name, final_utm_source, final_utm_channel, shopify_new_customer_flag, sum(tax) tax from prd_db.justherbs.dwh_SHOPIFY_FACT_ITEMS group by 1,2,3,4 ) b on lower(a.ordeR_name) = lower(b.ordeR_name) )m left join ( select reference_code, sum(total_return_amount) return_sales from prd_db.justherbs.dwh_easyecom_returns_fact_items group by 1 ) d on replace(m.ordeR_name,\'#\',\'\') = d.reference_code left join ( select distinct reference_code, customer_id_final from prd_db.justherbs.dwh_sales_consolidated ) e on m.ordeR_name = e.reference_code ) x full outer join (select date ,\'GOOGLE\' as channel_pre ,replace(google,\',\',\'\')::float spend from datalake_db.justherbs.trn_spends_jh) y on x.ORDER_TIMESTAMP_PRE::date = y.date and upper(x.channel_pre) = y.channel_pre full outer join (select date ,\'META\' as channel_pre ,replace(meta,\',\',\'\')::float spend from datalake_db.justherbs.trn_spends_jh) z on x.ORDER_TIMESTAMP_PRE::date = z.date and upper(x.channel_pre) = z.channel_pre full outer join (select date::date as date ,\'AFFILIATES (CPS)\' as channel_pre ,replace(\"Affiliates (CPS)\",\',\',\'\')::float spend from datalake_db.justherbs.trn_spends_jh ) m on x.ORDER_TIMESTAMP_PRE::date = m.date and upper(x.channel_pre) = m.channel_pre full outer join (select date ,\'CRM\' as channel_pre ,replace(CRM,\',\',\'\') spend from datalake_db.justherbs.trn_spends_jh) n on x.ORDER_TIMESTAMP_PRE::date = n.date and uppeR(x.channel_pre) = n.channel_pre full outer join (select date ,\'PARTNERSHIPS & ALLIANCES (CPE)\' as channel_pre ,replace(\"Partnerships & Alliances (CPE)\",\',\',\'\') spend from datalake_db.justherbs.trn_spends_jh) o on x.ORDER_TIMESTAMP_PRE::date = n.date and upper(x.channel_pre) = o.channel_pre full outer join (select date ,\'NATIVE ADS\' as channel_pre ,replace(\"Native Ads\",\',\',\'\') spend from datalake_db.justherbs.trn_spends_jh) p on x.ORDER_TIMESTAMP_PRE::date = n.date and upper(x.channel_pre) = p.channel_pre full outer join (select date ,\'OTHERS\' as channel_pre ,replace(OTHERS,\',\',\'\') spend from datalake_db.justherbs.trn_spends_jh) q on x.ORDER_TIMESTAMP_PRE::date = n.date and upper(x.channel_pre) = q.channel_pre full outer join (select date ,\'INFLUENCER MARKETING\' as channel_pre ,replace(\"Influencer Marketing\",\',\',\'\') spend from datalake_db.justherbs.trn_spends_jh) r on x.ORDER_TIMESTAMP_PRE::date = n.date and upper(x.channel_pre) = r.channel_pre ; create or replace table prd_db.justherbs.dwh_cltv as select a.ordeR_month ,div0(sum(total_sales), count(distinct customer_id_final)) aov ,div0(sum(spend), count(distinct customer_id_final)) cac ,div0(count(distinct ordeR_name), count(distinct customer_id_final)) apf ,div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0))) gc_percent , div0(AOV*div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0)))*apf,cac) cltv_cac_ratio from ( select distinct date_trunc(\'month\',ORDER_TIMESTAMP::Date) order_month from prd_db.justherbs.dwh_gross_contribution_JH ) a left join prd_db.justherbs.dwh_pandlsummary b on datediff(month,date_trunc(\'month\',b.ORDER_TIMESTAMP::Date),order_month) between 1 and 12 group by 1 order by 1 desc ; create or replace table prd_db.justherbs.dwh_cltv_channel_pre as select a.ordeR_month ,b.channel_pre ,div0(sum(total_sales), count(distinct customer_id_final)) aov ,div0(sum(spend), count(distinct customer_id_final)) cac ,div0(count(distinct ordeR_name), count(distinct customer_id_final)) apf ,div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0))) gc_percent , div0(AOV*div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0)))*apf,cac) cltv_cac_ratio from ( select distinct date_trunc(\'month\',ORDER_TIMESTAMP::Date) order_month from prd_db.justherbs.dwh_gross_contribution_jh ) a left join prd_db.justherbs.dwh_pandlsummary b on datediff(month,date_trunc(\'month\',b.ORDER_TIMESTAMP::Date),order_month) between 1 and 12 group by 1,2 order by 1,2 desc ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from PRD_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            