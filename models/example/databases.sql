{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "with abc as ( select distinct trim(replace(master_sku, \'`\',\'\'))as master_sku, trim(replace(marketplace_sku, \'`\',\'\')) as marketplace_sku from HOX_DB.MapleMonk.sku_master ), base as ( select o.*, concat(\"Component 1 - SKU\", \' @ \', \"Component 2 - SKU\", \' @ \', \"Component 3 - SKU\",\' @ \', \"Component 4 - SKU\", \' @ \', \"Component 5 - SKU\", \' @ \', \"Component 6 - SKU\",\' @ \', \"Component 7 - SKU\", \' @ \', \"Component 8 - SKU\", \' @ \', \"Component 9 - SKU\",\' @ \', \"Component 10 - SKU\", \' @ \', \"Component 11 - SKU\", \' @ \', \"Component 12 - SKU\",\' @ \', \"Component 13 - SKU\", \' @ \', \"Component 14 - SKU\", \' @ \', \"Component 15 - SKU\",\' @ \', \"Component 16 - SKU\", \' @ \', \"Component 17 - SKU\", \' @ \', \"Component 18 - SKU\",\' @ \', \"Component 19 - SKU\", \' @ \', \"Component 20 - SKU\" )as new_sku from ( select distinct \"PARENT SKU\", ifnull(\"Component 1 - SKU\", \'\') as \"Component 1 - SKU\", ifnull(\"Component 2 - SKU\", \'\') as \"Component 2 - SKU\", ifnull(\"Component 3 - SKU\", \'\') as \"Component 3 - SKU\", ifnull(\"Component 4 - SKU\", \'\') as \"Component 4 - SKU\", ifnull(\"Component 5 - SKU\", \'\') as \"Component 5 - SKU\", ifnull(\"Component 6 - SKU\", \'\') as \"Component 6 - SKU\", ifnull(\"Component 7 - SKU\", \'\') as \"Component 7 - SKU\", ifnull(\"Component 8 - SKU\", \'\') as \"Component 8 - SKU\", ifnull(\"Component 9 - SKU\", \'\') as \"Component 9 - SKU\", ifnull(\"Component 10 - SKU\", \'\') as \"Component 10 - SKU\", ifnull(\"Component 11 - SKU\", \'\') as \"Component 11 - SKU\", ifnull(\"Component 12 - SKU\", \'\') as \"Component 12 - SKU\", ifnull(\"Component 13 - SKU\", \'\') as \"Component 13 - SKU\", ifnull(\"Component 14 - SKU\", \'\') as \"Component 14 - SKU\", ifnull(\"Component 15 - SKU\", \'\') as \"Component 15 - SKU\", ifnull(\"Component 16 - SKU\", \'\') as \"Component 16 - SKU\", ifnull(\"Component 17 - SKU\", \'\') as \"Component 17 - SKU\", ifnull(\"Component 18 - SKU\", \'\') as \"Component 18 - SKU\", ifnull(\"Component 19 - SKU\", \'\') as \"Component 19 - SKU\", ifnull(\"Component 20 - SKU\", \'\') as \"Component 20 - SKU\" from hox_db.maplemonk.sku_map_parent_child_easyecom )as o ), base_sample as ( select base.\"PARENT SKU\" as parent_sku, replace(replace(trim(split_part(trim(replace(Y.VALUE,\'\"\',\'\')), \'&\' , 1)),\'\\'\',\'\'),\'`\',\'\') as new_sku, trim(split_part(trim(replace(Y.VALUE,\'\"\',\'\')), \'&\' , 2)) as item_count from base , LATERAL FLATTEN(INPUT => SPLIT(new_sku, \'@\'))Y where trim(split_part(trim(replace(Y.VALUE,\'\"\',\'\')), \'&\' , 1)) <> \'\' ) select distinct o.* , a.parent_sku , case when (a.new_sku = \'\' or a.new_sku is null) then o.master_sku else a.new_sku end as new_sku, case when (a.item_count = \'\' or a.item_count is null) then 1 else a.item_count end as item_count from ( select distinct o.* , case when a.master_sku is null then o.sku_code else a.master_sku end as master_sku from ( select distinct sku_code from HOX_DB.MapleMonk.HOX_DB_SALES_CONSOLIDATED union select distinct marketplace_sku from abc )o left join abc a on lower(o.sku_code) = lower(a.marketplace_sku) where o.sku_code <> \'\' )as o left join base_sample a on lower(o.master_sku) = lower(a.parent_sku) inner join HOX_DB.MapleMonk.HOX_DB_SALES_CONSOLIDATED b on lower(o.sku_code) = lower(b.sku_code)",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from HOX_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        