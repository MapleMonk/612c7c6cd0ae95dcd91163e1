{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE snitch_db.maplemonk.offline_stores_cohorts AS ( WITH customer_first_purchase AS ( SELECT phone, marketplace, MIN(DATE_TRUNC(\'MONTH\', order_date)) AS first_purchase_month FROM snitch_db.maplemonk.STORE_fact_items_offline WHERE phone != \'9999999999\' GROUP BY phone, marketplace ), monthly_orders AS ( SELECT phone, marketplace, DATE_TRUNC(\'MONTH\', order_date) AS sale_month, COUNT(DISTINCT order_id) AS order_count FROM snitch_db.maplemonk.STORE_fact_items_offline GROUP BY phone, marketplace, DATE_TRUNC(\'MONTH\', order_date) ORDER BY sale_month DESC ), customer_retention AS ( SELECT cfp.phone, cfp.marketplace, cfp.first_purchase_month, mo.sale_month, EXTRACT(YEAR FROM mo.sale_month) * 12 + EXTRACT(MONTH FROM mo.sale_month) - (EXTRACT(YEAR FROM cfp.first_purchase_month) * 12 + EXTRACT(MONTH FROM cfp.first_purchase_month)) AS month_diff FROM customer_first_purchase cfp JOIN monthly_orders mo ON cfp.phone = mo.phone AND cfp.marketplace = mo.marketplace WHERE mo.sale_month >= cfp.first_purchase_month ), m0_customers AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 0 THEN cr.phone END) AS m0_customers FROM customer_retention cr GROUP BY cr.first_purchase_month, cr.marketplace ), m1_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 1 THEN cr.phone END) AS m1_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m2_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 2 THEN cr.phone END) AS m2_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m3_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 3 THEN cr.phone END) AS m3_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m4_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 4 THEN cr.phone END) AS m4_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m5_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 5 THEN cr.phone END) AS m5_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m6_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 6 THEN cr.phone END) AS m6_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m7_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 7 THEN cr.phone END) AS m7_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m8_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 8 THEN cr.phone END) AS m8_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m9_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 9 THEN cr.phone END) AS m9_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m10_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 10 THEN cr.phone END) AS m10_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m11_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 11 THEN cr.phone END) AS m11_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ), m12_retention AS ( SELECT cr.first_purchase_month, cr.marketplace, COUNT(DISTINCT CASE WHEN cr.month_diff = 12 THEN cr.phone END) AS m12_customers FROM customer_retention cr WHERE EXISTS ( SELECT 1 FROM customer_retention cr_prev WHERE cr_prev.phone = cr.phone AND cr_prev.marketplace = cr.marketplace AND cr_prev.month_diff = 0 ) GROUP BY cr.first_purchase_month, cr.marketplace ) SELECT m1.first_purchase_month, m1.marketplace, m0.m0_customers, m1.m1_customers, ROUND((m1.m1_customers::float / m0.m0_customers) * 100, 2) AS m1_retention_rate, m2.m2_customers, ROUND((m2.m2_customers::float / m0.m0_customers) * 100, 2) AS m2_retention_rate, m3.m3_customers, ROUND((m3.m3_customers::float / m0.m0_customers) * 100, 2) AS m3_retention_rate, m4.m4_customers, ROUND((m4.m4_customers::float / m0.m0_customers) * 100, 2) AS m4_retention_rate, m5.m5_customers, ROUND((m5.m5_customers::float / m0.m0_customers) * 100, 2) AS m5_retention_rate, m6.m6_customers, ROUND((m6.m6_customers::float / m0.m0_customers) * 100, 2) AS m6_retention_rate, m7.m7_customers, ROUND((m7.m7_customers::float / m0.m0_customers) * 100, 2) AS m7_retention_rate, m8.m8_customers, ROUND((m8.m8_customers::float / m0.m0_customers) * 100, 2) AS m8_retention_rate, m9.m9_customers, ROUND((m9.m9_customers::float / m0.m0_customers) * 100, 2) AS m9_retention_rate, m10.m10_customers, ROUND((m10.m10_customers::float / m0.m0_customers) * 100, 2) AS m10_retention_rate, m11.m11_customers, ROUND((m11.m11_customers::float / m0.m0_customers) * 100, 2) AS m11_retention_rate, m12.m12_customers, ROUND((m12.m12_customers::float / m0.m0_customers) * 100, 2) AS m12_retention_rate FROM m1_retention m1 LEFT JOIN m2_retention m2 ON m1.first_purchase_month = m2.first_purchase_month AND m1.marketplace = m2.marketplace LEFT JOIN m3_retention m3 ON m1.first_purchase_month = m3.first_purchase_month AND m1.marketplace = m3.marketplace LEFT JOIN m4_retention m4 ON m1.first_purchase_month = m4.first_purchase_month AND m1.marketplace = m4.marketplace LEFT JOIN m5_retention m5 ON m1.first_purchase_month = m5.first_purchase_month AND m1.marketplace = m5.marketplace LEFT JOIN m6_retention m6 ON m1.first_purchase_month = m6.first_purchase_month AND m1.marketplace = m6.marketplace LEFT JOIN m7_retention m7 ON m1.first_purchase_month = m7.first_purchase_month AND m1.marketplace = m7.marketplace LEFT JOIN m8_retention m8 ON m1.first_purchase_month = m8.first_purchase_month AND m1.marketplace = m8.marketplace LEFT JOIN m9_retention m9 ON m1.first_purchase_month = m9.first_purchase_month AND m1.marketplace = m9.marketplace LEFT JOIN m10_retention m10 ON m1.first_purchase_month = m10.first_purchase_month AND m1.marketplace = m10.marketplace LEFT JOIN m11_retention m11 ON m1.first_purchase_month = m11.first_purchase_month AND m1.marketplace = m11.marketplace LEFT JOIN m12_retention m12 ON m1.first_purchase_month = m12.first_purchase_month AND m1.marketplace = m12.marketplace LEFT JOIN m0_customers m0 ON m1.first_purchase_month = m0.first_purchase_month AND m1.marketplace = m0.marketplace ORDER BY m1.first_purchase_month ASC );",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        