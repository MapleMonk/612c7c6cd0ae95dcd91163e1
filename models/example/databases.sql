{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table XYXX_DB.MAPLEMONK.XYXX_SHOPPERS_STOP_FACT_ITEMS as select \'SHOPPERS STOP\' MT_CHANNEL ,try_to_date(\"Selling Date\") SELLING_DATE ,try_to_date(\"Posting Date\") POSTING_DATE ,\"Barcode Scanned for Billing\" EAN ,\"SKU No\" STORE_SKU ,\"Partner Part No\" XYXX_SKU_BY_STORE ,\"Style Code\" STORE_STYLE_CODE ,upper(category) STORE_PRODUCT_CATEGORY ,upper(\"Sub Category\") STORE_PRODUCT_SUB_CATEGORY ,upper(\"Style Desc\") STORE_PRODUCT_STYLE_DESCRIPTION ,upper(\"Colour Desc\") STORE_PRODUCT_COLOR_DESCRIPTION ,upper(\"Size Desc\") STORE_PRODUCT_SIZE ,SSSALES.\"STORE CODE\" STORE_CODE ,upper(LOCATION) STORE_LOCATION ,upper(STOREMAP.CITY) MAPPED_STORE_CITY ,upper(STOREMAP.STATE) MAPPED_STORE_STATE ,upper(STOREMAP.\"Store Name\") MAPPED_STORE_NAME ,try_to_decimal(\"Qty Sold\") Quantity_Sold ,try_to_decimal(\"Actual Retail Value\") GROSS_SALES ,try_to_decimal(\"Disc Amt\") DISCOUNT ,try_to_decimal(\"Net Retail Value\") NET_SALES from XYXX_DB.MAPLEMONK.mt_google_sheet_ss_sale SSSALES left join (select * from (select * , row_number() over (partition by \"Store Code\" order by 1) rw from XYXX_DB.MAPLEMONK.mt_google_sheet_ss_store_mapping) where rw=1 ) STOREMAP on lower(SSSALES.\"STORE CODE\") = lower(STOREMAP.\"Store Code\") ; create or replace table XYXX_DB.MAPLEMONK.XYXX_TRENDS_FACT_ITEMS as select \'TRENDS\' MT_CHANNEL ,try_to_date(DATE,\'dd.mm.yyyy\') SELLING_DATE ,try_to_date(DATE,\'dd.mm.yyyy\') POSTING_DATE ,EAN ,\"ARTICLE CODE\" STORE_SKU ,null as XYXX_SKU_BY_STORE ,\"STYLE CODE\" STORE_STYLE_CODE ,upper(FAMILY) STORE_PRODUCT_CATEGORY ,upper(FAMILY) STORE_PRODUCT_SUB_CATEGORY ,upper(CATEGORY) as STORE_PRODUCT_STYLE_DESCRIPTION ,null as STORE_PRODUCT_COLOR_DESCRIPTION ,null as STORE_PRODUCT_SIZE ,TRENDSSALES.\"STORE ID\" STORE_CODE ,upper(LOCATION) STORE_LOCATION ,upper(STOREMAP.CITY) MAPPED_STORE_CITY ,upper(STOREMAP.STATE) MAPPED_STORE_STATE ,upper(STOREMAP.\"Store Name\") MAPPED_STORE_NAME ,try_to_decimal(\"Total Sales Quantity / Base Unit (A)\") Quantity_Sold ,try_to_decimal(\"Gross Sales (B)\") GROSS_SALES ,try_to_decimal(\"Total Discount (C=C1+C2)\") DISCOUNT ,try_to_decimal(\"Net Sales With Tax (D = B-C)\") NET_SALES ,try_to_decimal(\"Tax Amount (E)\") TAX ,try_to_decimal(\"Net Sales Without Tax (F =D-E)\") NET_SALES_WO_TAX from XYXX_DB.MAPLEMONK.mt_google_sheet_trends_sale TRENDSSALES left join (select * from (select * , row_number() over (partition by \"STORE CODE\" order by 1) rw from XYXX_DB.MAPLEMONK.mt_google_sheet_trends_store_mapping) where rw=1 ) STOREMAP on lower(TRENDSSALES.\"STORE ID\") = lower(STOREMAP.\"STORE CODE\") ; create or replace table XYXX_DB.MAPLEMONK.XYXX_AZORTE_FACT_ITEMS as select \'AZORTE\' MT_CHANNEL ,try_to_date( \"Month, Day, Year of Billing Date\",\'MMMM dd, yyyy\' ) SELLING_DATE ,try_to_date( \"Month, Day, Year of Billing Date\",\'MMMM dd, yyyy\' ) POSTING_DATE ,\"EAN Codes\" EAN ,ARTICLE STORE_SKU ,null as XYXX_SKU_BY_STORE ,null STORE_STYLE_CODE ,upper(\"MH Segment\") STORE_PRODUCT_CATEGORY ,upper(\"MH Family\") STORE_PRODUCT_SUB_CATEGORY ,upper(\"Article Description\") as STORE_PRODUCT_STYLE_DESCRIPTION ,null as STORE_PRODUCT_COLOR_DESCRIPTION ,null as STORE_PRODUCT_SIZE ,AZORTESALES.SITE STORE_CODE ,null as STORE_LOCATION ,upper(STOREMAP.CITY) MAPPED_STORE_CITY ,upper(STOREMAP.STATE) MAPPED_STORE_STATE ,upper(STOREMAP.\"Store Name\") MAPPED_STORE_NAME ,null as Quantity_Sold ,try_to_decimal(\"POS Billing Quantity\") GROSS_SALES ,null as DISCOUNT ,ifnull(GROSS_SALES,0) - ifnull(DISCOUNT,0) as NET_SALES from XYXX_DB.MAPLEMONK.mt_google_sheet_azorte_sale AZORTESALES left join (select * from (select * , row_number() over (partition by \"Store Code\" order by 1) rw from XYXX_DB.MAPLEMONK.mt_google_sheet_azorte_store_mapping) where rw=1 ) STOREMAP on lower(AZORTESALES.SITE) = lower(STOREMAP.\"Store Code\") ; create or replace table XYXX_DB.MAPLEMONK.XYXX_MT_SALES_CONSOLIDATED as with ALLMTSALES as (select MT_CHANNEL ,SELLING_DATE ,POSTING_DATE ,EAN ,STORE_SKU ,XYXX_SKU_BY_STORE ,STORE_STYLE_CODE ,STORE_PRODUCT_CATEGORY ,STORE_PRODUCT_SUB_CATEGORY ,STORE_PRODUCT_STYLE_DESCRIPTION ,STORE_PRODUCT_COLOR_DESCRIPTION ,STORE_PRODUCT_SIZE ,STORE_CODE ,STORE_LOCATION ,MAPPED_STORE_CITY ,MAPPED_STORE_STATE ,MAPPED_STORE_NAME ,ifnull(Quantity_Sold,0) QUANTITY_SOLD ,ifnull(GROSS_SALES,0) GROSS_SALES ,ifnull(DISCOUNT,0) DISCOUNT ,ifnull(NET_SALES,0) NET_SALES from XYXX_DB.MAPLEMONK.XYXX_SHOPPERS_STOP_FACT_ITEMS union all select MT_CHANNEL ,SELLING_DATE ,POSTING_DATE ,EAN ,STORE_SKU ,XYXX_SKU_BY_STORE ,STORE_STYLE_CODE ,STORE_PRODUCT_CATEGORY ,STORE_PRODUCT_SUB_CATEGORY ,STORE_PRODUCT_STYLE_DESCRIPTION ,STORE_PRODUCT_COLOR_DESCRIPTION ,STORE_PRODUCT_SIZE ,STORE_CODE ,STORE_LOCATION ,MAPPED_STORE_CITY ,MAPPED_STORE_STATE ,MAPPED_STORE_NAME ,ifnull(Quantity_Sold,0) QUANTITY_SOLD ,ifnull(GROSS_SALES,0) GROSS_SALES ,ifnull(DISCOUNT,0) DISCOUNT ,ifnull(NET_SALES,0) NET_SALES from XYXX_DB.MAPLEMONK.XYXX_TRENDS_FACT_ITEMS union all select MT_CHANNEL ,SELLING_DATE ,POSTING_DATE ,EAN ,STORE_SKU ,XYXX_SKU_BY_STORE ,STORE_STYLE_CODE ,STORE_PRODUCT_CATEGORY ,STORE_PRODUCT_SUB_CATEGORY ,STORE_PRODUCT_STYLE_DESCRIPTION ,STORE_PRODUCT_COLOR_DESCRIPTION ,STORE_PRODUCT_SIZE ,STORE_CODE ,STORE_LOCATION ,MAPPED_STORE_CITY ,MAPPED_STORE_STATE ,MAPPED_STORE_NAME ,ifnull(Quantity_Sold,0) Quantity_Sold ,ifnull(GROSS_SALES,0) GROSS_SALES ,ifnull(DISCOUNT,0) DISCOUNT ,NET_SALES from XYXX_DB.MAPLEMONK.XYXX_AZORTE_FACT_ITEMS ) select ALLMTSALES.* ,ifnull(try_to_decimal(MTSKU.MRP),0) MRP_FROM_SKU_MASTER ,upper(MTSKU.SIZE) SIZE_FROM_SKU_MASTER ,ifnull(try_to_decimal(MTSKU.COST),0) COST_FROM_SKU_MASTER ,upper(MTSKU.RANGE) RANGE_FROM_SKU_MASTER ,upper(MTSKU.COLOUR) COLOR_FROM_SKU_MASTER ,upper(MTSKU.PACKOF) PACKOF_FROM_SKU_MASTER ,upper(MTSKU.CATEGORY) PRODUCT_CATEGORY_FROM_SKU_MASTER ,MTSKU.\"STYLENUMBER/ArticleNo.\" STYLE_NO_FROM_SKU_MASTER ,upper(MTSKU.\"CATEGORY/GROUP-3\") CATEGORY_3_SKU_MASTER from ALLMTSALES left join XYXX_DB.MAPLEMONK.mt_google_sheet_xyxx_mt_sku_master_sheet MTSKU on ALLMTSALES.EAN = MTSKU.EAN ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from XYXX_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        