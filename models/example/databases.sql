{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE SNITCH_DB.MAPLEMONK.sku_group_sample_to_live as with live_date as ( SELECT sku_group,published_at as live_date FROM ( SELECT *, REVERSE(SUBSTRING(REVERSE(REPLACE(A.value:sku, \'\"\"\', \'\')), CHARINDEX(\'-\', REVERSE(REPLACE(A.value:sku, \'\"\"\', \'\'))) + 1)) AS sku_group, ROW_NUMBER() OVER (PARTITION BY sku_group ORDER BY updated_at DESC) AS rw FROM snitch_db.maplemonk.shopify_all_products, LATERAL FLATTEN (input => variants) A ) WHERE rw = 1 ), catalog AS ( SELECT SKU_GROUP, STATUS, latest_inward_date::date as latest_inward_date, new_inward_flag, SUM(units_on_hand) AS units_on_hand FROM snitch_db.maplemonk.Inventory_planning_summary_snitch GROUP BY SKU_GROUP, new_inward_flag, STATUS, latest_inward_date HAVING SUM(units_on_hand) > 0 ), PSLJ AS( SELECT a.SKU as sku_group, b.live_date, a.\"Factory_\'\", a.owner, max(try_to_date(a.Sample_Received_Date, \'DD/MM/YYYY\')) as Sample_Received_Date, a.Photoshoot_Status, a.IMAGE_SELECTION, a.catalogix, max(try_to_date(a.live_on_shopify_date, \'DD/MM/YYYY\')) as live_on_shopify_date, max(try_to_date(a.completion_date, \'DD/MM/YYYY\')) as edited_date, max(try_to_date(a.shoot_date, \'DD/MM/YYYY\')) as shoot_date, FROM snitch_db.maplemonk.shoot_pslj a left join live_date b on a.sku = b.sku_group group by 1,2,3,4,6,7,8 ), RTS AS ( SELECT SKU as sku_group, CLASS, REPEAT, VENDOR, WAEHOUSE, DESCIPTON, to_date(DELIVEY_DATE_, \'DD/MM/YYYY\') AS DELIVERY_DATE, online_qty, QC_STATUS, QC_REPORT FROM snitch_db.maplemonk.catalog_main where to_date(DELIVEY_DATE_, \'DD/MM/YYYY\') >= current_date ) select coalesce(a.sku_group,c.SKU_GROUP) as sku_group, a.Sample_Received_Date::date as sample_received_date, a.live_date::date as live_date, a.shoot_date::date as shoot_date, a.edited_date, c.units_on_hand, c.latest_inward_date as inward_date, c.status, a.catalogix, DATEDIFF(day, a.Sample_Received_Date, a.live_date) AS sr_live_tat, DATEDIFF(day, a.Sample_Received_Date, a.shoot_date) AS sr_shoot_tat, DATEDIFF(day, a.shoot_date, a.edited_date) AS shoot_edited_tat, DATEDIFF(day, a.Sample_Received_Date, a.live_date)-DATEDIFF(day, a.Sample_Received_Date, a.shoot_date)-DATEDIFF(day, a.shoot_date, a.edited_date) as edited_catalogics_tat, CASE WHEN status IN (\'draft\', \'Not in Shopify\') AND a.Sample_Received_Date IS NOT NULL AND a.shoot_date IS NOT NULL AND a.edited_date IS NOT NULL AND c.latest_inward_date IS NOT NULL THEN \'catalogics\' WHEN status IN (\'draft\', \'Not in Shopify\') AND a.Sample_Received_Date IS NOT NULL AND a.shoot_date IS NOT NULL AND c.latest_inward_date IS NOT NULL THEN \'editing\' WHEN status IN (\'draft\', \'Not in Shopify\') AND a.Sample_Received_Date IS NOT NULL AND c.latest_inward_date IS NOT NULL THEN \'shoot\' WHEN status IN (\'draft\', \'Not in Shopify\') AND a.Sample_Received_Date IS NOT NULL THEN \'inward\' when status IN (\'draft\', \'Not in Shopify\') and c.latest_inward_date is not null then \'sample_recieved_issue\' ELSE \'None\' END AS final_status from PSLJ a full outer join catalog c on a.sku_group=c.sku_group",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            