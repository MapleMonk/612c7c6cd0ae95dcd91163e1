{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.maplemonk.Inventory_planning_summary_snitch as select a.sku, case when e.status is NULL then \'Not in Shopify\' else e.status end as status, case when right(a.sku,2) = \'-S\' then left(a.sku,len(a.sku)-2) else replace(a.sku,concat(\'-\',split_part(a.sku,\'-\',-1)),\'\') end sku_group, case when category = \'Underpants\' then \'Boxers + Innerwear + Pyjamas\' when category = \'Sweatshirt\' then \'Sweaters\' when category = \'Cargo\' then \'BottomWear\' when category = \'Denim\' then \'Denim\' when category = \'Jacket\' then \'Jackets\' when category = \'T-Shirt\' then \'T-Shirts\' when category = \'Shirt\' then \'Shirts\' when category = \'Jogger\' then \'Joggers\' when category = \'Pyjama\' then \'Boxers + Innerwear + Pyjamas\' when category = \'Perfumes\' then \'Perfume & Cologne\' when category = \'Shorts\' then \'Shorts\' when category = \'Jogsuit\' then \'Joggers\' when category = \'Accessories\' then \'Accessories\' when category = \'Sweater\' then \'Sweaters\' when category = \'Trouser\' then \'BottomWear\' when category = \'Co-Ords\' then \'Co-Ords\' when category = \'Chino\' then \'BottomWear\' when category = \'Boxer\' then \'Boxers + Innerwear + Pyjamas\' end as category_mapped, product_name_shopify, a.units_on_hand, a.units_on_hand*b.mrp Inventory_on_hand, c.revenue, c.quantity*d.latest_cost COGS, f.latest_inward_Date, g.first_ordeR_date, case when g.first_ordeR_date is null then \'New\' when g.first_ordeR_date >= f.latest_inward_Date then \'New\' when g.first_ordeR_date < f.latest_inward_Date then \'Repeat\' end as new_inward_flag, sum(case when a.units_on_hand >=10 then 1 else 0 end) over (partition by case when right(a.sku,2) = \'-S\' then left(a.sku,len(a.sku)-2) else replace(a.sku,concat(\'-\',split_part(a.sku,\'-\',-1)),\'\') end ) sku_inventory_greater_than_10_flag from (select \"Item Type skuCode\" sku, category, \"Item Type Name\" product_name, count(distinct \"Item Code\") Units_on_hand from snitch_db.maplemonk.unicommerce_inventory_aging group by 1,2,3 order by 4 desc) a left join ( select sku, MRP, product_name_shopify from ( select sku, MRP, product_name_shopify,row_number() over (partition by sku order by order_date desc) rw from snitch_db.maplemonk.unicommerce_fact_items_snitch) where rw=1) b on a.sku = b.sku full outer join ( select sku, sum(selling_price) revenue, sum(subordeR_quantity) quantity, sum(suborder_quantity*mrp) mrp_sales from snitch_db.maplemonk.unicommerce_fact_items_snitch where order_date::date >= getdate()::date-30 group by 1 )c on a.sku = c.sku left join ( select sku, latest_cost from (select \"Item Type skuCode\" sku, \"Unit price with tax\" latest_cost, row_number() over (partition by \"Item Type skuCode\" order by left(\"Item Created On\",10)::date desc) rw from snitch_db.maplemonk.unicommerce_inventory_aging ) where rw = 1 )d on a.sku = d.sku left join ( select sku, status from( select b.value:\"sku\" as SKU, status, row_number() over (partition by b.value:\"sku\" order by updated_at desc) rw from snitch_db.MAPLEMONK.SHOPIFY_ALL_PRODUCTS, lateral flatten (INPUT => variants)b ) where rw = 1 ) e on a.sku=e.sku left join ( select sku_group, date as latest_inward_Date from ( select *, row_number() over (partition by sku_group order by quantity desc) rw from( select case when right(\"Item Type skuCode\",2) = \'-S\' then left(\"Item Type skuCode\",len(\"Item Type skuCode\")-2) else replace(\"Item Type skuCode\",concat(\'-\',split_part(\"Item Type skuCode\",\'-\',-1)),\'\') end sku_group ,left(\"Item Created On\",10)::date date ,count(distinct \"Item Code\") quantity from snitch_db.maplemonk.unicommerce_itembarcode_report where \"Inventory type\" = \'GOOD_INVENTORY\' group by 1,2 ) where quantity > 200) where rw = 1 ) f on case when right(a.sku,2) = \'-S\' then left(a.sku,len(a.sku)-2) else replace(a.sku,concat(\'-\',split_part(a.sku,\'-\',-1)),\'\') end = f.sku_group left join ( select sku, min(ordeR_Date::Date) first_order_date from snitch_db.maplemonk.unicommerce_fact_items_snitch group by 1 )g on a.sku = g.sku order by units_on_hand desc ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        