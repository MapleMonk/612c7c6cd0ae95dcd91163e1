{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE snitch_db.maplemonk.warehouse_sla_performance AS WITH unicom AS ( SELECT awb, MARKETPLACE, marketplace_mapped, shippingpackagecode, order_id, order_name, sku, order_status, order_date, order_timestamp, SHIPPING_LAST_UPDATE_TIMESTAMP, shipping_courier, warehouse_name, shipping_status, CASE WHEN SALE_ORDER_ITEM_STATUS = \'PICKING_FOR_INVOICING\' THEN shippingpackagestatus ELSE SALE_ORDER_ITEM_STATUS END AS Item_Status, dispatched_timestamp AS \"UC_Dispatched\", dispatch_date, delivered_date, days_to_dispatch, days_in_shipment, dispatch_to_delivery_days, item_details, CASE WHEN ITEM_STATUS = \'UNFULFILLABLE\' THEN \'UNFULFILLABLE\' ELSE ITEM_STATUS END AS ITEM_STATUS_1, CASE WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 0 THEN \'D0\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 1 THEN \'D1\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 2 THEN \'D2\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 3 THEN \'D3\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 3 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 5 THEN \'D>3\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 5 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 7 THEN \'D>5\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 7 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 10 THEN \'D>7\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 10 THEN \'D>10\' ELSE NULL END AS Ageing, category FROM snitch_db.maplemonk.unicommerce_fact_items_intermediate ), unicommerce_get_orders as ( SELECT ORDER_ID, FULFILLMENT_TAT FROM ( SELECT REPLACE(saleorderdto:code, \'\"\', \'\') AS order_id, CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', DATEADD(\'ms\', saleorderdto:fulfillmentTat, \'1970-01-01\')) AS fulfillment_tat, ROW_NUMBER() OVER (PARTITION BY order_id ORDER BY 1) RN FROM snitch_db.maplemonk.SNITCH_UNICOMMERCE_GET_ORDERS_BY_IDS_TEST, LATERAL FLATTEN (INPUT => saleorderdto:shippingPackages) sps ) WHERE RN = 1 ), forward AS ( SELECT created_timestamp, picking_timestamp, picked_timestamp, packed_timestamp, manifested_timestamp, dispatched_timestamp, \"created&dispatch\", \"pick&dispatch\", \"pack&dispatch\" FROM snitch_db.maplemonk.forward_timestamps ), clickpost as ( SELECT \"Order Date\" AS \"CP_orderplaced\", \"Pickup Date\" AS \"CP_Pickup\", \"Delivery Date\" AS \"CP_Delivery\" FROM snitch_db.maplemonk.snitch_clickpost_track_order_dashboard_report ), sr AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_SR ), wh AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_WH ), wh2 AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_WH2 ), emiza AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_EMIZA ), marketplace AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_MARKET_PLACE_ERROR_ORDERS ), fullfilment as ( select a.*,b.FULFILLMENT_TAT, case WHEN upper(a.MARKETPLACE) = \'SHOPIFY\' and (EXTRACT(HOUR FROM a.order_timestamp)) < 16 then DATE_TRUNC(\'day\', a.order_timestamp::timestamp) + INTERVAL \'18 hours\' WHEN upper(a.MARKETPLACE) = \'SHOPIFY\' and (EXTRACT(HOUR FROM a.order_timestamp)) >= 16 then DATE_TRUNC(\'day\', DATEADD(DAY, 1, a.order_timestamp)::timestamp) + INTERVAL \'18 hours\' else b.fulfillment_tat end AS TAT, CASE WHEN TAT > CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', GETDATE()) AND a.ITEM_STATUS_1 IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURNED\') THEN \'FUTURE DATE-COMPLETED\' WHEN TAT > CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', GETDATE()) AND a.ITEM_STATUS_1 NOT IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURNED\') THEN \'FUTURE DATE-PENDING\' ELSE CASE WHEN a.ITEM_STATUS_1 IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURN_EXPECTED\') THEN CASE WHEN a.\"UC_Dispatched\" < TAT THEN \'WITHIN SLA\' ELSE \'BREACHED\' END WHEN a.ITEM_STATUS_1 = \'CANCELLED\' THEN CASE WHEN a.\"UC_Dispatched\" IS NULL THEN \'CANCELLED\' ELSE CASE WHEN a.\"UC_Dispatched\" < TAT THEN \'WITHIN SLA\' ELSE \'BREACHED\' END END WHEN a.ITEM_STATUS_1 IN (\'CREATED\', \'MANIFESTED\', \'PICKING\', \'PICKED\', \'PACKED\', \'READY_TO_SHIP\', \'PICKING_FOR_INVOICING\', \'FULFILLABLE\', \'UNFULFILLABLE\') THEN \'BREACHED - PENDING FOR PROCESS\' ELSE \'BREACHED\' END END AS SLA_Status, CASE WHEN a.marketplace_mapped = \'MYNTRA\' THEN CASE WHEN lower(SLA_Status) = \'cancelled\' THEN \'CANCELLED\' WHEN lower(SLA_STATUS) NOT IN (\'cancelled\',\'within sla\', \'breached\',\'future date-completed\') THEN \'PENDING\' ELSE CASE WHEN a.category IN (\'Accessories\', \'Sunglass\', \'Shorts\', \'Pyjama\', \'Boxer\', \'Co-ords\', \'Jogsuit\', \'Underpants\') AND a.item_details IS NULL THEN \'CORRECT\' WHEN lower(a.item_details) LIKE \'%mp%\' THEN \'CORRECT\' ELSE \'INCORRECT\' END END ELSE \'OTHER CHANNEL\' END AS Myntra_Tag_Loops, from unicom a left join unicommerce_get_orders b on a.order_id = b.order_id ), unicom_enriched AS ( SELECT u.*, COALESCE(sr.Warehouse, wh.Warehouse, wh2.Warehouse, emiza.Warehouse, marketplace.Warehouse) AS Warehouse, CASE WHEN sr.Warehouse IS NOT NULL THEN \'sr\' WHEN wh.Warehouse IS NOT NULL THEN \'wh\' WHEN wh2.Warehouse IS NOT NULL THEN \'wh2\' WHEN emiza.Warehouse IS NOT NULL THEN \'emiza\' WHEN marketplace.Warehouse IS NOT NULL THEN \'marketplace\' ELSE NULL END AS Error_Type FROM fullfilment u LEFT JOIN sr ON u.order_id = sr.\"Order ID\" LEFT JOIN wh ON u.order_id = wh.\"Order ID\" LEFT JOIN wh2 ON u.order_id = wh2.\"Order ID\" LEFT JOIN emiza ON u.order_id = emiza.\"Order ID\" LEFT JOIN marketplace ON u.order_id = marketplace.\"Order ID\" ), main_data AS ( SELECT ue.*, CASE WHEN ue.Error_Type IS NOT NULL THEN 1 ELSE NULL END AS Error FROM unicom_enriched ue ) SELECT * FROM main_data uc WHERE uc.warehouse_name like \'%SAPL%\' OR uc.warehouse_name is null;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        