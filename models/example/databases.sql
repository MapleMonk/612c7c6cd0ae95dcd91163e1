{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table xyxx_db.maplemonk.Employee_Date_Outlet_Activity_Track as with employee as ( select distinct empoyeeerpid, min(date) as first_date,zone,territory from fieldassist_outlet_employee_date_xyxx where empoyeeerpid is not null group by 1,3,4 ),firstvisit as ( select k.outleterpid,k.empoyeeerpid,zone,territory,min(k.date) as first_visit from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx k group by 1,2,3,4 ) ,visits as ( select date_trunc(month ,fc.date) date, fc.empoyeeerpid,zone,territory, count(distinct case when finaloutletfistsaledate is not null and fc.first_visit < date_trunc(month ,date) then outleterpid end) as active_outlets_visited, count(distinct case when finaloutletfistsaledate is not null and fc.first_visit < date_trunc(month ,date) and fc.productive = \'true\' then outleterpid end) as visited_active_outlets_with_sales, count(distinct case when finaloutletfistsaledate is null and fc.first_visit < date_trunc(month ,date) then outleterpid end) as inactive_outlets_visited from (select m.*,f.first_visit from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx m left join firstvisit f on f.first_visit <= m.date and f.empoyeeerpid = m.empoyeeerpid and f.outleterpid = m.outleterpid and m.zone=f.zone and m.territory = f.territory ) fc group by 1,2,3,4 order by 1 desc ) select distinct a.month, a.empoyeeerpid,a.zone,a.territory,a.outlets,a.active_outlets,a.inactive_outlets, v.active_outlets_visited, v.visited_active_outlets_with_sales, v.inactive_outlets_visited, b.new_outlets_visited, b.new_active as New_Active_outlets, b.inactive2active as Inactiveoutlet_turnedactive from ( select a1.*,a2.active_outlets,(case when a1.outlets > a2.active_outlets then (a1.outlets-a2.active_outlets) else 0 end) as inactive_outlets from ( with cte as ( select distinct date_trunc(month ,x1.date) month ,e.empoyeeerpid,e.zone,e.territory from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx x1 left join employee e on date_trunc(month ,x1.date) > date_trunc(month,e.first_date) and x1.empoyeeerpid = e.empoyeeerpid ) select a.month ,a.empoyeeerpid,a.zone,a.territory,count(distinct b.outleterpid) as outlets from cte a left join (select distinct date ,empoyeeerpid,zone,territory,outleterpid from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx ) b on a.month > b.date and a.empoyeeerpid = b.empoyeeerpid and a.zone=b.zone and a.territory = b.territory group by 1,2,3,4 ) a1 left join ( with cte as ( select distinct date_trunc(month ,x1.date) month ,e.empoyeeerpid,e.zone,e.territory from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx x1 left join employee e on date_trunc(month ,x1.date) > date_trunc(month,e.first_date) ) select a.month,a.empoyeeerpid,a.zone,a.territory,count( distinct case when finaloutletfistsaledate::date < month then outleterpid end) active_outlets from cte a left join (select distinct outleterpid,empoyeeerpid,finaloutletfistsaledate,zone,territory from fieldassist_outlet_employee_date_xyxx ) c on a.month> date_trunc(month,c.finaloutletfistsaledate) and a.empoyeeerpid = c.empoyeeerpid and a.zone=c.zone and a.territory =c.territory group by 1,2,3,4 ) a2 on a1.month = a2.month and a1.empoyeeerpid = a2.empoyeeerpid and a1.zone =a2.zone and a1.territory =a2.territory )a left join ( select date_trunc(month,date) date ,empoyeeerpid,zone,territory, count(distinct case when date_trunc(month, mk.first_visit::date) = date_trunc(month,date) then outleterpid end) as new_outlets_visited, count(distinct case when date_trunc(month,mk.first_visit) <> date_trunc(month,date) and date_trunc(month,finaloutletfistsaledate) = date_trunc(month, date) then outleterpid end) as inactive2active ,count(distinct case when date_trunc(month,date) = date_trunc(month,mk.first_visit) and outletstatus_mm = \'New\' then outleterpid end) as new_active from (select kx.*,fv.first_visit from fieldassist_outlet_employee_date_xyxx kx left join firstvisit fv on fv.first_visit <= kx.date and fv.empoyeeerpid = kx.empoyeeerpid and fv.outleterpid = kx.outleterpid and kx.zone=fv.zone and kx.territory = fv.territory ) mk group by 1,2,3,4) b on a.month=b.date and a.empoyeeerpid = b.empoyeeerpid and a.zone=b.zone and a.territory = b.territory left join visits v on a.month = v.date and a.empoyeeerpid = v.empoyeeerpid and a.zone=v.zone and a.territory = v.territory left join (select distinct empoyeeerpid,employeename,zone,territory from fieldassist_outlet_employee_date_xyxx ) x on a.empoyeeerpid = x.empoyeeerpid and a.zone =x.zone and a.territory =x.territory; create or replace table xyxx_db.maplemonk.Date_Outlet_Activity_Track as with areas as ( select distinct zone ,territory , min(date) as first_reach from fieldassist_outlet_employee_date_xyxx group by 1,2 ) ,firstvisit as ( select distinct k.outleterpid,zone,territory,min(k.date) as first_visit from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx k group by 1,2,3 ) ,visits as ( select date_trunc(month ,fc.date) date,zone,territory, count(distinct case when finaloutletfistsaledate is not null and fc.first_visit < date_trunc(month ,date) then outleterpid end) as active_outlets_visited, count(distinct case when finaloutletfistsaledate is not null and fc.first_visit < date_trunc(month ,date) and fc.productive = \'true\' then outleterpid end) as visited_active_outlets_with_sales, count(distinct case when finaloutletfistsaledate is null and fc.first_visit < date_trunc(month ,date) then outleterpid end) as inactive_outlets_visited from (select m.*,f.first_visit from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx m left join firstvisit f on f.first_visit <= m.date and f.outleterpid = m.outleterpid and m.zone=f.zone and m.territory = f.territory ) fc group by 1,2,3 order by 1 desc ) select a.*, v.active_outlets_visited, v.visited_active_outlets_with_sales, v.inactive_outlets_visited, b.new_outlets_visited, b.new_active as New_Active_Outlets, b.inactive2active as InactiveOutlet_turnedactive from ( select a1.*,a2.active_outlets,(case when a1.outlets > a2.active_outlets then (a1.outlets-a2.active_outlets) else 0 end) as inactive_outlets from ( with cte as ( select distinct date_trunc(month ,x1.date ) month, ar.zone, ar.territory from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx x1 left join areas ar on date_trunc(month ,x1.date ) >= ar.first_reach ) select a.*, count(distinct outleterpid) outlets from cte a left join (select distinct date_trunc(month,date) month ,zone, territory, outleterpid from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx ) b on a.month > b.month and a.zone = b.zone and a.territory =b.territory group by 1,2,3 ) a1 left join ( with cte as ( select distinct date_trunc(month ,x1.date ) month, ar.zone, ar.territory from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx x1 left join areas ar on date_trunc(month ,x1.date ) >= ar.first_reach ) select a.*,count( distinct case when finaloutletfistsaledate::date < month then outleterpid end) active_outlets from cte a left join (select distinct outleterpid,zone,territory,finaloutletfistsaledate from fieldassist_outlet_employee_date_xyxx ) c on a.month> date_trunc(month,c.finaloutletfistsaledate) and a.zone=c.zone and a.territory =c.territory group by 1,2,3 ) a2 on a1.month = a2.month and a1.zone=a2.zone and a1.territory =a2.territory )a left join ( select date_trunc(month,date) date ,zone,territory, count(distinct case when date_trunc(month, mk.first_visit::date) = date_trunc(month,date) then outleterpid end) as new_outlets_visited, count(distinct case when date_trunc(month,mk.first_visit) <> date_trunc(month,date) and date_trunc(month,finaloutletfistsaledate) = date_trunc(month, date) then outleterpid end) as inactive2active ,count(distinct case when date_trunc(month,date) = date_trunc(month,mk.first_visit) and date_trunc(month,finaloutletfistsaledate) = date_trunc(month, date) then outleterpid end) as new_active from (select kx.*,fv.first_visit from fieldassist_outlet_employee_date_xyxx kx left join firstvisit fv on fv.first_visit <= kx.date and fv.outleterpid = kx.outleterpid and kx.zone=fv.zone and kx.territory=fv.territory ) mk group by 1,2,3) b on a.month=b.date and a.zone=b.zone and a.territory = b.territory left join visits v on a.month = v.date and a.zone=v.zone and a.territory = v.territory;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from XYXX_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        