{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table snitch_db.maplemonk.sku_group_ad_inventory_check as with sku_group as ( select sku_group,id from (select distinct cast(a.id as varchar) as id, REVERSE(SUBSTRING(REVERSE(b.sku),CHARINDEX(\'-\', REVERSE(b.sku)) + 1)) AS SKU_GROUP ,to_timestamp(replace(b.updated_at,\'\"\',\'\')) as UPDATED_AT , row_number ()over (partition by SKU_group order by b.updated_at desc) as rw , b.price as price,status from snitch_db.MAPLEMONK.SHOPIFY_ALL_PRODUCTS a left join snitch_db.maplemonk.shopifyindia_product_variants b on a.id = b.product_id ) where rw=1 and sku_group is not null and sku_group not in (\'1290\',\'Test1\') ), itemid_clicks as ( select to_date(a.date,\'YYYYMMDD\') as ga_date, cast(a.itemid as varchar) as itemid, b.sku_group, a.itemsViewed as clicks, a.sessions from snitch_db.maplemonk.itemid_sourcemedium_clicks_sessions_app a left join sku_group b on a.itemid=b.id where lower(a.sessionsourcemedium) like \'%facebook%\' or lower(a.sessionsourcemedium) like \'%google%\' union select to_date(a.date,\'YYYYMMDD\') as ga_date, cast(a.itemid as varchar) as itemid, b.sku_group, a.itemsViewed as clicks, a.sessions from snitch_db.maplemonk.itemid_sourcemedium_clicks_sessions_web a left join sku_group b on a.itemid=b.id where lower(a.sessionsourcemedium) like \'%facebook%\' or lower(a.sessionsourcemedium) like \'%google%\' ), sku as ( select ga_date, itemid, sku_group, sum(clicks) as clicks, sum(sessions) as sessions from itemid_clicks group by 1,2,3 ), spends as ( select date, sum(spend) as spends from snitch_db.maplemonk.marketing_consolidated_snitch where channel in (\'Google\',\'Facebook\') group by date ), clicks as ( select ga_date, sum(clicks) as clicks from itemid_clicks group by ga_date ), spend_per_click as ( select a.date,ifnull(div0(a.spends,b.clicks),0) as spend_per_click from spends a left join clicks b on a.date = b.ga_date ), sales_data as ( select order_timestamp::date as order_date, cast(product_id as varchar) as product_id, sku_group, sum(gross_sales) as total_sales, sum(quantity) as total_quantity from snitch_db.maplemonk.fact_items_snitch WHERE lower(ifnull(discount_code,\'n\')) not like \'%eco%\' and lower(ifnull(discount_code,\'n\')) not like \'%influ%\' and order_name not in (\'2431093\',\'2422140\',\'2425364\',\'2430652\',\'2422237\',\'2420623\',\'2429832\',\'2422378\',\'2428311\',\'2429064\',\'2428204\',\'2421343\',\'2431206\',\'2430491\',\'2426682\',\'2426487\',\'2426458\',\'2423575\',\'2422431\',\'2423612\',\'2426625\',\'2428117\',\'2426894\',\'2425461\',\'2426570\',\'2423455\',\'2430777\',\'2426009\',\'2428245\',\'2427269\',\'2430946\',\'2425821\',\'2429986\',\'2429085\',\'2422047\',\'2430789\',\'2420219\',\'2428341\',\'2430444\',\'2426866\',\'2431230\',\'2425839\',\'2430980\',\'2427048\',\'2430597\',\'2420499\',\'2431050\',\'2420271\',\'2426684\',\'2428747\',\'2423523\',\'2431171\',\'2430830\',\'2425325\',\'2428414\',\'2429054\',\'2423596\') and tags not in (\'FLITS_LOGICERP\') group by 1,2,3 ), inventory as ( select sku_group, cast(id as varchar) as id, product_name, case when category in (\'Shirt\', \'Shirts\') then \'Shirts\' when category = \'Denim\' then \'Jeans\' else category end as new_category, available_units, s_units, m_units, l_units, price, sales_last_7_days, sales_last_15_days, sales_last_30_days, from snitch_db.maplemonk.availability_master_v2 where sku_class not in (\'Draft\',\'Not-Cataloged\') ) select a.*, (a.clicks*b.spend_per_click) as spends, ifnull(c.total_sales,0) as total_sales, ifnull(c.total_quantity,0) as total_quantity, d.product_name, d.new_category, d.available_units, d.s_units, d.m_units, d.l_units, d.price, d.sales_last_7_days, d.sales_last_15_days, d.sales_last_30_days from sku a left join spend_per_click b on a.ga_date=b.date left join sales_data c on a.ga_date = c.order_date and a.sku_group = c.sku_group left join inventory d on a.sku_group=d.sku_group",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            