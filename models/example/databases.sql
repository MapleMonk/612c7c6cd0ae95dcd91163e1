{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table VAHDAM_DB.MAPLEMONK.VAHDAM_DB_Amazon_Vendor_central_Sales_consolidated as select SHOP_NAME ,REGION ,ORDER_ID ,ORDER_NAME ,CUSTOMER_ID ,LINE_ITEM_ID ,REFERENCE_CODE ,TAGS ,SKU ,PRODUCT_ID ,CURRENCY ,IS_REFUND ,CITY ,STATE ,COUNTRY ,CATEGORY ,ORDER_STATUS ,ORDER_TIMESTAMP ,LINE_ITEM_SALES ,SHIPPING_PRICE ,QUANTITY ,TAX ,TAX_RATE ,DISCOUNT ,DISCOUNT_BEFORE_TAX ,GROSS_SALES_AFTER_TAX ,GROSS_SALES_BEFORE_TAX ,NET_SALES_BEFORE_TAX ,TOTAL_SALES ,SOURCE ,LANDING_UTM_MEDIUM ,LANDING_UTM_SOURCE ,LANDING_UTM_CAMPAIGN ,REFERRING_UTM_MEDIUM ,REFERRING_UTM_SOURCE ,LANDING_UTM_CHANNEL ,REFERRING_UTM_CHANNEL ,FINAL_UTM_CHANNEL ,CUSTOMER_FLAG ,NEW_CUSTOMER_FLAG ,ACQUISITION_CHANNEL ,ACQUISITION_PRODUCT ,PRODUCT_NAME ,VARIANT_NAME ,SHIPPING_TAX ,SHIP_PROMOTION_DISCOUNT ,GIFT_WRAP_PRICE ,GIFT_WRAP_TAX ,COMMON_SKU ,MAPPED_PRODUCT_NAME ,CATEGORY_1 ,\"Category_2-Type_of_Tea\" ,\"Category_3-Type_of_Product\" ,\"Category_4-Pack_type\" ,\"Mother SKU\" ,WEIGHT ,\"Amazon USA MSRP\" ,BRAND from VAHDAM_DB.MAPLEMONK.VAHDAM_DB_Amazon_Vendor_central_Sales_consolidated_Old where ORDER_TIMESTAMP::date <= \'2024-09-14\' UNION ALL SELECT \'Amazon_US_1P\' AS SHOP_NAME, \'USA\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'USD\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, ifnull(Revenue,0) AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\',\'America/Los_Angeles\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.avp_man_us_get_vendor_real_time_sales_report where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"Amazon US 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon US 1P\" order by \"Amazon US 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon US 1P\" UNION ALL SELECT \'Amazon_US_1P\' AS SHOP_NAME, \'USA\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'USD\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, ifnull(Revenue,0) AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\',\'America/Los_Angeles\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.avp_fresh_us_get_vendor_real_time_sales_report where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"Amazon US 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon US 1P\" order by \"Amazon US 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon US 1P\" UNION ALL SELECT \'Amazon_UK_1P\' AS SHOP_NAME, \'UK\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'GBP\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, Revenue AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND from ( select ASIN ,CONVERT_TIMEZONE(\'UTC\',\'Europe/London\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.avp_man_uk_get_vendor_real_time_sales_report where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"Amazon UK 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon UK 1P\" order by \"Amazon UK 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon UK 1P\" UNION ALL SELECT \'Amazon_DE_1P\' AS SHOP_NAME, \'DE\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'EUR\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, Revenue AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\', \'Europe/Copenhagen\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.avp_man_de_get_vendor_real_time_sales_report where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"Amazon EU 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon EU 1P\" order by \"Amazon EU 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon EU 1P\" union all SELECT \'Amazon_ES_1P\' AS SHOP_NAME, \'ES\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'EUR\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, Revenue AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\', \'Europe/Madrid\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.avp_man_es_get_vendor_real_time_sales_report where startDate > \'2024-09-14\' group by 1,2 )fi left join (select \"Amazon EU 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon EU 1P\" order by \"Amazon EU 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon EU 1P\" UNION ALL SELECT \'Amazon_IT_1P\' AS SHOP_NAME, \'IT\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'EUR\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, Revenue AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, Revenue AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\', \'Europe/Rome\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.AVP_MAN_IT_GET_VENDOR_REAL_TIME_SALES_REPORT where startDate > \'2024-09-14\' group by 1,2 )fi left join (select \"Amazon EU 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon EU 1P\" order by \"Amazon EU 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon EU 1P\" UNION ALL SELECT \'Amazon_FR_1P\' AS SHOP_NAME, \'FR\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'EUR\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, REVENUE AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, REVENUE AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\', \'Europe/Paris\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.AVP_MAN_FR_GET_VENDOR_REAL_TIME_SALES_REPORT where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"Amazon EU 1P\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"Amazon EU 1P\" order by \"Amazon EU 1P\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"Amazon EU 1P\" UNION ALL SELECT \'Amazon_IN_1P\' AS SHOP_NAME, \'IN\' as REGION, NULL AS ORDER_ID, NULL AS ORDER_NAME, NULL AS CUSTOMER_ID, concat(asin, STARTDATE::date) as LINE_ITEM_ID, concat(asin, STARTDATE::date) as Reference_code, NULL AS TAGS, Null as SKU, ASIN PRODUCT_ID, \'INR\' CURRENCY, 0 AS IS_REFUND, NULL AS CITY, NULL AS STATE, NULL AS COUNTRY, NULL AS CATEGORY, NULL AS ORDER_STATUS, STARTDATE::date AS ORDER_TIMESTAMP, REVENUE AS LINE_ITEM_SALES, NULL AS SHIPPING_PRICE, TRY_CAST(ORDEREDUNITS AS FLOAT) AS QUANTITY, NULL AS TAX, null as TAX_RATE, NULL AS DISCOUNT, NULL AS DISCOUNT_BEFORE_TAX, NULL AS GROSS_SALES_AFTER_TAX, NULL AS GROSS_SALES_BEFORE_TAX, NULL AS NET_SALES_BEFORE_TAX, REVENUE AS TOTAL_SALES, \'Amazon\' AS SOURCE, NULL AS LANDING_UTM_MEDIUM, NULL AS LANDING_UTM_SOURCE, NULL AS LANDING_UTM_CAMPAIGN, NULL AS REFERRING_UTM_MEDIUM, NULL AS REFERRING_UTM_SOURCE, NULL AS LANDING_UTM_CHANNEL, NULL AS REFERRING_UTM_CHANNEL, NULL AS FINAL_UTM_CHANNEL, NULL AS CUSTOMER_FLAG, NULL AS NEW_CUSTOMER_FLAG, NULL AS ACQUISITION_CHANNEL, NULL AS ACQUISITION_PRODUCT, NULL as Product_Name, NULL as Variant_Name, NULL AS SHIPPING_TAX, NULL AS SHIP_PROMOTION_DISCOUNT, NULL AS GIFT_WRAP_PRICE, NULL AS GIFT_WRAP_TAX, smg.\"COMMON SKU ID\" as Common_SKU, smg.\"Common SKU Description\" as MAPPED_PRODUCT_NAME, smg.CATEGORY as \"CATEGORY_1\", smg.\"SUB CATEGORY\" as \"Category_2-Type_of_Tea\", smg.\"LOOSE/TEA BAG/ POWDER\" as \"Category_3-Type_of_Product\", null as \"Category_4-Pack_type\", smg.\"Mother SKU\", smg.weight, smg.\"Amazon USA MSRP\", smg.BRAND FROM ( select ASIN ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', endtime::timestamp)::date startDate , sum(ifnull(orderedUnits::float,0)) ORDEREDUNITS ,sum(ifnull(orderedRevenue::float,0)) Revenue from vahdam_db.maplemonk.AVP_MAN_IN_GET_VENDOR_REAL_TIME_SALES_REPORT where startDate > \'2024-09-14\' group by 1,2 ) fi left join (select \"D2C India\" ,weight ,brand ,\"Mother SKU\" ,\"Common Name\" ,category ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\"Amazon USA MSRP\" ,row_number() over (partition by \"D2C India\" order by \" India\") as rw from vahdam_db.maplemonk.sku_mapping_raw_data) smg on fi.asin = smg.\"D2C India\" describe table vahdam_db.maplemonk.sku_mapping_raw_data ; create or replace table VAHDAM_DB.MAPLEMONK.VAHDAM_DB_Amazon_Vendor_central_Sales_consolidated as select FI.* ,CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.LINE_ITEM_SALES * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.LINE_ITEM_SALES WHEN FI.CURRENCY = \'USD\' THEN FI.LINE_ITEM_SALES * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.LINE_ITEM_SALES * EX.GBP_INR WHEN FI.CURRENCY = \'AUD\' THEN FI.LINE_ITEM_SALES * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.LINE_ITEM_SALES * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.LINE_ITEM_SALES * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.LINE_ITEM_SALES * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.LINE_ITEM_SALES * EX.AED_INR END AS LINE_ITEM_SALES_INR, CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.TAX * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.TAX WHEN FI.CURRENCY = \'USD\' THEN FI.TAX * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.TAX * EX.GBP_INR WHEN FI.CURRENCY = \'AUD\' THEN FI.TAX * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.TAX * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.TAX * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.TAX * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.TAX * EX.AED_INR END AS TAX_INR, CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.DISCOUNT * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.DISCOUNT WHEN FI.CURRENCY = \'USD\' THEN FI.DISCOUNT * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.DISCOUNT * EX.GBP_INR WHEN FI.CURRENCY = \'AUD\' THEN FI.DISCOUNT * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.DISCOUNT * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.DISCOUNT * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.DISCOUNT * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.DISCOUNT * EX.AED_INR END AS DISCOUNT_INR, CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.TOTAL_SALES * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.TOTAL_SALES WHEN FI.CURRENCY = \'USD\' THEN FI.TOTAL_SALES * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.TOTAL_SALES * EX.GBP_INR WHEN FI.CURRENCY = \'AUD\' THEN FI.TOTAL_SALES * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.TOTAL_SALES * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.TOTAL_SALES * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.TOTAL_SALES * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.TOTAL_SALES * EX.AED_INR END AS TOTAL_SALES_INR, CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.TOTAL_SALES * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.TOTAL_SALES WHEN FI.CURRENCY = \'USD\' THEN FI.TOTAL_SALES * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.TOTAL_SALES * EX.GBP_INR WHEN FI.CURRENCY = \'AUD\' THEN FI.TOTAL_SALES * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.TOTAL_SALES * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.TOTAL_SALES * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.TOTAL_SALES * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.TOTAL_SALES * EX.AED_INR END AS SUBTOTAL_PRICE_INR, CASE WHEN FI.CURRENCY = \'EUR\' THEN FI.SHIPPING_PRICE * EX.EUR_INR WHEN FI.CURRENCY = \'INR\' THEN FI.SHIPPING_PRICE WHEN FI.CURRENCY = \'USD\' THEN FI.SHIPPING_PRICE * EX.USD_INR WHEN FI.CURRENCY = \'GBP\' THEN FI.SHIPPING_PRICE * EX.GBP_INR WHEN FI.CURRENCY = \'AUS\' THEN FI.SHIPPING_PRICE * EX.AUD_INR WHEN FI.CURRENCY = \'JPY\' THEN FI.SHIPPING_PRICE * EX.JPY_INR WHEN FI.CURRENCY = \'SGD\' THEN FI.SHIPPING_PRICE * EX.SGD_INR WHEN FI.CURRENCY = \'CAD\' THEN FI.SHIPPING_PRICE * EX.CAD_INR WHEN FI.CURRENCY = \'AED\' THEN FI.SHIPPING_PRICE * EX.AED_INR END AS SHIPPING_PRICE_INR from VAHDAM_DB.MAPLEMONK.VAHDAM_DB_Amazon_Vendor_central_Sales_consolidated FI LEFT JOIN( SELECT date, RATES:INR AS EUR_INR, (RATES:EUR/RATES:USD)*RATES:INR AS USD_INR, (RATES:EUR/RATES:GBP)*RATES:INR AS GBP_INR, (RATES:EUR/RATES:AUD)*RATES:INR AS AUD_INR, (RATES:EUR/RATES:JPY)*RATES:INR AS JPY_INR, (RATES:EUR/RATES:SGD)*RATES:INR AS SGD_INR, (RATES:EUR/RATES:CAD)*RATES:INR AS CAD_INR, (RATES:EUR/RATES:AED)*RATES:INR AS AED_INR FROM( SELECT *, ROW_NUMBER()OVER(PARTITION BY BASE, DATE ORDER BY _AIRBYTE_EMITTED_AT DESC) RW FROM VAHDAM_DB.MAPLEMONK.EXCHANGE_RATES ) A WHERE RW = 1 ) EX ON FI.ORDER_TIMESTAMP::DATE = EX.date;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from VAHDAM_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            