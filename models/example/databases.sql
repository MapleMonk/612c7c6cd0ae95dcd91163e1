{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "Create or replace table snitch_db.maplemonk.Fabric_orders as SELECT \'PF\' AS Vendor, \"SKU name\", LINK, METERS, \"DC COPY\" AS \"DC COPY\", FACTORY, \"RATE/MTR\" AS \"RATE/MTR\", \"BILL COPY\" AS \"BILL COPY\", \"LEAD TIME\" AS \"LEAD TIME\", DISPATCHED, \"SNITCH SKU\" AS \"SNITCH SKU\", \"Order Placed\" AS \"Order Placed\", CONFIRMATION AS CONFIRMATION, \"FABRIC DESIGN\" AS \"FABRIC DESIGN\", \"dispatch ready\" AS \"Goods Ready\" FROM snitch_db.maplemonk.consol_pf UNION SELECT \'Artex\' AS Vendor, \"SKU name\", LINK, METERS, \"DC COPY\" AS \"DC COPY\", FACTORY, \"RATE/MTR\" AS \"RATE/MTR\", \"BILL COPY\" AS \"BILL COPY\", \"LEAD TIME\" AS \"LEAD TIME\", DISPATCHED, \"SNITCH SKU\" AS \"SNITCH SKU\", \"Order Placed\" AS \"Order Placed\", \"Order Confirmation\" AS CONFIRMATION, \"FABRIC DESIGN\" AS \"FABRIC DESIGN\", \"Goods Ready\" AS \"Goods Ready\" FROM snitch_db.maplemonk.CONSOL_ARTEX; CREATE OR REPLACE TABLE SNITCH_DB.MAPLEMONK.EOQ_TABLE_V2 AS SELECT eoq.*, shipped_eoq.shipped_from_factory, shipped_eoq.expected_del_date AS shipped_expected_del_date, shipped_eoq.dispatched_qty, FACTORY_UP_YTBC_EOQ.factory AS YTBC_factory, FACTORY_UP_YTBC_EOQ.expected_del_date AS YTBC_expected_del_date, FACTORY_UP_YTBC_EOQ.cut_qty AS YTBC_cut_qty, FACTORY_UP_YTBC_EOQ.Status AS YTBC_status, Vendor, Order_Placed, CONFIRMATION, METERS, CASE WHEN LOWER(CONFIRMATION) = \'no\' THEN \'Fabric Order Placed Yet To be Confirmed\' WHEN LOWER(CONFIRMATION) = \'yes\' THEN \'Fabric Order Placed & Confirmed\' WHEN CONFIRMATION IS NULL THEN \'Fabric Order Yet to be Placed\' END AS Fabric_Status, \"Best Seller Channel\" FROM snitch_db.maplemonk.eoq LEFT JOIN ( SELECT sku_group, factory AS shipped_from_factory, expected_del_date, cut_qty AS dispatched_qty FROM snitch_db.maplemonk.factory_shipped_eoq WHERE expected_del_date > CURRENT_DATE() AND expected_del_date < DATEADD(\'day\', 90, CURRENT_DATE()) ) shipped_eoq ON eoq.sku_group = shipped_eoq.sku_group LEFT JOIN ( SELECT sku_group, factory, expected_del_date, cut_qty, \'YTBC\' AS Status FROM snitch_db.maplemonk.FACTORY_UP_YTBC_EOQ ) AS factory_up_ytbc_eoq ON eoq.sku_group = factory_up_ytbc_eoq.sku_group LEFT JOIN ( SELECT \"SNITCH SKU\", Vendor, TO_DATE(\"Order Placed\", \'DD/MM/YYYY\') AS Order_Placed, CONFIRMATION, METERS FROM snitch_db.maplemonk.Fabric_orders ) AS Fabric_orders ON eoq.sku_group = Fabric_orders.\"SNITCH SKU\" LEFT JOIN ( select sku_group, MARKETPLACE_MAPPED as \"Best Seller Channel\" from ( SELECT SKU_GROUP, MARKETPLACE_MAPPED, SKU_CLASS, ROUND(SUM(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END) / 100, 0) AS PRICE_POINT, SUM(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END) AS SELLING_PRICE_TOTAL, SUM(NULLIF(SHIPPING_QUANTITY, 0)) AS total_quantity, ROUND(SUM(NULLIF(SHIPPING_QUANTITY, 0)) / 10, 0) AS QUANTITY_POINT, MAX(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END) AS MAX, MIN(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END) AS MIN, AVG(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END / NULLIF(SHIPPING_QUANTITY, 0)) AS average_asp, ROUND((AVG(CASE WHEN MARKETPLACE_MAPPED = \'AJIO\' THEN (SELLING_PRICE * 1.5) ELSE SELLING_PRICE END / NULLIF(SHIPPING_QUANTITY, 0))) / 100, 0) AS average_asp_POINT, ROW_NUMBER() OVER (PARTITION BY SKU_GROUP ORDER BY QUANTITY_POINT DESC, average_asp_POINT DESC) AS marketplace_rank, MAX(MRP) AS MRP FROM snitch_db.maplemonk.unicommerce_fact_items_snitch WHERE ORDER_STATUS = \'COMPLETE\' AND ORDER_DATE > DATEADD(DAY, -60, CURRENT_DATE()) AND SELLING_PRICE > 0 GROUP BY SKU_GROUP, MARKETPLACE_MAPPED, SKU_CLASS ) where marketplace_rank = 1 ) AS BEST_CHANNELS ON eoq.sku_group = BEST_CHANNELS.SKU_GROUP;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        