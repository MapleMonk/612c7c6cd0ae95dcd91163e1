{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "Create or replace table Snitch_DB.MAPLEMONK.SALES_COST_CUSTOMERTYPE_SNITCH as with cost as ( select a.date, a.cost+b.cost as cost from (select date, sum(spend) as cost from Snitch_DB.MAPLEMONK.MARKETING_CONSOLIDATED_SNITCH group by 1 order by 1 desc) a left join (select date, sum(spends) as cost from Snitch_DB.MAPLEMONK.Criteo_SMS_spends group by 1 order by 1 desc) b on a.date=b.date ), month_level_sales as ( select date_trunc(\'month\',order_timestamp::date) as month ,count(distinct case when new_customer_flag = \'New\' then order_id end) as orders_all_new_prev_month ,count(distinct case when new_customer_flag = \'Repeated\' then order_id end) as orders_all_Repeated_prev_month ,count(distinct case when sku like \'%&%\' then order_id when right(sku,1) in (\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\') and new_customer_flag = \'New\' then order_id end ) as orders_combo_new_prev_month ,count(distinct case when sku like \'%&%\' then order_id when right(sku,1) in (\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\') and new_customer_flag = \'Repeated\' then order_id end ) as orders_combo_Repeated_prev_month ,sum(case when new_customer_flag = \'New\' then line_item_sales end) as gross_sales_new_prev_month ,sum(case when new_customer_flag = \'Repeated\' then line_item_sales end) as gross_sales_Repeated_prev_month ,sum(case when new_customer_flag = \'New\' then DISCOUNT end) as discount_new_prev_month ,sum(case when new_customer_flag = \'Repeated\' then DISCOUNT end) as discount_Repeated_prev_month ,sum(case when new_customer_flag = \'New\' then NET_SALES end) as net_sales_new_prev_month ,sum(case when new_customer_flag = \'Repeated\' then NET_SALES end) as net_sales_Repeated_prev_month from Snitch_DB.maplemonk.FACT_ITEMS_SNITCH a group by 1 ) select *, sum(net_sales_new)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_net_sales_new , sum(net_sales_Repeated)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_net_sales_Repeated , sum(orders_all_new)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_orders_all_new , sum(orders_all_Repeated)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_orders_all_Repeated , sum(discount_new)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_discount_new , sum(discount_Repeated)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_discount_Repeated , sum(cost)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_cost , sum(gross_sales_new)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_gross_sales_new , sum(gross_sales_Repeated)over(partition by year(order_date),month(order_date) order by order_date asc) as mtd_gross_sales_Repeated from ( select order_timestamp::date as order_date ,b.cost ,net_sales_new_prev_month ,net_sales_Repeated_prev_month ,discount_new_prev_month ,discount_Repeated_prev_month ,orders_all_new_prev_month ,orders_all_Repeated_prev_month ,count(distinct case when new_customer_flag = \'New\' then order_id end) as orders_all_new ,count(distinct case when new_customer_flag = \'Repeated\' then order_id end) as orders_all_Repeated ,count(distinct case when sku like \'%&%\' then order_id when right(sku,1) in (\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\') and new_customer_flag = \'New\' then order_id end ) as orders_combo_new ,count(distinct case when sku like \'%&%\' then order_id when right(sku,1) in (\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\') and new_customer_flag = \'Repeated\' then order_id end ) as orders_combo_Repeated ,sum(case when new_customer_flag = \'New\' then line_item_sales end) as gross_sales_new ,sum(case when new_customer_flag = \'Repeated\' then line_item_sales end) as gross_sales_Repeated ,sum(case when new_customer_flag = \'New\' then DISCOUNT end) as discount_new ,sum(case when new_customer_flag = \'Repeated\' then DISCOUNT end) as discount_Repeated ,sum(case when new_customer_flag = \'New\' then NET_SALES end) as net_sales_new ,sum(case when new_customer_flag = \'Repeated\' then NET_SALES end) as net_sales_Repeated from Snitch_DB.maplemonk.FACT_ITEMS_SNITCH a left join cost b on a.order_timestamp::date = b.date left join month_level_sales c on date_trunc(\'month\',add_months(a.order_timestamp::date, -1)) = month group by 1,2,3,4,5,6,7,8) order by 1 desc;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        