{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table xyxx_db.maplemonk.sales_consolidated_xyxx as with sales_mapped as ( select s.* ,m.category ,m.range from xyxx_db.maplemonk.sales_consolidated_xyxx s left join (select distinct \"SKU ID\",\"Single Range\" as range,category from xyxx_db.maplemonk.sku_category_map) m on (case when lower(right(s.sku,6)) = \'_smart\' then left(s.sku,len(sku)-6) when lower(s.sku) like \'%fake%\' then left(s.sku,charindex(\'_\',s.sku)-1) else s.sku end) =m.\"SKU ID\" ) select f.* ,g.channel from sales_mapped f left join (select * from xyxx_db.maplemonk.googlesheet_maplemonk_gm where lower(channel) <> \'gt\') g on month(f.order_date::date) = month(to_date(g.month,\'Mon/YYYY\')) and year(f.order_date::date) = year(to_date(g.month,\'Mon/YYYY\')) and f.range = g.range and lower(f.category)=lower(g.category); create or replace table xyxx_db.maplemonk.gross_margin_xyxx as select * from ( with GT_CTE as ( select f.* ,ifnull((f.QUANTITYPERITEM*g.mrp::float),0) TOTAL_MRP ,ifnull((f.QUANTITYPERITEM*g.COGS::float),0) TOTAL_COGS ,ifnull((f.grossvalueperitem::float)*0.4,0) TOTAL_DISCOUNT , 15 as Total_packaging_cost ,(f.grossvalueperitem-TOTAL_COGS-TOTAL_DISCOUNT-Total_packaging_cost) as GROSSMARGINVALUE ,case when f.grossvalueperitem =0 then 0 else ((f.grossvalueperitem-TOTAL_COGS-TOTAL_DISCOUNT-Total_packaging_cost)/f.grossvalueperitem) end as \"GM%\" ,g.channel ,g.range from xyxx_db.maplemonk.fieldassist_outlet_employee_date_xyxx f left join xyxx_db.maplemonk.googlesheet_maplemonk_gm g on lower(f.outletchannelname) = lower(g.channel) and month(f.date) = month(to_date(g.month,\'Mon/YYYY\')) and year(f.date) = year(to_date(g.month,\'Mon/YYYY\')) and case when length(displaycategory)<4 then lower(displaycategory) else lower(left(displaycategory,charindex(\' \',displaycategory)-1)) end = lower(g.range) and lower(f.category)=lower(g.category) ) , SALES_CTE as ( select f.* ,ifnull(f.QUANTITY*g.mrp::float,0) TOTAL_MRP ,ifnull(f.QUANTITY*g.COGS::float,0) TOTAL_COGS ,ifnull(f.DISCOUNT,0) TOTAL_DISCOUNT ,(ifnull(f.selling_price::float,0)*4)/100 as TOTAL_Packaging_cost ,(f.selling_price-TOTAL_COGS-TOTAL_DISCOUNT-TOTAL_Packaging_cost) as GROSSMARGINVALUE2 ,case when f.selling_price =0 then 0 else (ifnull((f.selling_price-TOTAL_COGS-TOTAL_DISCOUNT-TOTAL_Packaging_cost)/f.selling_price,0)) end as GROSSMARGINPERCENTAGE from xyxx_db.maplemonk.sales_consolidated_xyxx f left join (select * from xyxx_db.maplemonk.googlesheet_maplemonk_gm where lower(channel) <> \'gt\') g on month(f.order_date::date) = month(to_date(g.month,\'Mon/YYYY\')) and year(f.order_date::date) = year(to_date(g.month,\'Mon/YYYY\')) and f.range = g.range and lower(f.category)=lower(g.category) ) select date as Date ,PRODUCTERPID as SKU ,range ,category ,\'Field Assist\' as Marketplace ,\'GT\' as sales_channel ,count(case when productive = \'true\' then visitid end) as Orders ,sum(quantityperitem) as total_quantity ,sum(grossvalueperitem) as total_grosssales ,sum(g.TOTAL_MRP) TOTAL_MRP ,sum(g.TOTAL_COGS) TOTAL_COGS ,sum(g.TOTAL_DISCOUNT) TOTAL_DISCOUNT ,sum(g.Total_packaging_cost) Total_packaging_cost ,sum(g.GROSSMARGINVALUE) as TOTAL_GROSSMARGINVALUE ,case when sum(grossvalueperitem) =0 then 0 else (sum(g.GROSSMARGINVALUE)/sum(grossvalueperitem)) end as \"GM%\" from GT_CTE g group by Date, PRODUCTERPID,range,category,Marketplace,sales_channel UNION SELECT order_date:: date as Date ,SKU ,range ,category ,shop_name as Marketplace ,\'Portals / Website\' as sales_channel ,count(distinct case when lower(order_status) <> \'cancelled\' then order_id end) as Orders ,sum(case when lower(order_status) <> \'cancelled\' then s.quantity end) as total_quantity ,sum(case when lower(order_status) <> \'cancelled\' then s.selling_price end) as total_grosssales ,sum(case when lower(order_status) <> \'cancelled\' then s.TOTAL_MRP end) TOTAL_MRP ,sum(case when lower(order_status) <> \'cancelled\' then s.TOTAL_COGS end) TOTAL_COGS ,sum(case when lower(order_status) <> \'cancelled\' then s.TOTAL_DISCOUNT end) TOTAL_DISCOUNT ,sum(case when lower(order_status) <> \'cancelled\' then s.TOTAL_packaging_cost end) TOTAL_packaging_cost ,sum(case when lower(order_status) <> \'cancelled\' then s.GROSSMARGINVALUE2 end) as TOTAL_GROSSMARGINVALUE ,case when sum(s.selling_price ) =0 then 0 else (sum(s.GROSSMARGINVALUE2)/sum(selling_price)) end as \"GM%\" from sales_cte s group by Date, SKU,range,category,Marketplace,sales_channel order by Date desc ); create or replace table xyxx_db.maplemonk.gross_margin_xyxx as select * ,case when sales_channel = \'GT\' then \'GT\' when sales_channel <> \'GT\' and marketplace like \'%hopify%\' then \'Website\' else \'Portal\' end as SALES_CHANNEL_L1 from xyxx_db.maplemonk.gross_margin_xyxx;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from XYXX_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        