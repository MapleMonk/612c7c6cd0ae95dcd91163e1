{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE snitch_db.maplemonk.warehouse_logistics_performance AS WITH warehouse_data AS ( SELECT awb, order_name, marketplace_mapped, shippingpackagecode, order_id, saleorderitemcode, order_timestamp, shipping_courier, warehouse_name, uc_status, delivered_date, uc_created, tat, created_timestamp, picking_timestamp, picked_timestamp, packed_timestamp, rts_timestamp, dispatched_timestamp, shipped_timestamp, latest_status, try_to_date(\"Pickup Date\") AS pickup_date, try_to_date(\"CP_DELIVERY\") AS delivered_at, cp_delivery, item_status, sla_status, CASE WHEN packed_timestamp IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, order_timestamp, packed_timestamp) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, order_timestamp, packed_timestamp) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, order_timestamp, packed_timestamp) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, order_timestamp, packed_timestamp) BETWEEN 72 AND 120 THEN \'D<=5\' WHEN DATEDIFF(HOUR, order_timestamp, packed_timestamp) BETWEEN 120 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS O2P_h, CASE WHEN dispatched_timestamp IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, order_timestamp, dispatched_timestamp) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, order_timestamp, dispatched_timestamp) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, order_timestamp, dispatched_timestamp) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, order_timestamp, dispatched_timestamp) BETWEEN 72 AND 120 THEN \'D<=5\' WHEN DATEDIFF(HOUR, order_timestamp, dispatched_timestamp) BETWEEN 120 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS O2M_h, CASE WHEN pickup_date IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, order_timestamp, pickup_date) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, order_timestamp, pickup_date) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, order_timestamp, pickup_date) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, order_timestamp, pickup_date) BETWEEN 72 AND 120 THEN \'D<=5\' WHEN DATEDIFF(HOUR, order_timestamp, pickup_date) BETWEEN 120 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS O2H_h, CASE WHEN pickup_date IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, dispatched_timestamp, pickup_date) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, dispatched_timestamp, pickup_date) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, dispatched_timestamp, pickup_date) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, dispatched_timestamp, pickup_date) BETWEEN 72 AND 120 THEN \'D<=5\' WHEN DATEDIFF(HOUR, dispatched_timestamp, pickup_date) BETWEEN 120 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS M2H_h, CASE WHEN delivered_at IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, order_timestamp, delivered_at) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, order_timestamp, delivered_at) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, order_timestamp, delivered_at) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, order_timestamp, delivered_at) BETWEEN 72 AND 96 THEN \'D<=5\' WHEN DATEDIFF(HOUR, order_timestamp, delivered_at) BETWEEN 96 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS O2D_h, CASE WHEN delivered_at IS NULL THEN \'P\' ELSE CASE WHEN DATEDIFF(HOUR, pickup_date, delivered_at) <= 24 THEN \'D1\' WHEN DATEDIFF(HOUR, pickup_date, delivered_at) <= 48 THEN \'D2\' WHEN DATEDIFF(HOUR, pickup_date, delivered_at) <= 72 THEN \'D3\' WHEN DATEDIFF(HOUR, pickup_date, delivered_at) BETWEEN 72 AND 120 THEN \'D<=5\' WHEN DATEDIFF(HOUR, pickup_date, delivered_at) BETWEEN 120 AND 216 THEN \'D<=9\' ELSE \'D>9\' END END AS P2D_h FROM snitch_db.maplemonk.warehouse_sla_performance WHERE marketplace_mapped = \'SHOPIFY\' AND SLA_STATUS NOT IN (\'CANCELLED\') ) SELECT w.*, c.mapped_state, c.mapped_city, c.pin_code, c.final_zone, c.status, fi.\"TAGS\" FROM warehouse_data w LEFT JOIN snitch_db.maplemonk.cp_1 c ON w.awb = c.awb_number LEFT JOIN snitch_db.maplemonk.fact_items_snitch fi ON LOWER(w.order_name) = LOWER(fi.\"ORDER_NAME\");",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            