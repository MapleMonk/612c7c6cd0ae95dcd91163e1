{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table eggozdb.maplemonk.retailer_lead as select lrl.id as lead_id, cast(timestampadd(minute, 660, lrl.created_at) as date)created_at, cast(timestampadd(minute, 660, lrl.modified_at) as date) modified_at, cast(timestampadd(minute, 660, date) as date) date, lrl.store_name, lrl.billing_name, lrl.email, lrl.address, lrl.landmark, lrl.market_name, lrl.society_name, lrl.latitude, lrl.longitude, lrl.sq_feet_input, lrl.ac_availability, lrl.perishable_items_availability, lrl.counter_type, lrl.refrigerator_type, lrl.soh, lrl.brand_premiums, lrl.store_accessible, lrl.revenue_per_day, lrl.program_type, lrl.store_type, lrl.society_type, lrl.final_score, lrl.classification, lrl.channel_classification, lrl.status as lead_status, lrl.is_validated, lrl.remark, lrl.milk_booth, lrl.meat_store, lrl.vegetable_store, lrl.city_id, rr.code, bc.city_name, lrl.cluster_id, lrl.lead_soh_id, lrl.retailer_id,rr.onboarding_status as retailer_onboarding_status,rr.salesPersonProfile_id as retailer_salesPersonProfile_id,cu.name as sales_person, lrl.sales_person_profile_id as lead_salesPersonProfile_id, lrl.zone_id, bcl.cluster_name , llf.from_status,llf.to_status,llf.remark as leadfollowup_remark,llf.created_by_id as leadfollowup_person,llf.retailer_lead_id,rr.dealer_id from eggozdb.maplemonk.my_sql_lead_retailerlead lrl left join eggozdb.maplemonk.my_sql_lead_leadfollowup llf on lrl.id = llf.retailer_lead_id left join eggozdb.maplemonk.my_sql_base_city bc on bc.id = lrl.city_id left join eggozdb.maplemonk.my_sql_base_cluster bcl on bcl.id = lrl.cluster_id left join eggozdb.maplemonk.my_sql_saleschain_salespersonprofile ssp on ssp.id = lrl.sales_person_profile_id left join eggozdb.maplemonk.my_sql_custom_auth_user cu on ssp.user_id=cu.id left join eggozdb.maplemonk.my_sql_retailer_retailer rr on lrl.retailer_id=rr.id ; create or replace table eggozdb.maplemonk.retailer_dealer_tertiary_lead as select cast(timestampadd(minute, 660, lld.created_at) as date)created_at, cast(timestampadd(minute, 660, lld.modified_at) as date) modified_at, cast(timestampadd(minute, 660, date) as date) date, lld.id as lead_id, order_price_amount as Retailer_revenue, remark,status as lead_status, beat_number, channel_classification,sales_person_profile_id,\'dealer\' as type,rr.code as retailer_name, rr.onboarding_status, bc.city_name,cu.name as sales_person from eggozdb.maplemonk.my_sql_lead_dealerlead lld left join eggozdb.maplemonk.my_sql_retailer_retailer rr on lld.retailer_id = rr.id left join ( select order_price_amount,retailer_id from eggozdb.maplemonk.my_sql_order_order where status in (\'delivered\',\'completed\')) oo on rr.id = oo.retailer_id left join eggozdb.maplemonk.my_sql_base_city bc on bc.id = lld.city_id left join eggozdb.maplemonk.my_sql_base_cluster bcl on bcl.id = lld.cluster_id left join eggozdb.maplemonk.my_sql_saleschain_salespersonprofile ssp on lld.sales_person_profile_id = ssp.id left join eggozdb.maplemonk.my_sql_custom_auth_user cu on ssp.user_id=cu.id union all select cast(timestampadd(minute, 660, lrl.created_at) as date)created_at, cast(timestampadd(minute, 660, lrl.modified_at) as date) modified_at, cast(timestampadd(minute, 660, date) as date) date, lrl.id as lead_id, oo.order_price_amount as Revenue, remark,status,beat_number, channel_classification,sales_person_profile_id,\'retailer\' as type ,rr.code, rr.onboarding_status, bc.city_name,cu.name as sales_person from eggozdb.maplemonk.my_sql_lead_retailerlead lrl left join eggozdb.maplemonk.my_sql_retailer_retailer rr on lrl.retailer_id = rr.id left join( select order_price_amount,retailer_id from eggozdb.maplemonk.my_sql_order_order where status in (\'delivered\',\'completed\')) oo on rr.id = oo.retailer_id left join eggozdb.maplemonk.my_sql_base_city bc on bc.id = lrl.city_id left join eggozdb.maplemonk.my_sql_base_cluster bcl on bcl.id = lrl.cluster_id left join eggozdb.maplemonk.my_sql_saleschain_salespersonprofile ssp on lrl.sales_person_profile_id = ssp.id left join eggozdb.maplemonk.my_sql_custom_auth_user cu on ssp.user_id=cu.id union all select cast(timestampadd(minute, 660, ltr.created_at) as date)created_at, cast(timestampadd(minute, 660, ltr.modified_at) as date) modified_at, cast(timestampadd(minute, 660, date) as date) date, ltr.id as lead_id, oo.order_price_amount as Revenue, remark,status,beat_number, channel_classification,sales_person_profile_id,\'tertiary\' as type ,rr.code, rr.onboarding_status, bc.city_name,cu.name as sales_person from eggozdb.maplemonk.my_sql_lead_tertiarylead ltr left join eggozdb.maplemonk.my_sql_retailer_retailer rr on ltr.retailer_id = rr.id left join ( select order_price_amount,retailer_id from eggozdb.maplemonk.my_sql_order_order where status in (\'delivered\',\'completed\')) oo on rr.id = oo.retailer_id left join eggozdb.maplemonk.my_sql_base_city bc on bc.id = ltr.city_id left join eggozdb.maplemonk.my_sql_base_cluster bcl on bcl.id = ltr.cluster_id left join eggozdb.maplemonk.my_sql_saleschain_salespersonprofile ssp on ltr.sales_person_profile_id = ssp.id left join eggozdb.maplemonk.my_sql_custom_auth_user cu on ssp.user_id=cu.id ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from EGGOZDB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            