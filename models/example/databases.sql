{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table eggozdb.maplemonk.ub_log as select tt1.*, tt2.avg_cp, tt3.avg_cp_mtd, tt4.avg_cp_mtd_for_region from ( SELECT oo.name ,cast(timestampadd(minute,660,oo.delivery_date ) as date) as deliveryDate ,ot.egg_type , case when lower(pp.name) like \'%white%\' then \'White\' when lower(pp.name) like \'%brown%\' then \'Brown\' when lower(pp.name) like \'%nutra%\' then \'Nutra+\' when lower(pp.name) like \'%liquid%\' then \'White\' end as Category , case when rr.area_classification = \'Bangalore-UB\' then \'Banglore\' when rr.area_classification = \'NCR-UB\' then \'NCR\' when rr.area_classification = \'MP-UB\' then \'M.P\' when rr.area_classification = \'UP-UB\' then \'U.P\' when rr.area_classification = \'East-UB\' then \'Bihar\' end as Regions , rr.area_classification , oo.id as order_id , concat(pp.sku_count,pp.name) as SKU , ot.quantity , case when lower(pp.name) like \'liquid\' then (ot.quantity*1000)/35 when SKU = \'1White\' then ot.quantity * pp.SKU_Count * 30 else ot.quantity * pp.SKU_Count end as eggs_sold , case when SKU = \'1White\' then ot.single_sku_rate * 30 else ot.single_sku_rate end as single_sku_rate , ot.single_sku_mrp , ot.single_sku_rate*ot.quantity as amount , pp.SKU_Count , oo.order_brand_type , oo.secondary_status FROM eggozdb.maplemonk.my_sql_order_order oo left join eggozdb.maplemonk.my_sql_order_orderline ot on ot.order_id = oo.id left join eggozdb.maplemonk.my_sql_product_product pp on ot.product_id = pp.id left join eggozdb.maplemonk.my_sql_retailer_retailer rr on rr.id = oo.retailer_id where secondary_status <> \'cancel_approved\' and rr.area_classification like \'%UB%\' and rr.area_classification <> \'UP-UB\' and lower(status) in (\'delivered\',\'completed\') and cast(timestampadd(minute,660,oo.delivery_date ) as date) between \'2022-08-01\' and \'2022-08-31\') group by oo.name, ot.egg_type ,deliveryDate , rr.area_classification , ot.quantity , ot.single_sku_rate , ot.single_sku_mrp , oo.id , ot.single_sku_rate*ot.quantity , oo.delivery_date , oo.generation_date , pp.SKU_Count , oo.order_brand_type , oo.secondary_status , pp.name ) tt1 left join ( select mm.* from (select grn_date, region, type, row_number() over (partition by grn_date, region, type order by grn_date) as rownumber, (sum(replace(amount,\',\',\'\')::FLOAT) over (partition by grn_date, region, type ))/(sum(replace(eggs,\',\',\'\')::FLOAT) over (partition by grn_date, region, type )) as avg_cp from eggozdb.maplemonk.region_wise_procurement_masterdata where grn_date between \'2022-08-01\' and \'2022-08-31\') mm where mm.rownumber = 1 ) tt2 on tt1.deliverydate = tt2.grn_date and tt1.regions = tt2.region and tt1.category = tt2.type left join ( select ll.region, ll.type, ll.avg_cp_mtd from (select grn_date, region, type, row_number() over (partition by region, type order by region) as rownumber, (sum(replace(amount,\',\',\'\')::FLOAT) over (partition by region, type ))/(sum(replace(eggs,\',\',\'\')::FLOAT) over (partition by region, type )) as avg_cp_mtd from eggozdb.maplemonk.region_wise_procurement_masterdata where grn_date between \'2022-08-01\' and \'2022-08-31\') ll where ll.rownumber = 1 ) tt3 on tt1.regions = tt3.region and tt1.category = tt3.type left join ( select nn.region, nn.avg_cp_mtd_for_region from (select grn_date, region, type, row_number() over (partition by region order by region) as rownumber, (sum(replace(amount,\',\',\'\')::FLOAT) over (partition by region))/(sum(replace(eggs,\',\',\'\')::FLOAT) over (partition by region)) as avg_cp_mtd_for_region from eggozdb.maplemonk.region_wise_procurement_masterdata where grn_date between \'2022-08-01\' and \'2022-08-31\') nn where nn.rownumber = 1 ) tt4 on tt1.regions = tt4.region ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        