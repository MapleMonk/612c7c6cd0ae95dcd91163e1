{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_customers AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_customers UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_customers UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_customers UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_customers UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_customers UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_customers; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_orders AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_orders UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_orders UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_orders UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_orders UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_orders UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_orders; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_products AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_products UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_products UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_products UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_products UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_products UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_products; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_products_variants AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_products_variants UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_products_variants UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_products_variants UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_products_variants UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_products_variants UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_products_variants; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_orders_line_items AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_orders_line_items UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_orders_line_items UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_orders_line_items UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_orders_line_items UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_orders_line_items UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_orders_line_items; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.Shopify_All_customers_addresses AS select *,'Shopify_India' AS Shop_Name from Vahdam_db.maplemonk.shopifyindia_customers_addresses UNION ALL select *,'Shopify_USA' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSA_customers_addresses UNION ALL select *,'Shopify_Global' AS Shop_Name from Vahdam_db.maplemonk.shopifyGlobal_customers_addresses UNION ALL select *,'Shopify_Germany' AS Shop_Name from Vahdam_db.maplemonk.shopifyGermany_customers_addresses UNION ALL select *,'Shopify_Italy' AS Shop_Name from Vahdam_db.maplemonk.shopifyItaly_customers_addresses UNION ALL select *,'Shopify_USA_Wholesale' AS Shop_Name from Vahdam_db.maplemonk.shopifyUSAWHOLESALE_customers_addresses; ALTER TABLE Vahdam_db.maplemonk.Shopify_All_orders RENAME COLUMN _AIRBYTE_SHOPIFYINDIA_ORDERS_HASHID to _AIRBYTE_ORDERS_HASHID; ALTER TABLE Vahdam_db.maplemonk.Shopify_All_orders_line_items RENAME COLUMN _AIRBYTE_SHOPIFYINDIA_ORDERS_HASHID to _AIRBYTE_ORDERS_HASHID; ALTER TABLE Vahdam_db.maplemonk.Shopify_All_products_variants RENAME COLUMN _AIRBYTE_SHOPIFYINDIA_PRODUCTS_HASHID to _AIRBYTE_PRODUCTS_HASHID; ALTER TABLE Vahdam_db.maplemonk.Shopify_All_products RENAME COLUMN _AIRBYTE_SHOPIFYINDIA_PRODUCTS_HASHID to _AIRBYTE_PRODUCTS_HASHID; CREATE OR REPLACE TABLE Vahdam_db.maplemonk.FACT_ITEMS AS SELECT Cast(o.id AS VARCHAR(16777216)) AS order_id, o.CUSTOMER:id::int customer_id, ol1.id AS item_id, cast(ol1.sku AS varchar(16777216)) product_id, pv.barcode, o.currency, CASE WHEN p.title IS NULL THEN 'NA' ELSE p.title END AS product_name, CASE WHEN cd.city IS NULL OR cd.city = '' THEN 'NA' ELSE cd.city END AS city, CASE WHEN cd.province IS NULL OR cd.province = '' THEN 'NA' ELSE cd.province END AS state, CASE WHEN p.product_type = '' THEN 'NA' ELSE p.product_type END AS category, CASE WHEN o.cancelled_at IS NOT NULL THEN 'CANCELLED' ELSE 'Shopify_Processed' END AS order_status, cast(o.created_at AS datetime) order_timestamp, sum(ol1.price * ol1.quantity) AS sales, sum(o.total_tax) / sum(ol2.items) AS tax, sum(o.total_discounts) / sum(ol2.items) AS discount, sum(ol1.quantity) quantity, 'Shopify' AS source FROM Vahdam_db.maplemonk.Shopify_All_orders o LEFT JOIN Vahdam_db.maplemonk.Shopify_All_orders_line_items ol1 ON o._airbyte_orders_hashid = ol1._airbyte_orders_hashid LEFT JOIN ( SELECT _airbyte_orders_hashid, count(1) AS items FROM Vahdam_db.maplemonk.Shopify_All_orders_line_items GROUP BY _airbyte_orders_hashid) ol2 ON o._airbyte_orders_hashid = ol2._airbyte_orders_hashid LEFT JOIN Vahdam_db.maplemonk.Shopify_All_products p ON ol1.product_id = p.id LEFT JOIN (select distinct _AIRBYTE_PRODUCTS_HASHID,barcode from Vahdam_db.maplemonk.Shopify_All_products_variants where barcode<>'') pv ON p._AIRBYTE_PRODUCTS_HASHID = pv._AIRBYTE_PRODUCTS_HASHID LEFT JOIN ( SELECT customer_id, city, province, row_number() OVER ( partition BY customer_id ORDER BY id DESC) rowid FROM Vahdam_db.maplemonk.Shopify_All_customers_addresses) AS cd ON o.CUSTOMER:id::int = cd.customer_id AND cd.rowid = 1 GROUP BY cast(o.id AS varchar(16777216)), o.CUSTOMER:id::int, ol1.id, cast(ol1.sku AS varchar(16777216)), pv.barcode, o.currency, CASE WHEN p.title IS NULL THEN 'NA' ELSE p.title END, CASE WHEN cd.city IS NULL OR cd.city = '' THEN 'NA' ELSE cd.city END, CASE WHEN cd.province IS NULL OR cd.province = '' THEN 'NA' ELSE cd.province END, CASE WHEN p.product_type = '' THEN 'NA' ELSE p.product_type END, CASE WHEN o.cancelled_at IS NOT NULL THEN 'CANCELLED' ELSE 'Shopify_Processed' END, cast(o.created_at AS datetime); UPDATE Vahdam_db.maplemonk.FACT_ITEMS AS A SET A.city=case when B."New city" is null then INITCAP(A.city) else INITCAP(B."New city") end FROM Vahdam_db.maplemonk.shopify_all_cities_mapping B WHERE UPPER(A.city)=UPPER(B.city); ALTER TABLE Vahdam_db.maplemonk.FACT_ITEMS ADD COLUMN customer_flag varchar(50); ALTER TABLE Vahdam_db.maplemonk.FACT_ITEMS ADD COLUMN new_customer_flag varchar(50); ALTER TABLE Vahdam_db.maplemonk.FACT_ITEMS ADD COLUMN acquisition_channel varchar(16777216); ALTER TABLE Vahdam_db.maplemonk.FACT_ITEMS ADD COLUMN acquisition_product varchar(16777216); UPDATE Vahdam_db.maplemonk.FACT_ITEMS AS A SET A.customer_flag = B.flag FROM ( SELECT DISTINCT order_id, customer_id, order_timestamp, CASE WHEN order_timestamp <> Min(order_timestamp) OVER ( partition BY customer_id) THEN 'Repeated' ELSE 'New' END AS Flag FROM Vahdam_db.maplemonk.FACT_ITEMS)AS B WHERE A.order_id = B.order_id AND A.customer_id = B.customer_id; UPDATE Vahdam_db.maplemonk.FACT_ITEMS SET customer_flag = CASE WHEN customer_flag IS NULL THEN 'New' ELSE customer_flag END; UPDATE Vahdam_db.maplemonk.FACT_ITEMS AS A SET A.new_customer_flag = B.flag FROM ( SELECT DISTINCT order_id, customer_id, order_timestamp, CASE WHEN Last_day(order_timestamp, 'month') <> Last_day(Min(order_timestamp) OVER ( partition BY customer_id)) THEN 'Repeated' ELSE 'New' END AS Flag FROM Vahdam_db.maplemonk.FACT_ITEMS)AS B WHERE A.order_id = B.order_id AND A.customer_id = B.customer_id; UPDATE Vahdam_db.maplemonk.FACT_ITEMS SET new_customer_flag = CASE WHEN new_customer_flag IS NULL THEN 'New' ELSE new_customer_flag END; CREATE OR replace temporary TABLE Vahdam_db.maplemonk.temp_source AS SELECT DISTINCT customer_id, source FROM ( SELECT DISTINCT customer_id, order_timestamp, source, Min(order_timestamp) OVER ( partition BY customer_id) firstOrderdate FROM Vahdam_db.maplemonk.FACT_ITEMS)res WHERE order_timestamp=firstorderdate; UPDATE Vahdam_db.maplemonk.FACT_ITEMS AS a SET a.acquisition_channel=b.source FROM Vahdam_db.maplemonk.temp_source b WHERE a.customer_id = b.customer_id; CREATE OR replace temporary TABLE Vahdam_db.maplemonk.temp_product AS SELECT DISTINCT customer_id, product_name, Row_number() OVER (partition BY customer_id ORDER BY sales DESC) rowid FROM ( SELECT DISTINCT customer_id, order_timestamp, product_name, sales , Min(order_timestamp) OVER (partition BY customer_id) firstOrderdate FROM Vahdam_db.maplemonk.FACT_ITEMS )res WHERE order_timestamp=firstorderdate; UPDATE Vahdam_db.maplemonk.FACT_ITEMS AS A SET A.acquisition_product=B.product_name FROM ( SELECT * FROM Vahdam_db.maplemonk.temp_product WHERE rowid=1)B WHERE A.customer_id = B.customer_id;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from VAHDAM_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            