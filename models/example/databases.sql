{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE Gynoveda_DB.MAPLEMONK.FB_Gynoveda_CONSOLIDATED AS select Adset_Name,Adset_ID,Account_Name, Account_ID, Campaign_Name, Campaign_ID,Fb.date_start Date ,SUM(CLICKS) Clicks,SUM(SPEND) Spend,SUM(IMPRESSIONS) Impressions ,SUM(NVL(Fc.Conversions,0)) Conversions ,SUM(NVL(Fcv.Conversion_Value,0)) Conversion_Value ,\'Facebook\' Channel ,\'Gynoveda_FB\' Facebook_Account from Gynoveda_DB.MAPLEMONK.FB_gynoveda_ADS_INSIGHTS Fb left join ( select ad_id,date_start ,SUM(C.value:value) Conversions from Gynoveda_DB.MAPLEMONK.FB_Gynoveda_ADS_INSIGHTS,lateral flatten(input => ACTIONS) C where C.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(C.value:value) is not null )Fc ON Fb.ad_id = Fc.ad_id and Fb.date_start=Fc.date_start left join ( select ad_id,date_start ,SUM(CV.value:value) Conversion_Value from Gynoveda_DB.MAPLEMONK.FB_Gynoveda_ADS_INSIGHTS,lateral flatten(input => ACTION_VALUES) CV where CV.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(CV.value:value) is not null )Fcv ON Fb.ad_id = Fcv.ad_id and Fb.date_start=Fcv.date_start group by Adset_Name, Adset_ID, Account_Name, Account_ID, Campaign_Name, Campaign_ID,Fb.date_start; CREATE OR REPLACE TABLE Gynoveda_DB.MAPLEMONK.MARKETING_CONSOLIDATED_GYNOVEDA AS select ADSET_NAME,ADSET_ID,ACCOUNT_NAME, ACCOUNT_ID ,CAMPAIGN_NAME, CAMPAIGN_ID, DATE ,NULL AD_TYPE,NULL AD_STRENGTH ,NULL AD_NETWORK_TYPE,NULL AD_URL ,dayname(DATE) Day_of_Week ,YEAR(DATE) AS YEAR ,MONTH(DATE) AS MONTH ,CHANNEL ,FACEBOOK_ACCOUNT AS ACCOUNT , null Campaign_type ,SUM(CLICKS) Clicks ,SUM(SPEND) Spend ,SUM(IMPRESSIONS) Impressions ,SUM(CONVERSIONS) Conversions ,SUM(CONVERSION_VALUE) Conversion_Value from Gynoveda_DB.MAPLEMONK.FB_Gynoveda_CONSOLIDATED group by ADSET_NAME,ADSET_ID,ACCOUNT_NAME, ACCOUNT_ID ,CAMPAIGN_NAME, CAMPAIGN_ID, DATE, CHANNEL, FACEBOOK_ACCOUNT union select NULL, NULL, NULL, NULL ,\"campaign.name\", \"campaign.id\", \"segments.date\" ,NULL, NULL,NULL, NULL, dayname(\"segments.date\") ,YEAR(\"segments.date\") YEAR ,MONTH(\"segments.date\") MONTH ,\'Google\' Channel ,\'Google_gynoveda\' ACCOUNT ,\"campaign.advertising_channel_type\" ,sum(\"metrics.clicks\") clicks ,sum(\"metrics.cost_micros\")/1000000 spend ,sum(\"metrics.impressions\") impressions ,sum(\"metrics.conversions\") conversions ,sum(\"metrics.conversions_value\") conversions_value from gynoveda_db.maplemonk.GADS_GYNOVEDA_CAMPAIGNS_DATA where lower(\"campaign.advertising_channel_type\") like \'%performance_max%\' group by \"campaign.name\", \"campaign.id\", \"segments.date\",\"campaign.advertising_channel_type\" union select GAG.\"ad_group.name\", GAG.\"ad_group_ad.ad.id\", GAG.\"customer.descriptive_name\", GAG.\"customer.id\" ,GAG.\"campaign.name\", GAG.\"campaign.id\", GAG.\"segments.date\" ,GAG.\"ad_group_ad.ad.type\", GAG.\"ad_group_ad.ad_strength\" ,GAG.\"segments.ad_network_type\",GAG.\"ad_group_ad.ad.display_url\", GAG.\"segments.day_of_week\" ,YEAR(GAG.\"segments.date\") YEAR ,MONTH(GAG.\"segments.date\") MONTH ,\'Google\' Channel ,\'Google_gynoveda\' ACCOUNT ,CD.campaign_type Campaign_Type ,sum(GAG.\"metrics.clicks\") clicks ,sum(GAG.\"metrics.cost_micros\")/1000000 spend ,sum(GAG.\"metrics.impressions\") impressions ,sum(GAG.\"metrics.conversions\") conversions ,sum(GAG.\"metrics.conversions_value\") conversions_value from gynoveda_db.maplemonk.GADS_GYNOVEDA_AD_GROUP_AD_REPORT GAG left join (select * from (Select \"segments.date\",\"campaign.id\", \"campaign.advertising_channel_type\" campaign_type, row_number() over (partition by \"segments.date\",\"campaign.id\" order by \"segments.date\") rw from gynoveda_db.maplemonk.GADS_GYNOVEDA_CAMPAIGNS_DATA) where rw=1) CD on GAG.\"campaign.id\"=CD.\"campaign.id\" and GAG.\"segments.date\"=CD.\"segments.date\" group by 1, 2,3,4,5,6,7,8,9,10,11,12,13, 14, 15, 16,17;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from GYNOVEDA_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        