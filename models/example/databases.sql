{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table eggozdb.maplemonk.zero_billing_retailers as select zb.code, zb.area_classification, rrp.name AS parent_name, zb.beat_number, zb.onboarding_status, zb.onboarding_date, cast(timestampadd(minute,660,ooo.last_order_date) as date) as last_order_date, datediff(day,ooo.last_order_date,getdate()) as recency, datediff(day,zb.onboarding_date,getdate()) as days_since_onboard, ll.frequency, ll.total_bill_amount, ll.total_bill_amount/ll.frequency as average_order_amount from (select rr.id, rr.parent_id, rr.area_classification ,rr.code, rr.beat_number, rr.onboarding_status, cast(timestampadd(minute,660,rr.onboarding_date) as date) AS onboarding_date from eggozdb.maplemonk.my_sql_retailer_retailer rr left join (select * from eggozdb.maplemonk.my_sql_order_order where is_trial<>True AND cast(timestampadd(minute,330,date) as date) between dateadd(day, -8, getdate()) and cast(timestampadd(minute, 660, getdate()) as date)) o ON o.retailer_id = rr.id where o.retailer_id is null) zb left join eggozdb.maplemonk.my_sql_retailer_retailerparent rrp on zb.parent_id = rrp.id left join (select retailer_id, max(date) as last_order_date from eggozdb.maplemonk.my_sql_order_order where lower(status) in (\'delivered\') and lower(status)<>\'open_po\' and is_trial<>True group by retailer_id) ooo on ooo.retailer_id = zb.id left join (select retailer_id, count(orderId) as frequency, sum(order_price_amount) total_bill_amount from eggozdb.maplemonk.my_sql_order_order where lower(status) in (\'delivered\') group by retailer_id) ll on ll.retailer_id = zb.id where (recency < 31 or datediff(day,zb.onboarding_date,getdate()) < 31) and (recency > 7 or recency is null) ; create or replace table eggozdb.maplemonk.untouched_retailers as select tt.*, bgt.so from (SELECT CAST(TIMESTAMPADD(MINUTE, 660, db.beat_date) AS DATE) beat_date, db.beat_number, db.beat_name, rc.retailer_count, rr.code AS retailer_name, rr.area_classification, CAST(TIMESTAMPADD(MINUTE, 660, rr.onboarding_date) AS DATE) onboarding_date, CAST(TIMESTAMPADD(MINUTE, 660, rr.last_order_date) AS DATE) last_order_date, oo.status status_bill, oor.line_type status_ret_rep, oor2.last_pickup_date FROM eggozdb.maplemonk.my_sql_distributionchain_beatassignment db RIGHT JOIN eggozdb.maplemonk.my_sql_retailer_retailer rr ON rr.beat_number = db.beat_number AND rr.area_classification = db.demand_classification LEFT JOIN (SELECT * FROM eggozdb.maplemonk.my_sql_order_order WHERE is_trial <> TRUE AND LOWER(status) = \'delivered\') oo ON oo.beat_assignment_id = db.id AND CAST(TIMESTAMPADD(MINUTE, 660, oo.delivery_date) AS DATE) = CAST(TIMESTAMPADD(MINUTE, 660, db.beat_date) AS DATE) AND oo.retailer_id = rr.id LEFT JOIN (SELECT * FROM eggozdb.maplemonk.my_sql_order_orderreturnline WHERE LOWER(line_type) IN (\'replacement\' , \'return\')) oor ON oor.beat_assignment_id = db.id AND CAST(TIMESTAMPADD(MINUTE, 660, oor.pickup_date) AS DATE) = CAST(TIMESTAMPADD(MINUTE, 660, db.beat_date) AS DATE) AND rr.id = oor.retailer_id LEFT JOIN (SELECT area_classification, beat_number, COUNT(code) retailer_count FROM eggozdb.maplemonk.my_sql_retailer_retailer WHERE LOWER(onboarding_status) = \'onboarded\' GROUP BY beat_number , area_classification) rc ON rc.area_classification = db.demand_classification AND rc.beat_number = db.beat_number LEFT JOIN (SELECT retailer_id, MAX(CAST(TIMESTAMPADD(MINUTE, 660, pickup_date) AS DATE)) AS last_pickup_date FROM eggozdb.maplemonk.my_sql_order_orderreturnline WHERE LOWER(line_type) IN (\'replacement\' , \'return\') GROUP BY retailer_id) oor2 ON oor2.retailer_id = rr.id WHERE LOWER(db.beat_type) = \'regular\' AND LOWER(db.beat_status) = \'completed\' AND LOWER(rr.onboarding_status) = \'onboarded\' ) tt left join maplemonk.target_jse_gt bgt on bgt.beat_number_original = tt.beat_number and bgt.city = tt.area_classification ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        