{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table almowear_db.maplemonk.ALMOWEAR_SALES_REPORTING AS with sales as ( select marketplace ,order_date ,count(distinct case when new_customer_flag = 1 and lower(order_status) <> \'cancelled\' then invoice_id end) as orders_new ,sum(case when new_customer_flag = 1 and lower(order_status) <> \'cancelled\' then mrp_sales end ) as mrp_sales_new ,sum(case when new_customer_flag = 1 and lower(order_status) <> \'cancelled\' then selling_price end ) as gross_sales_new ,sum(case when new_customer_flag = 1 then suborder_quantity end ) as total_quantity_new ,sum(case when new_customer_flag = 1 then returned_quantity end ) as returned_quantity_new ,sum(case when new_customer_flag = 1 then cancelled_quantity end ) as cancelled_quantity_new ,sum(case when new_customer_flag = 1 then return_sales end ) as return_sales_new ,sum(case when new_customer_flag = 1 then cancel_sales end ) as cancel_sales_new ,mrp_sales_new- gross_sales_new as discount_new ,ifnull(gross_sales_new,0) - ifnull(return_sales_new,0) as net_sales_new ,count(distinct case when new_customer_flag = 0 and lower(order_status) <> \'cancelled\' then invoice_id end) as orders_repeat ,sum(case when new_customer_flag = 0 and lower(order_status) <> \'cancelled\' then mrp_sales end ) as mrp_sales_repeat ,sum(case when new_customer_flag = 0 and lower(order_status) <> \'cancelled\' then selling_price end ) as gross_sales_repeat ,sum(case when new_customer_flag = 0 then suborder_quantity end ) as total_quantity_repeat ,sum(case when new_customer_flag = 0 then returned_quantity end ) as returned_quantity_repeat ,sum(case when new_customer_flag = 0 then cancelled_quantity end ) as cancelled_quantity_repeat ,sum(case when new_customer_flag = 0 then return_sales end ) as return_sales_repeat ,sum(case when new_customer_flag = 0 then cancel_sales end ) as cancel_sales_repeat ,mrp_sales_repeat- gross_sales_repeat as discount_repeat ,ifnull(gross_sales_repeat,0) - ifnull(return_sales_repeat,0) as net_sales_repeat from ALMOWEAR_DB.maplemonk.sales_consolidated_AW group by 1,2 ), marketing as ( select date,\'Shopify\' as marketplace ,sum(spend) as spend, avg(orders) orders,avg(Sales) Sales from almowear_db.MAPLEMONK.MARKETING_CONSOLIDATED_AW a left join (select order_timestamp::date as order_date, count(distinct order_id) as orders, sum(net_sales) as Sales from almowear_db.maplemonk.FACT_ITEMS where shop_name like \'%hop%\' and final_utm_channel not in (\'Others\',\'Direct\') and order_status = \'Shopify_Processed\' group by 1 ) b on a.date = b.order_date group by 1,2 ), Amazon_ads as ( select date,\'Amazon.in\' as marketplace ,sum(spend) as spend , sum(sales) as amazon_ads_sales , sum(conversions) as amazon_ads_orders from almowear_db.MAPLEMONK.AMAZONADS_MARKETING_AW group by 1,2 ), marketing_data as ( select date,marketplace ,sum(spend) as spend , sum(\"Revenue from Ads\") as marketing_sales , sum(\"Orders from Ads\") as marketing_orders from almowear_db.MAPLEMONK.MARKETPLACE_MARKETING_SPEND group by 1,2 ) select coalesce(s.marketplace,m.marketplace,a.marketplace,md.marketplace) as marketplace ,coalesce(s.order_date,m.date,a.date,md.date) as order_date ,orders_new ,mrp_sales_new ,discount_new ,gross_sales_new ,total_quantity_new ,returned_quantity_new ,cancelled_quantity_new ,return_sales_new ,cancel_sales_new ,net_sales_new ,orders_repeat ,mrp_sales_repeat ,discount_repeat ,gross_sales_repeat ,total_quantity_repeat ,returned_quantity_repeat ,cancelled_quantity_repeat ,return_sales_repeat ,cancel_sales_repeat ,net_sales_repeat ,coalesce(m.spend,a.spend,md.spend) as spend ,coalesce(amazon_ads_sales,marketing_sales,m.sales) as ads_sales ,coalesce(amazon_ads_orders,marketing_orders,m.orders) as ads_orders from sales s full join marketing m on s.order_date = m.date and s.marketplace in (\'Shopify\',\'Shopify_India\') full join amazon_ads a on a.date = coalesce(s.order_date,m.date) and s.marketplace in (\'Amazon.in\',\'Gofynd\') full join marketing_data md on md.date = coalesce(s.order_date,m.date,a.date) and md.marketplace=s.marketplace order by s.order_date desc;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from ALMOWEAR_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        