{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE maplemonk.CLICKPOST_FACT_ITEMS AS WITH DATA_FROM_CLICKPOST AS ( WITH ranked_orders AS ( SELECT *, ROW_NUMBER() OVER (PARTITION BY waybill ORDER BY _AIRBYTE_EMITTED_AT DESC) AS rwn FROM maplemonk.ClickPost_Clickpost_Zouk_orders ) SELECT waybill AS AWb, SAFE_CAST(JSON_EXTRACT_SCALAR(A, \'$.location\') AS STRING) AS location, SAFE_CAST(JSON_EXTRACT_SCALAR(A, \'$.clickpost_status_description\') AS STRING) AS status, DATETIME(TIMESTAMP(CAST(JSON_EXTRACT_SCALAR(A, \'$.created_at\') AS STRING)), \'Asia/Kolkata\') AS created_At, SAFE_CAST(JSON_EXTRACT_SCALAR(A, \'$.remark\') AS STRING) AS remark, SAFE_CAST(JSON_EXTRACT_SCALAR(LATEST_STATUS, \'$.location\') AS STRING) AS location_d, SAFE_CAST(JSON_EXTRACT_SCALAR(LATEST_STATUS, \'$.clickpost_status_description\') AS STRING) AS status_d, DATETIME(TIMESTAMP(CAST(JSON_EXTRACT_SCALAR(LATEST_STATUS, \'$.created_at\') AS STRING)), \'Asia/Kolkata\') AS created_At_d, SAFE_CAST(JSON_EXTRACT_SCALAR(LATEST_STATUS, \'$.remark\') AS STRING) AS remark_d, CASE WHEN ARRAY_LENGTH(scans) = 0 THEN 1 ELSE 0 END AS flag, SAFE_CAST(JSON_EXTRACT_SCALAR(ADDITIONAL, \'$.courier_partner_edd\') AS STRING) AS edd, SAFE_CAST(JSON_EXTRACT_SCALAR(ADDITIONAL, \'$.courier_partner_name\') AS STRING) AS courier_partner, SAFE_CAST(JSON_EXTRACT_SCALAR(ADDITIONAL, \'$.invoice_number\') AS STRING) AS invoice_number, SAFE_CAST(JSON_EXTRACT_SCALAR(ADDITIONAL, \'$.order_id\') AS STRING) AS order_id, SAFE_CAST(JSON_EXTRACT_SCALAR(JSON_EXTRACT(ADDITIONAL, \'$.edd\'), \'$.max_sla\') AS STRING) AS max_sla, SAFE_CAST(JSON_EXTRACT_SCALAR(JSON_EXTRACT(ADDITIONAL, \'$.edd\'), \'$.min_sla\') AS STRING) AS min_sla, SAFE_CAST(JSON_EXTRACT_SCALAR(ADDITIONAL, \'$.cod_value\') AS FLOAT64) AS Cod_value FROM ranked_orders LEFT JOIN UNNEST(scans) AS A WHERE rwn = 1 ) SELECT og.awb AS awb_number, op.location AS order_location, op.created_At AS orderplaced_date, op.status AS orderplaced_status, op.remark AS order_remark, p_k.location AS pickup_location, COALESCE(p_k.created_At, i_t.created_At, db.created_At) AS pickup_date, \'PICKEDUP\' AS pickup_status, p_k.remark AS pickup_remark, i_t.location AS intransit_location, i_t.created_At AS intransit_date, i_t.status AS intransit_status, i_t.remark AS intransit_remark, o_d.location AS outfordelivery_location, o_d.created_At AS outfordelivery_date, o_d.status AS outfordelivery_status, o_d.remark AS outfordelivery_remark, COALESCE(dl.location, dld.location_d) AS delivery_location, COALESCE(dl.created_At, dld.created_At_d) AS delivery_date, COALESCE(dl.status, dld.status_d) AS delivery_status, COALESCE(dl.remark, dld.remark_d) AS delivery_remark, cr.status_d AS current_status, cr.created_At_d AS current_d, cr.flag AS flag, ad.edd, ad.courier_partner, ad.invoice_number, ad.order_id, CASE WHEN ad.cod_value > 0 THEN \'COD\' ELSE \'PREPAID\' END AS Payment_method, min_sla, max_sla FROM (SELECT DISTINCT awb, min_sla, max_sla FROM DATA_FROM_CLICKPOST) og LEFT JOIN (SELECT * FROM (SELECT awb, location, \'DELIVERED\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) = \'delivered\') WHERE rw = 1) dl ON og.awb = dl.awb LEFT JOIN (SELECT * FROM (SELECT awb, location, \'ORDER PLACED\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) IN (\'order placed\', \'orderplaced\')) WHERE rw = 1) op ON og.awb = op.awb LEFT JOIN (SELECT * FROM (SELECT awb, location, \'intransit\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) = \'intransit\') WHERE rw = 1) i_t ON og.awb = i_t.awb LEFT JOIN (SELECT * FROM (SELECT awb, location, \'PICKEDUP\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) = \'pickedup\') WHERE rw = 1) p_k ON og.awb = p_k.awb LEFT JOIN (SELECT * FROM (SELECT awb, location, \'OUT FOR DELIVERY\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) LIKE \'%out%for%delivery%\' AND NOT LOWER(status) LIKE ANY (\'%awaited\', \'%needed\')) WHERE rw = 1) o_d ON og.awb = o_d.awb LEFT JOIN (SELECT * FROM (SELECT awb, location, \'intransit\' AS status, created_At, remark, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status) = \'destinationhubin\' OR LOWER(status) = \'origincityout\') WHERE rw = 1) db ON db.awb = og.awb LEFT JOIN (SELECT * FROM (SELECT awb, location_d, status_d, created_At_d, remark_d, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At_d) rw FROM DATA_FROM_CLICKPOST WHERE LOWER(status_d) = \'delivered\') WHERE rw = 1) dld ON dld.awb = og.awb LEFT JOIN (SELECT * FROM (SELECT flag, awb, location_d, status_d, created_At_d, remark_d, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY created_At_d) rw FROM DATA_FROM_CLICKPOST) WHERE rw = 1) cr ON cr.awb = og.awb LEFT JOIN (SELECT * FROM (SELECT awb, edd, courier_partner, invoice_number, order_id, cod_value, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY 1) rw FROM DATA_FROM_CLICKPOST) WHERE rw = 1) ad ON ad.awb = og.awb;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from maplemonk.INFORMATION_SCHEMA.TABLES
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            