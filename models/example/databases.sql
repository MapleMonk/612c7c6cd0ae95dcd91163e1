{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table FUAARK_DB.MAPLEMONK.FUAARK_DB_inventory_fact_items as with Inventory_Data_Base as ( select * from (select * ,row_number() over (partition by replace(SKU,\'\\'\',\'\'), DATA_FETCH_DATE order by _airbyte_normalized_at desc) rw from (select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'BOTTOMS\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_BOTTOMS union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'WOMEN_BOTTOMS\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_WOMEN_BOTTOM union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'CAPS\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_CAPS union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\',_airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'WOMEN_SWEATSHIRT\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_WOMEN_SWEATSHIRT union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'INNERWEAR\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_INNERWEAR union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'WOMEN_TANK_BRA\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_WOMEN_TANK___BRA union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'STRINGERS\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_STRINGERS union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'TSHIRT\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_TSHIRT union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'WOMEN_TSHIRT\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_WOMEN_TSHIRT union all select replace(SKU,\' \',\'\') SKU ,CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', _airbyte_normalized_at::timestamp)::date DATA_FETCH_DATE ,TRY_TO_DOUBLE(QUANTITY) AVAILABLEINVENTORY ,\'WINTERWEAR\' GS_CATEGORY ,_airbyte_normalized_at from FUAARK_DB.MAPLEMONK.GS_FINAL_INVENTORY_WINTERWEAR ) ) where rw = 1 ), SKUMASTER as ( select * from (select SKUCODE , NAME , CATEGORY , SUB_CATEGORY , COLOUR , GENDER , row_number() over (partition by SKUCODE order by 1) rw from FUAARK_DB.MAPLEMONK.FINAL_SKU_MASTER ) where rw = 1 ), Inventory_Data as ( select ID.DATA_FETCH_DATE ,ID.SKU ,SKUMASTER.NAME PRODUCTNAME ,NULL AS SIZE ,SKUMASTER.GENDER ,SKUMASTER.SUB_CATEGORY ,ID.GS_CATEGORY ,SKUMASTER.CATEGORY ,SKUMASTER.COLOUR COLOR ,sum(ifnull(AVAILABLEINVENTORY,0)) AVAILABLEINVENTORY from Inventory_Data_Base ID left join SKUMASTER on ID.SKU = SKUMASTER.SKUCODE group by 1,2,3,4,5,6,7,8,9 ), Sales_Data_Daily as ( SELECT order_date, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY FROM FUAARK_DB.MAPLEMONK.FUAARK_DB_sales_consolidated GROUP BY 1, 2,3,4,5,6 ) , Sales_Data_Max_Weekly as ( WITH WeeklySales AS ( SELECT date_trunc(\'week\', order_date) AS week_Start, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY FROM FUAARK_DB.MAPLEMONK.FUAARK_DB_sales_consolidated where datediff(day,order_date,current_date()) <=56 GROUP BY 1, 2,3,4,5,6 ) SELECT week_Start, SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, QUANTITY, RETURNED_QUANTITY FROM ( SELECT week_Start, SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, QUANTITY, RETURNED_QUANTITY, row_number() OVER (PARTITION BY SKU ORDER BY QUANTITY DESC) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1 ) , Sales_Data_Min_Weekly as ( WITH WeeklySales AS ( SELECT date_trunc(\'week\', order_date) AS week_Start, REPLACE(SKU_CODE, \'\\'\', \'\') AS SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, SUM(IFNULL(quantity, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity, 0)) AS RETURNED_QUANTITY FROM FUAARK_DB.MAPLEMONK.FUAARK_DB_sales_consolidated where datediff(day,order_date,current_date()) <=56 GROUP BY 1, 2,3,4,5,6 ) SELECT week_Start, SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, QUANTITY, RETURNED_QUANTITY FROM ( SELECT week_Start, SKU, PRODUCT_NAME_FINAL, PRODUCT_CATEGORY, PRODUCT_SUB_CATEGORY, GENDER, QUANTITY, RETURNED_QUANTITY, row_number() OVER (PARTITION BY SKU ORDER BY QUANTITY) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1 ) , Sales_56avg_w_Inv as ( select ID.DATA_FETCH_DATE ,ID.SKU SKU ,coalesce(ID.PRODUCTNAME,SD56.PRODUCT_NAME_FINAL) Product_Final_Name ,coalesce(ID.category, SD56.PRODUCT_CATEGORY) CATEGORY ,ID.GS_CATEGORY ,coalesce(ID.SUB_CATEGORY, SD56.PRODUCT_SUB_CATEGORY) SUB_CATEGORY ,coalesce(ID.GENDER, SD56.GENDER) GENDER ,ID.COLOR ,max(ifnull(ID.availableinventory,0)) Available_Inventory ,sum(ifnull(SD56.Quantity,0)) Sold_Quantity_56_Days ,max(ifnull(SWMax.Quantity,0)) Max_Weekly_Sales ,max(ifnull(SWMin.Quantity,0)) Min_Weekly_Sales from Inventory_Data ID left join Sales_Data_Daily SD56 on ID.SKU = SD56.SKU and (datediff(day,try_to_date(SD56.ORDER_DATE),ifnull(ID.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 56) left join Sales_Data_Max_Weekly SWMax on ID.SKU = SWMax.SKU left join SALES_DATA_MIN_WEEKLY SWMin on ID.SKU = SWMin.SKU group by 1,2,3,4,5,6,7,8 ) , Sales_56_14_Avg_w_Inv as ( select DATA_FETCH_DATE ,SD56.SKU ,SD56.Product_Final_Name ,SD56.Category ,SD56.GS_CATEGORY ,SD56.SUB_CATEGORY ,SD56.GENDER ,SD56.COLOR ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,sum(ifnull(SD14.Quantity,0)) Sold_Quantity_14_Days from Sales_56avg_w_Inv SD56 left join Sales_Data_Daily SD14 on SD56.SKU = SD14.SKU and (datediff(day,try_to_date(SD14.ORDER_DATE),ifnull(SD56.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 14) group by 1,2,3,4,5,6,7,8,9,10,11,12 ), Sales_56_14_mtd_Avg_w_Inv as ( select DATA_FETCH_DATE ,SD56.SKU ,SD56.Product_Final_Name ,SD56.Category ,SD56.GS_CATEGORY ,SD56.SUB_CATEGORY ,SD56.GENDER ,SD56.COLOR ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,Sold_Quantity_14_Days ,sum(ifnull(SDmtd.Quantity,0)) sold_quantity_mtd from Sales_56_14_Avg_w_Inv SD56 left join Sales_Data_Daily SDmtd on SD56.SKU = SDmtd.SKU and date_trunc(\'month\',try_to_date(SDmtd.ORDER_DATE)-1) = date_trunc(\'month\',ifnull(SD56.DATA_FETCH_DATE,current_date())) and try_to_date(SDmtd.ORDER_DATE) < ifnull(SD56.DATA_FETCH_DATE,current_date()) group by 1,2,3,4,5,6,7,8,9,10,11,12,13 ), Sales_56_14_7_mtd_Avg_w_Inv as ( select DATA_FETCH_DATE ,right(DATA_FETCH_DATE::Date,2)-1 mtd_Days ,SD56_14.SKU ,SD56_14.Product_Final_Name ,SD56_14.Category ,SD56_14.GS_CATEGORY ,SD56_14.SUB_CATEGORY ,SD56_14.GENDER ,SD56_14.COLOR ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,Sold_Quantity_14_Days ,sold_quantity_mtd ,sum(ifnull(SD7.Quantity,0)) Sold_Quantity_7_Days from Sales_56_14_mtd_Avg_w_Inv SD56_14 left join Sales_Data_Daily SD7 on SD56_14.SKU = SD7.SKU and (datediff(day,try_to_date(SD7.ORDER_DATE),ifnull(SD56_14.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 7) where data_fetch_date >= \'2024-07-16\' group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 union all select DATA_FETCH_DATE ,mtd_Days ,SKU ,Product_Final_Name ,Category ,GS_CATEGORY ,SUB_CATEGORY ,GENDER ,COLOR ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,Sold_Quantity_14_Days ,sold_quantity_mtd ,Sold_Quantity_7_Days from FUAARK_DB.MAPLEMONK.FUAARK_DB_inventory_fact_items_old where DATA_FETCH_DATE::date < \'2024-07-16\' ), PRODUCT_NAME_QUANTITY as ( select DATA_FETCH_DATE ,Product_Final_Name ,CATEGORY ,sum(Sold_Quantity_7_Days) PRODUCT_NAME_QUANTITY_7_DAYS ,sum(Sold_Quantity_14_Days) PRODUCT_NAME_QUANTITY_14_DAYS ,sum(Sold_Quantity_56_Days) PRODUCT_NAME_QUANTITY_56_DAYS from Sales_56_14_7_mtd_Avg_w_Inv group by 1,2,3 ), CATEGORY_QUANTITY as ( select DATA_FETCH_DATE ,CATEGORY ,sum(Sold_Quantity_7_Days) CATEGORY_QUANTITY_7_DAYS ,sum(Sold_Quantity_14_Days) CATEGORY_QUANTITY_14_DAYS ,sum(Sold_Quantity_56_Days) CATEGORY_QUANTITY_56_DAYS from Sales_56_14_7_mtd_Avg_w_Inv group by 1,2 ), CUMMULATIVE_QUANTITY as ( select A.DATA_FETCH_DATE ,A.Product_Final_Name ,A.CATEGORY ,div0(ifnull(PRODUCT_NAME_QUANTITY_7_DAYS,0),ifnull(B.CATEGORY_QUANTITY_7_DAYS,0)) PRODUCT_NAME_QUANTITY_7D_CONTRIBUTION ,div0(sum(ifnull(PRODUCT_NAME_QUANTITY_7_DAYS,0)) over (partition by A.CATEGORY, A.DATA_FETCH_DATE order by PRODUCT_NAME_QUANTITY_7_DAYS desc) ,ifnull(B.CATEGORY_QUANTITY_7_DAYS,0) ) PRODUCT_NAME_QUANTITY_7D_CUMMULATIVE ,div0(ifnull(PRODUCT_NAME_QUANTITY_14_DAYS,0),ifnull(B.CATEGORY_QUANTITY_14_DAYS,0)) PRODUCT_NAME_QUANTITY_14D_CONTRIBUTION ,div0(sum(ifnull(PRODUCT_NAME_QUANTITY_14_DAYS,0)) over (partition by A.CATEGORY, A.DATA_FETCH_DATE order by PRODUCT_NAME_QUANTITY_14_DAYS desc) ,ifnull(B.CATEGORY_QUANTITY_14_DAYS,0) ) PRODUCT_NAME_QUANTITY_14D_CUMMULATIVE ,div0(ifnull(PRODUCT_NAME_QUANTITY_56_DAYS,0),ifnull(B.CATEGORY_QUANTITY_56_DAYS,0)) PRODUCT_NAME_QUANTITY_56D_CONTRIBUTION ,div0(sum(ifnull(PRODUCT_NAME_QUANTITY_56_DAYS,0)) over (partition by A.CATEGORY, A.DATA_FETCH_DATE order by PRODUCT_NAME_QUANTITY_56_DAYS desc) ,ifnull(B.CATEGORY_QUANTITY_56_DAYS,0) ) PRODUCT_NAME_QUANTITY_56D_CUMMULATIVE from PRODUCT_NAME_QUANTITY A left join CATEGORY_QUANTITY B on A.DATA_FETCH_DATE = B.DATA_FETCH_DATE AND A.CATEGORY = B.CATEGORY ) select P.* ,Q.PRODUCT_NAME_QUANTITY_7D_CONTRIBUTION ,Q.PRODUCT_NAME_QUANTITY_7D_CUMMULATIVE ,Q.PRODUCT_NAME_QUANTITY_14D_CONTRIBUTION ,Q.PRODUCT_NAME_QUANTITY_14D_CUMMULATIVE ,Q.PRODUCT_NAME_QUANTITY_56D_CONTRIBUTION ,Q.PRODUCT_NAME_QUANTITY_56D_CUMMULATIVE from Sales_56_14_7_mtd_Avg_w_Inv P left join CUMMULATIVE_QUANTITY Q on P.DATA_FETCH_DATE = Q.DATA_FETCH_DATE and P.PRODUCT_FINAL_NAME = Q.PRODUCT_FINAL_NAME AND P.CATEGORY = Q.CATEGORY ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from FUAARK_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            