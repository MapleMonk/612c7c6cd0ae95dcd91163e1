{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table prd_db.beardo.dwh_pandlsummary as select x.*, div0(coalesce(y.spend, z.spend,m.spend, n.spend), count(1) over (partition by x.order_timestamp::date, x.channel order by 1)) spend from( select m.* ,CASE WHEN MONTH(m.order_timestamp::date) >= 4 THEN YEAR(m.order_timestamp::date) + 1 ELSE YEAR(m.order_timestamp::date) END AS financial_year ,d.return_sales ,e.customer_id_final ,case when lower(final_utm_channel) in (\'google\',\'meta\',\'crm\',\'organic\',\'affiliates (cps)\') then upper(final_utm_channel) else \'OTHERS\' end channel from (select a.* ,b.final_utm_source ,b.final_utm_channel ,b.new_customer_flag ,b.tax from prd_db.beardo.dwh_gross_contribution_Beardo a left join ( select order_name, final_utm_source, final_utm_channel, new_customer_flag, sum(tax) tax from prd_db.beardo.dwh_SHOPIFY_FACT_ITEMS group by 1,2,3,4 ) b on a.ordeR_name = b.ordeR_name )m left join ( select reference_code, sum(selling_price) return_sales from prd_db.beardo.dwh_returns_consolidated group by 1 ) d on m.ordeR_name = d.reference_code left join ( select distinct reference_code, customer_id_final from prd_db.beardo.dwh_sales_consolidated ) e on m.ordeR_name = e.reference_code ) x left join (select try_to_date(replace(DATE,\' \',\'\'), \'DD-Mon-YY\') date ,case when google_p_spend = \'-\' then 0 else replace(Google_P_spend,\',\',\'\')::float end spend from datalake_db.beardo.mst__marketing_cost) y on x.ordeR_timestamp::date = y.date and x.channel = \'GOOGLE\' left join (select try_to_date(replace(DATE,\' \',\'\'), \'DD-Mon-YY\') date ,case when facebook_p_spend = \'-\' then 0 else replace(FACEBOOK_P_SPEND,\',\',\'\')::float end spend from datalake_db.beardo.mst__marketing_cost) z on x.ordeR_timestamp::date = z.date and x.channel = \'META\' left join (select try_to_date(replace(DATE,\' \',\'\'), \'DD-Mon-YY\') date ,(case when GPAY_P_SPEND = \'-\' then 0 else replace(GPAY_P_SPEND,\',\',\'\')::float end) + (case when AFFILIATES_P_SPEND = \'-\' then 0 else replace(AFFILIATES_P_SPEND,\',\',\'\')::float end) + (case when PHONEPE_P_SPEND = \'-\' then 0 else replace(PHONEPE_P_SPEND,\',\',\'\')::float end) + (case when PAYTM_P_SPEND = \'-\' then 0 else replace(PAYTM_P_SPEND,\',\',\'\')::float end) + (case when CRED_P_SPEND = \'-\' then 0 else replace(CRED_P_SPEND,\',\',\'\')::float end) spend from datalake_db.beardo.mst__marketing_cost) m on x.ordeR_timestamp::date = m.date and x.channel = \'PARTNERSHIPS & ALLIANCES (CPE)\' left join (select try_to_date(replace(DATE,\' \',\'\'), \'DD-Mon-YY\') date ,(case when MOENGAGE_P_SPEND = \'-\' then 0 else replace(MOENGAGE_P_SPEND,\',\',\'\')::float end) + (case when MOENGAGE_OSM_P_SPEND = \'-\' then 0 else replace(MOENGAGE_OSM_P_SPEND,\',\',\'\')::float end) spend from datalake_db.beardo.mst__marketing_cost) n on x.ordeR_timestamp::date = n.date and x.channel = \'CRM\' ; create or replace table prd_db.beardo.dwh_cltv as select a.ordeR_month ,div0(sum(total_sales), count(distinct customer_id_final)) aov ,div0(sum(spend), count(distinct customer_id_final)) cac ,div0(count(distinct ordeR_name), count(distinct customer_id_final)) apf ,div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0))) gc_percent , div0(AOV*div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0)))*apf,cac) cltv_cac_ratio from ( select distinct date_trunc(\'month\',order_timestamp::Date) order_month from prd_db.beardo.dwh_gross_contribution_Beardo ) a left join prd_db.beardo.dwh_pandlsummary b on datediff(month,date_trunc(\'month\',b.ordeR_timestamp::Date),order_month) between 1 and 12 group by 1 order by 1 desc ; create or replace table prd_db.beardo.dwh_cltv_channel as select a.ordeR_month ,b.channel ,div0(sum(total_sales), count(distinct customer_id_final)) aov ,div0(sum(spend), count(distinct customer_id_final)) cac ,div0(count(distinct ordeR_name), count(distinct customer_id_final)) apf ,div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0))) gc_percent , div0(AOV*div0(sum(ifnull(gc, 0)), sum(ifnull(nr, 0)))*apf,cac) cltv_cac_ratio from ( select distinct date_trunc(\'month\',order_timestamp::Date) order_month from prd_db.beardo.dwh_gross_contribution_Beardo ) a left join prd_db.beardo.dwh_pandlsummary b on datediff(month,date_trunc(\'month\',b.ordeR_timestamp::Date),order_month) between 1 and 12 group by 1,2 order by 1,2 desc ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from PRD_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            