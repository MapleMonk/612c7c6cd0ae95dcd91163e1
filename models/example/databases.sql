{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE table vahdam_db.maplemonk.D2C_Paid_Media as select fi.ORDER_TIMESTAMP::date order_date, \'Overall\' as channel, \'Overall\' as Account, mc.impr, mc.clic as clicks, mc.spe as spend, sum(fi.net_sales) as total_sales, count (distinct fi.order_id) as total_orders, case when count (distinct fi.order_id) = 0 then 0 else sum(fi.net_sales)/count (distinct fi.order_id) end as avg_order_value, case when mc.spe = 0 then 0 else sum(fi.net_sales)/mc.spe end as roas, case when mc.clic = 0 then 0 else mc.spe/mc.clic end as cpc, case when mc.impr = 0 then 0 else mc.clic/mc.impr end as ctr, count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) as new_customers, case when count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) = 0 then 0 else mc.spe/count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) end as CAC, case when mc.impr = 0 then 0 else mc.spe/mc.impr*1000 end as cpm from vahdam_db.maplemonk.fact_items fi left join (select date, sum(impressions) as impr, sum(clicks) as clic, sum(spend) as spe from vahdam_db.maplemonk.marketing_consolidated group by date order by date desc) mc on fi.ORDER_TIMESTAMP::date = mc.date where lower(fi.shop_name) = \'shopify_usa\' group by ORDER_TIMESTAMP::date,mc.impr,mc.clic, mc.spe union all select fi.ORDER_TIMESTAMP::date order_date, \'Facebook\' as channel, \'FB Main\' as Account, mc.impr, mc.clic as clicks, mc.spe as spend, sum(fi.net_sales) as total_sales, count (distinct fi.order_id) as total_orders, case when count (distinct fi.order_id) = 0 then 0 else sum(fi.net_sales)/count (distinct fi.order_id) end as avg_order_value, case when mc.spe = 0 then 0 else sum(fi.net_sales)/mc.spe end as roas, case when mc.clic = 0 then 0 else mc.spe/mc.clic end as cpc, case when mc.impr = 0 then 0 else mc.clic/mc.impr end as ctr, count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) as new_customers, case when count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) = 0 then 0 else mc.spe/count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) end as CAC, case when mc.impr = 0 then 0 else mc.spe/mc.impr*1000 end as cpm from vahdam_db.maplemonk.fact_items fi left join (select date, sum(impressions) as impr, sum(clicks) as clic, sum(spend) as spe from vahdam_db.maplemonk.marketing_consolidated where ACCOUNT = \'USA Main\' group by date order by date desc) mc on fi.ORDER_TIMESTAMP::date = mc.date where lower(LANDING_UTM_CAMPAIGN) like \'%sc%\' and lower(fi.shop_name) = \'shopify_usa\' and lower(final_utm_channel) like \'%facebook%\' group by ORDER_TIMESTAMP::date,mc.impr,mc.clic, mc.spe UNION all select fi.ORDER_TIMESTAMP::date order_date, \'Facebook\' as channel, \'FB Whitelisiting\' as Account, mc.impr, mc.clic as clicks, mc.spe as spend, sum(fi.net_sales) as total_sales, count (distinct fi.order_id) as total_orders, case when count (distinct fi.order_id) = 0 then 0 else sum(fi.net_sales)/count (distinct fi.order_id) end as avg_order_value, case when mc.spe = 0 then 0 else sum(fi.net_sales)/mc.spe end as roas, case when mc.clic = 0 then 0 else mc.spe/mc.clic end as cpc, case when mc.impr = 0 then 0 else mc.clic/mc.impr end as ctr, count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) as new_customers, case when count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) = 0 then 0 else mc.spe/count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) end as CAC, case when mc.impr = 0 then 0 else mc.spe/mc.impr*1000 end as cpm from vahdam_db.maplemonk.fact_items fi left join (select date, sum(impressions) as impr, sum(clicks) as clic, sum(spend) as spe from vahdam_db.maplemonk.marketing_consolidated where ACCOUNT = \'Influencer USA\' group by date order by date desc) mc on fi.ORDER_TIMESTAMP::date = mc.date where lower(LANDING_UTM_CAMPAIGN) like \'%prospecting%\' and lower(fi.shop_name) = \'shopify_usa\' and lower(final_utm_channel) like \'%facebook%\' group by ORDER_TIMESTAMP::date,mc.impr,mc.clic, mc.spe union all select fi.ORDER_TIMESTAMP::date order_date, \'Facebook\' as channel, \'FB Content\' as Account, mc.impr, mc.clic as clicks, mc.spe as spend, sum(fi.net_sales) as total_sales, count (distinct fi.order_id) as total_orders, case when count (distinct fi.order_id) = 0 then 0 else sum(fi.net_sales)/count (distinct fi.order_id) end as avg_order_value, case when mc.spe = 0 then 0 else sum(fi.net_sales)/mc.spe end as roas, case when mc.clic = 0 then 0 else mc.spe/mc.clic end as cpc, case when mc.impr = 0 then 0 else mc.clic/mc.impr end as ctr, count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) as new_customers, case when count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) = 0 then 0 else mc.spe/count (distinct case when fi.new_customer_flag = \'New\' then customer_id else 0 end) end as CAC, case when mc.impr = 0 then 0 else mc.spe/mc.impr*1000 end as cpm from vahdam_db.maplemonk.fact_items fi left join (select date, sum(impressions) as impr, sum(clicks) as clic, sum(spend) as spe from vahdam_db.maplemonk.marketing_consolidated where ACCOUNT = \'BMG US FB\' group by date order by date desc) mc on fi.ORDER_TIMESTAMP::date = mc.date where lower(LANDING_UTM_CAMPAIGN) like \'%discovery%\' and lower(fi.shop_name) = \'shopify_usa\' group by ORDER_TIMESTAMP::date,mc.impr,mc.clic, mc.spe union all select \"segments.date\"::date as order_date, \'Google\' as Channel, \'SEARCH\' as Account, sum(\"metrics.impressions\") as impr, sum(\"metrics.clicks\") as clicks, sum(\"metrics.cost_micros\")/1000000 as spend, sum(\"metrics.conversions_value\") as total_sales, sum(\"metrics.conversions\") as total_orders, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.conversions\") end as avg_order_value, case when sum(\"metrics.cost_micros\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.cost_micros\")*1000000 end as roas, case when sum(\"metrics.clicks\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.clicks\")*1000000) end as cpc, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.clicks\")/sum(\"metrics.impressions\") end as ctr, NULL as new_customers, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.conversions\")*1000000) end as CAC, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.impressions\")*1000000) end as cpm from VAHDAM_DB.MAPLEMONK.GOOGLE_ADS_US_CAMPAIGN_DATA WHERE \"campaign.advertising_channel_type\" = \'SEARCH\' group by \"segments.date\"::date union all select \"segments.date\"::date as order_date, \'Google\' as Channel, \'SHOPPING\' as Account, sum(\"metrics.impressions\") as impr, sum(\"metrics.clicks\") as clicks, sum(\"metrics.cost_micros\")/1000000 as spend, sum(\"metrics.conversions_value\") as total_sales, sum(\"metrics.conversions\") as total_orders, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.conversions\") end as avg_order_value, case when sum(\"metrics.cost_micros\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.cost_micros\")*1000000 end as roas, case when sum(\"metrics.clicks\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.clicks\")*1000000) end as cpc, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.clicks\")/sum(\"metrics.impressions\") end as ctr, NULL as new_customers, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.conversions\")*1000000) end as CAC, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.impressions\")*1000000) end as cpm from VAHDAM_DB.MAPLEMONK.GOOGLE_ADS_US_CAMPAIGN_DATA WHERE \"campaign.advertising_channel_type\" = \'SHOPPING\' group by \"segments.date\"::date union all select \"segments.date\"::date as order_date, \'Google\' as Channel, \'DISPLAY\' as Account, sum(\"metrics.impressions\") as impr, sum(\"metrics.clicks\") as clicks, sum(\"metrics.cost_micros\")/1000000 as spend, sum(\"metrics.conversions_value\") as total_sales, sum(\"metrics.conversions\") as total_orders, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.conversions\") end as avg_order_value, case when sum(\"metrics.cost_micros\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.cost_micros\")*1000000 end as roas, case when sum(\"metrics.clicks\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.clicks\")*1000000) end as cpc, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.clicks\")/sum(\"metrics.impressions\") end as ctr, NULL as new_customers, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.conversions\")*1000000) end as CAC, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.impressions\")*1000000) end as cpm from VAHDAM_DB.MAPLEMONK.GOOGLE_ADS_US_CAMPAIGN_DATA WHERE \"campaign.advertising_channel_type\" = \'DISPLAY\' group by \"segments.date\"::date union all select \"segments.date\"::date as order_date, \'Google\' as Channel, \'VIDEO\' as Account, sum(\"metrics.impressions\") as impr, sum(\"metrics.clicks\") as clicks, sum(\"metrics.cost_micros\")/1000000 as spend, sum(\"metrics.conversions_value\") as total_sales, sum(\"metrics.conversions\") as total_orders, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.conversions\") end as avg_order_value, case when sum(\"metrics.cost_micros\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.cost_micros\")*1000000 end as roas, case when sum(\"metrics.clicks\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.clicks\")*1000000) end as cpc, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.clicks\")/sum(\"metrics.impressions\") end as ctr, NULL as new_customers, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.conversions\")*1000000) end as CAC, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.impressions\")*1000000) end as cpm from VAHDAM_DB.MAPLEMONK.GOOGLE_ADS_US_CAMPAIGN_DATA WHERE \"campaign.advertising_channel_type\" = \'VIDEO\' group by \"segments.date\"::date union all select \"segments.date\"::date as order_date, \'Google\' as Channel, \'P_MAX\' as Account, sum(\"metrics.impressions\") as impr, sum(\"metrics.clicks\") as clicks, sum(\"metrics.cost_micros\")/1000000 as spend, sum(\"metrics.conversions_value\") as total_sales, sum(\"metrics.conversions\") as total_orders, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.conversions\") end as avg_order_value, case when sum(\"metrics.cost_micros\")=0 then 0 else sum(\"metrics.conversions_value\")/sum(\"metrics.cost_micros\")*1000000 end as roas, case when sum(\"metrics.clicks\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.clicks\")*1000000) end as cpc, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.clicks\")/sum(\"metrics.impressions\") end as ctr, NULL as new_customers, case when sum(\"metrics.conversions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.conversions\")*1000000) end as CAC, case when sum(\"metrics.impressions\")=0 then 0 else sum(\"metrics.cost_micros\")/(sum(\"metrics.impressions\")*1000000) end as cpm from VAHDAM_DB.MAPLEMONK.GOOGLE_ADS_US_CAMPAIGN_DATA WHERE \"campaign.advertising_channel_type\" = \'PERFORMANCE_MAX\' group by \"segments.date\"::date ORDER BY order_date::date desc",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from VAHDAM_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        