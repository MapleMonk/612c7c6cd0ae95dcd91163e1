{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table ugaoo_db.maplemonk.unicommerce_fact_items_intermediate as with order_related as (select case when lower(replace(saleorderdto:channel,\'\"\',\'\')) in (\'magento\', \'magento2\', \'ugaoo\') then \'Website\' when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%amazon%\' then \'Amazon\' else replace(saleorderdto:channel,\'\"\',\'\') end as marketplace, replace(saleorderdto:source,\'\"\',\'\') as source, replace(saleorderdto:code,\'\"\',\'\') as order_id, replace(saleorderdto:billingAddress:phone,\'\"\',\'\') as phone, replace(saleorderdto:billingAddress:name,\'\"\',\'\') as name, saleorderdto:billingAddress:email as email, CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',saleorderdto:updated,\'1970-01-01\')) SHIPPING_LAST_UPDATE_DATE, replace(A.Value:itemSku,\'\"\',\'\') as sku, replace(A.Value:channelProductId,\'\"\',\'\') as product_id, replace(A.Value:itemName,\'\"\',\'\') as product_name, replace(saleorderdto:currencyCode,\'\"\',\'\') as currency, upper(replace(saleorderdto:billingAddress:city,\'\"\',\'\')) as city, upper(replace(saleorderdto:billingAddress:state,\'\"\',\'\')) as state, replace(saleorderdto:status,\'\"\',\'\') as ORDER_STATUS, CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',saleorderdto:displayOrderDateTime,\'1970-01-01\')) as order_date, A.Value:shippingCharges::float as shipping_price, A.Value:packetNumber::int as SUBORDER_QUANTITY, A.Value:discount::float as discount, A.Value:totalIntegratedGst::float as tax, A.Value:totalPrice::float as SELLING_PRICE, replace(A.Value:shippingPackageCode,\'\"\',\'\') as shippingPackageCode, replace(A.Value:shippingPackageStatus,\'\"\',\'\') as shippingPackageStatus, replace(A.Value:code,\'\"\',\'\') as saleOrderItemCode, A.Value:id as SALES_ORDER_ITEM_ID from ugaoo_db.maplemonk.unicommerce_historical_load_get_orders_by_ids_test , LATERAL FLATTEN (INPUT => saleorderdto:saleOrderItems)A ) , shipping_related as ( select replace(A.Value:shippingProvider,\'\"\',\'\') as courier, replace(A.Value:status,\'\"\',\'\') shipping_status, A.Value:dispatched dispatched, A.Value:delivered delivered, A.Value:code as shippingPackageCode, replace(c.saleorderdto:code,\'\"\',\'\') as order_id from ugaoo_db.maplemonk.unicommerce_historical_load_get_orders_by_ids_test c, LATERAL FLATTEN (INPUT => saleorderdto:shippingPackages)A ) , returns as ( select B.Value:saleOrderItemCode as saleOrderItemCode, B.Value:itemSku as itemSku, replace(c.saleorderdto:code,\'\"\',\'\') as order_id from ugaoo_db.maplemonk.unicommerce_historical_load_get_orders_by_ids_test C , LATERAL FLATTEN (INPUT => saleorderdto:returns)A, LATERAL FLATTEN (INPUT => A.Value:returnItems)B ) select o.*,s.courier, s.shipping_status, date(CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',s.dispatched,\'1970-01-01\'))) Dispatch_date, date(CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',s.delivered,\'1970-01-01\'))) Delivered_Date, case when r.itemSku is not NUll then 1 else 0 end as return_flag, case when return_flag = 1 then suborder_quantity else 0 end::int as return_quantity, case when order_status = \'CANCELLED\' then suborder_quantity else 0 end::int as cancelled_quantity, case when row_number()over(partition by phone order by order_date asc) = 1 then \'New\' else \'Repeat\' end as new_customer_flag, FIRST_VALUE( product_name) OVER ( PARTITION BY phone ORDER BY order_date asc ) AS acquisition_product, case when order_status=\'COMPLETE\' then delivered_date-order_date::date else current_date - order_date::date end as days_in_shipment from order_related o left join shipping_related s on o.shippingPackageCode= s.shippingPackageCode and o.order_id=s.order_id left join returns r on r.saleOrderItemCode = o.saleOrderItemCode and r.order_id = o.order_id; create or replace table ugaoo_db.maplemonk.customerID_test as with new_phone_numbers as ( select contact_num ,9700000000 + row_number() over( order by contact_num asc ) as maple_monk_id from ( select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) as contact_num from ugaoo_db.maplemonk.unicommerce_fact_items_intermediate ) a ), int as ( select contact_num,email,coalesce(maple_monk_id,id2) as maple_monk_id from ( select contact_num, email,maple_monk_id,9800000000+row_number() over(partition by maple_monk_id is NULL order by email asc ) as id2 from ( select distinct coalesce(p.contact_num,right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10)) as contact_num, e.email,maple_monk_id from ( select phone as contact_num,email from ugaoo_db.maplemonk.unicommerce_fact_items_intermediate ) e left join new_phone_numbers p on p.contact_num = right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10) ) a ) b ) select contact_num,email,case when email is not null and email <> \'\' then min(maple_monk_id) over (partition by email ) else maple_monk_id end maple_monk_id from int where coalesce(contact_num,email) is not NULL; create or replace table ugaoo_db.maplemonk.unicommerce_fact_items as select coalesce(c.maple_monk_id,c.maple_monk_id) customer_id, o.*, min(order_date) over(partition by customer_id) as acquisition_date from ugaoo_db.maplemonk.unicommerce_fact_items_intermediate o left join (select distinct contact_num phone,maple_monk_id from ugaoo_db.maplemonk.customerID_test)c on c.phone = right(regexp_replace(o.phone, \'[^a-zA-Z0-9]+\'),10); create or replace table ugaoo_db.maplemonk.unicommerce_fact_items_category_mapping as select fi.* ,usm.category as Product_category ,usm.mrp as MRP ,usm.weight as Weight ,usm.\"Cost Price\" as Cost_Price ,usm.dimensions as Dimensions ,usm.type as Product_Type from ugaoo_db.maplemonk.unicommerce_fact_items fi left join ugaoo_db.maplemonk.unicommerce_sku_mapping usm on fi.sku = usm.\"Sku Code\"; create or replace table ugaoo_db.maplemonk.unicommerce_fact_items as select * from ugaoo_db.maplemonk.unicommerce_fact_items_category_mapping; create or replace table ugaoo_db.maplemonk.asp_in_consolidated as select null as customer_id, \'Amazon\' as Marketplace, \'Amazon\' as Source, ain.\"amazon-order-id\" as order_id, null as phone, null as name, TO_VARIANT(null) as email, cast(ain.\"last-updated-date\" as date) as SHIPPING_LAST_UPDATE_DATE, ain.SKU, ain.ASIN as Product_id, ain.\"product-name\" as Product_name, ain.CURRENCY, ain.\"ship-city\" as city, ain.\"ship-state\" as state, ain.\"order-status\" as order_status, cast(ain.\"purchase-date\" as date) as order_date, sum(cast(case when ain.\"shipping-price\" = \'\' then 0 else ain.\"shipping-price\" end as float)) as Shipping_Price, sum(cast(case when ain.QUANTITY = \'\' then 0 else ain.QUANTITY end as float)) as suborder_quantity, sum(cast(case when ain.\"item-promotion-discount\" = \'\' then 0 else ain.\"item-promotion-discount\" end as float)) as Discount, sum(cast(case when ain.\"item-tax\" = \'\' then 0 else ain.\"item-tax\" end as float)) as Tax, sum(cast(case when ain.\"item-price\" = \'\' then 0 else ain.\"item-price\" end as float)) as Selling_price, null as SHIPPINGPACKAGECODE, null as SHIPPINGPACKAGESTATUS, null as SALEORDERITEMCODE, TO_VARIANT(null) as SALES_ORDER_ITEM_ID, ain.\"fulfillment-channel\" as Courier, null as Shipping_status, null as dispatch_date, null as delivered_date, 0 as return_flag, 0 as return_quantity, 0 as cancelled_quantity, null as new_customer_flag, null as acquisition_product, null as days_in_shipment, null as acqusition_date, usm.category as Product_Category, usm.mrp as MRP, usm.weight as Weight, usm.\"Cost Price\" as Cost_Price, usm.dimensions as Dimensions, usm.type as Product_Type from UGAOO_DB.MAPLEMONK.ASP_IN_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_GENERAL ain left join ugaoo_db.maplemonk.unicommerce_sku_mapping usm on ain.sku = usm.\"Sku Code\" where ain.\"item-status\" <> \'Cancelled\' group by ain.\"amazon-order-id\", cast(ain.\"last-updated-date\" as date), ain.SKU, ain.ASIN, ain.\"product-name\", ain.CURRENCY, ain.\"ship-city\", ain.\"ship-state\", ain.\"order-status\", cast(ain.\"purchase-date\" as date), ain.\"fulfillment-channel\", usm.category, usm.mrp, usm.weight, usm.\"Cost Price\", usm.dimensions, usm.type; create or replace table ugaoo_db.maplemonk.ugaoo_jiomart_in_jiomart_sales_dedup as select *, row_number()over(partition by concat(ifnull(\"Invoice Id\",\'\'),sku,\"Confirmed At\") order by _airbyte_emitted_at desc) as rw from ugaoo_db.maplemonk.ugaoo_jiomart_in_jiomart_sales where rw = 1 or rw is null; create or replace table ugaoo_db.maplemonk.jiomart_in_consolidated as select null as customer_id, \'JIOMART\' as Marketplace, \'JIOMART\' as Source, order_id, null as phone, null as name, TO_VARIANT(null) as email, null as SHIPPING_LAST_UPDATE_DATE, SKU, null as Product_id, Product_name, \'INR\' as CURRENCY, null as city, null as state, null as order_status, order_date, 0 as Shipping_Price, sum(suborder_quantity) as suborder_quantity, 0 as Discount, 0 as tax, sum(Selling_price) as Selling_price, Tracking_code as SHIPPINGPACKAGECODE, null as SHIPPINGPACKAGESTATUS, null as SALEORDERITEMCODE, TO_VARIANT(null) as SALES_ORDER_ITEM_ID, Courier, Shipping_status, null as dispatch_date, null as delivered_date, 0 as return_flag, 0 as return_quantity, 0 as cancelled_quantity, null as new_customer_flag, null as acquisition_product, null as days_in_shipment, null as acqusition_date, usm.category as Product_Category, usm.mrp as MRP, usm.weight as Weight, usm.\"Cost Price\" as Cost_Price, usm.dimensions as Dimensions, usm.type as Product_Type from (select left(\"Confirmed At\", charindex(\' \',\"Confirmed At\")-1)::date as Order_date ,\"Product Title\" as Product_Name ,\"Item Total\" as Selling_price ,\"Invoice Id\" as order_id ,SKU ,QTY as suborder_quantity ,\"Shipment Number\" as Shipment_code ,replace(try_cast(\"Tracking Code\" as varchar),\',\',\'\') as Tracking_code ,\"Shipment Status\" as Shipping_Status ,\"Shipping Charge\" as Shipping_charges ,\"Payment Method Used\" Payment_Mode ,\"Shipping Agent Code\" as Courier from ugaoo_db.maplemonk.ugaoo_jiomart_in_jiomart_sales_dedup)b left join ugaoo_db.maplemonk.unicommerce_sku_mapping usm on b.sku = usm.\"Sku Code\" where shipping_status <> \'canceled\' group by order_id,sku,product_name,order_date,courier,shipping_status,MRP,cost_price,weight ,dimensions,product_type,product_category,SHIPPINGPACKAGECODE; create or replace table ugaoo_db.maplemonk.ugaoo_goqii_in_goqii_sales_dedup as select *, row_number()over(partition by concat(ifnull(\"Order Id\",\'\'),ifnull(\"Product SKU\",\'\')) order by _airbyte_emitted_at desc) as rw from ugaoo_db.maplemonk.ugaoo_goqii_in_goqii_sales where rw = 1 or rw is null; create or replace table ugaoo_db.maplemonk.GOQII_IN_consolidated as select null as customer_id, \'GOQII\' as Marketplace, \'GOQII\' as Source, order_id, phone_number as phone, customer_name as name, TO_VARIANT(null) as email, null as SHIPPING_LAST_UPDATE_DATE, SKU, null as Product_id, Product_name, \'INR\' as CURRENCY, city, state, null as order_status, order_date, 0 as Shipping_Price, sum(suborder_quantity) as suborder_quantity, 0 as Discount, 0 as tax, sum(Selling_price) as Selling_price, Tracking_code as SHIPPINGPACKAGECODE, null as SHIPPINGPACKAGESTATUS, null as SALEORDERITEMCODE, TO_VARIANT(null) as SALES_ORDER_ITEM_ID, Courier, null as Shipping_status, shipping_date as dispatch_date, null as delivered_date, 0 as return_flag, 0 as return_quantity, 0 as cancelled_quantity, null as new_customer_flag, null as acquisition_product, null as days_in_shipment, null as acqusition_date, usm.category as Product_Category, usm.mrp as MRP, usm.weight as Weight, usm.\"Cost Price\" as Cost_Price, usm.dimensions as Dimensions, usm.type as Product_Type from (select city ,state ,pincode ,\"Phone Number\" as Phone_Number ,replace(\"Order Id\",\'\"\',\'\') as Order_id ,\"Product Name\" as Product_name ,\"Billing Name\" as Customer_name ,To_date(\"Order Date\", \'DD-Mon-YY\') as Order_Date ,\"Shipped By\" as Courier ,\"Item Price\" as selling_price ,cast(QTY as float) as suborder_quantity ,\"Product SKU\" as SKU ,replace(\"Pickup Date\",\'-\',null) as Shipping_date ,replace(try_cast(\"Track Number\" as varchar),\',\',\'\') as Tracking_code from ugaoo_db.maplemonk.ugaoo_goqii_in_goqii_sales_dedup)c left join ugaoo_db.maplemonk.unicommerce_sku_mapping usm on c.sku = usm.\"Sku Code\" group by order_id,sku,phone,name,product_name,city,state,order_date,courier,shipping_status,dispatch_date ,SHIPPINGPACKAGECODE,MRP,cost_price,weight,dimensions,product_type,product_category; create or replace table ugaoo_db.maplemonk.ugaoo_pepperfry_in_pepperfry_sales_dedup as select *, row_number()over(partition by \"OrderID-SKU\" order by _airbyte_emitted_at desc) as rw from ugaoo_db.maplemonk.ugaoo_pepperfry_in_pepperfry_sales where rw = 1 or rw is null; create or replace table ugaoo_db.maplemonk.pepperfry_IN_consolidated as select null as customer_id, \'Pepperfry\' as Marketplace, \'Pepperfry\' as Source, order_id, null as phone, customer_name as name, TO_VARIANT(null) as email, coalesce(Delivered_date,Shipping_date) as SHIPPING_LAST_UPDATE_DATE, SKU, null as Product_id, Product_name, \'INR\' as CURRENCY, city, state, order_status, order_date, 0 as Shipping_Price, sum(suborder_quantity) as suborder_quantity, sum(discount) as Discount, sum(Tax) as tax, sum(Selling_price) as Selling_price, null as SHIPPINGPACKAGECODE, null as SHIPPINGPACKAGESTATUS, null as SALEORDERITEMCODE, TO_VARIANT(null) as SALES_ORDER_ITEM_ID, null as Courier, null as Shipping_status, shipping_date as dispatch_date, delivered_date, 0 as return_flag, 0 as return_quantity, 0 as cancelled_quantity, null as new_customer_flag, null as acquisition_product, null as days_in_shipment, null as acqusition_date, usm.category as Product_Category, usm.mrp as MRP, usm.weight as Weight, usm.\"Cost Price\" as Cost_Price, usm.dimensions as Dimensions, usm.type as Product_Type from (select \"Customer Name\" customer_name ,left (\"Customer City/State/Pin code\" , charindex(\',\',\"Customer City/State/Pin code\")-1) as city ,RTRIM(left(substr(\"Customer City/State/Pin code\" ,charindex(\',\',\"Customer City/State/Pin code\")+1) ,charindex(\',\',substr(\"Customer City/State/Pin code\" ,charindex(\',\',\"Customer City/State/Pin code\")+1))),\',\') as state ,right(\"Customer City/State/Pin code\" ,6) as Pincode ,left(\"OrderID-SKU\",charindex(\'-\',\"OrderID-SKU\")-1) as order_ID ,RTRIM(\"Merchant SKU ID\",\'_New\') as SKU ,try_to_date(\"Invoice Date\",\'dd-mm-YYYY\') Invoice_Date ,try_to_date(\"Delivered Date\",\'dd-mm-YYYY\') Delivered_date ,try_to_date(\"Order Date\",\'dd-mm-YYYY\') Order_Date ,try_to_date(\"Shipped Date\",\'dd-mm-YYYY\') Shipping_date ,\"Order Status\" as Order_status ,\"Invoice Number\" Invoice_ID ,\"Product Name\" Product_Name ,\"Qty Ordered\" as suborder_quantity ,\"Qty Refunded\" as return_quantity ,replace(\"Total Sell Price\",\',\',\'\')::float as selling_price ,TDS as tax ,\"Merchant Discount\" as discount from ugaoo_db.maplemonk.ugaoo_pepperfry_in_pepperfry_sales_dedup)a left join ugaoo_db.maplemonk.unicommerce_sku_mapping usm on a.sku = usm.\"Sku Code\" where lower(order_status) <> \'cancelled\' group by order_id, shipping_last_update_date , SKU,product_name,name, city , state, order_status , order_date,dispatch_date,delivered_date, usm.category, usm.mrp, usm.weight, usm.\"Cost Price\", usm.dimensions, usm.type; insert into ugaoo_db.maplemonk.unicommerce_fact_items select * from ugaoo_db.maplemonk.asp_in_consolidated; insert into ugaoo_db.maplemonk.unicommerce_fact_items select * from ugaoo_db.maplemonk.jiomart_in_consolidated; insert into ugaoo_db.maplemonk.unicommerce_fact_items select * from ugaoo_db.maplemonk.goqii_in_consolidated; insert into ugaoo_db.maplemonk.unicommerce_fact_items select * from ugaoo_db.maplemonk.pepperfry_in_consolidated;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from UGAOO_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        