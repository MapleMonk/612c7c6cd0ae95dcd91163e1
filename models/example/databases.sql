{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE eggozdb.maplemonk.UB_Return_Replacement_Pnl AS Select ss.* , sum(ss.Branded_Eggs_Sold) over (partition by ss.delivery_date) as Total_Branded_Eggs_Sold from (Select yy.* , xx.Sum_Return_Replacement_Percent, xx.area, xx.Eggs_Sold as Branded_Eggs_Sold, ( xx.Sum_Return_Replacement_Percent* (yy.Sales_White_Replaced + yy.Sales_Brown_Replaced )) + ( (xx.Sum_Return_Replacement_Percent *((yy.Landing_SP_White_Melted)*yy.Melted_Replacement_White)) + (xx.Sum_Return_Replacement_Percent * ((yy.Melted_Replacement_Brown)* (yy.Landing_SP_Brown_Melted))) ) as Replaced_Total_Sales ,((xx.Sum_Return_Replacement_Percent)*((yy.Procured_Price_White_Melted* yy.Melted_Replacement_White) + (yy.Procured_Price_Brown_Melted * yy.Melted_Replacement_Brown) + (yy.Eggs_Sold_Brown_Replaced* yy.Procured_Price_Brown_Replaced) + (yy.Eggs_Sold_White_Replaced)*(yy.Procured_Price_White_Replaced))) as Replaced_Cost_of_Goods_Sold , (xx.Sum_Return_Replacement_Percent*yy.Total_Packaging_Cost) as Replaced_Total_Packaging_Cost, (xx.Sum_Return_Replacement_Percent*yy.Unbranded_Labour_Cost) as Replaced_Unbranded_Labour_Cost, (xx.Sum_Return_Replacement_Percent* yy.First_Mile_Cost) as Replaced_First_Mile_Cost, (xx.Sum_Return_Replacement_Percent * yy.Last_Mile_Cost) as Replaced_Last_Mile_Cost, (xx.Sum_Return_Replacement_Percent * yy.Last_Mile_Unloading_Cost) as Replaced_Last_Mile_Unloading_Cost , zz.Sales_White, zz.Eggs_Sold_White,zz.Landing_SP_White,zz.Procured_Price_White,zz.Loss_Or_Profit_White,zz.Total_UB_Cost_White,mm.Sales_Brown, mm.Eggs_Sold_Brown,mm.Landing_SP_Brown,mm.Procured_Price_Brown,mm.Loss_Or_Profit_Brown,mm.Total_UB_Cost_Brown, ((yy.Procurred_Price_White_Chatki)* (yy.Eggs_Sold_White_Chatki) + (yy.Procured_Price_Brown_Chatki)* (yy.Eggs_Sold_Brown_Chatki) + (yy.Procured_Price_White_Hairline)* (yy.Eggs_Sold_White_Hairline) + (yy.Procured_Price_Brown_Hairline)*(yy.Eggs_Sold_Brown_Hairline)+ (yy.Procured_Price_White_Darjan)*(yy.Eggs_Sold_White_Darjan) + (yy.Procured_Price_White_Normal)*(yy.Eggs_Sold_White_Normal) + (yy.Procured_Price_Brown_Normal)*(yy.Eggs_Sold_Brown_Normal)) as Fresh_COGS, (xx.Sum_Return_Replacement_Percent* (yy.Melted_Replacement_White + yy.Melted_Replacement_Brown + yy.Eggs_Sold_Brown_Replaced + yy.Eggs_Sold_White_Replaced)) as Replaced_Eggs_Sold, ( xx.Sum_Return_Replacement_Percent* yy.First_Mile_Eggs) as Replaced_First_Mile_Eggs from ( SELECT date, area, Eggs_Sold, Net_Sales, Return_Per, Return_Replacement, SUM(Return_Replacement) OVER (PARTITION BY date) AS Sum_Return_Replacement, case when SUM(Return_Replacement) OVER (PARTITION BY date) = 0 then 0 else Return_Replacement/SUM(Return_Replacement) OVER (PARTITION BY date) end as Sum_Return_Replacement_Percent FROM ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area AS area, sum(eggs_sold) as Eggs_Sold, SUM(net_sales) - SUM(amount_return) AS Net_Sales, CASE WHEN SUM(eggs_sold) = 0 THEN 0 ELSE SUM(eggs_replaced) / SUM(eggs_sold) END AS Replacement_Per, sum(eggs_replaced)+sum(eggs_return) as Return_Replacement, CASE WHEN SUM(eggs_sold) = 0 THEN 0 ELSE SUM(eggs_return) / SUM(eggs_sold) END AS Return_Per FROM maplemonk.summary_reporting_table_beat_retailer WHERE area IN ( \'Delhi-GT\', \'Gurgaon-GT\', \'Noida-GT\', \'NCR-OF-MT\', \'NCR-ON-MT\' ) GROUP BY DATE_TRUNC(\'DAY\', date), area ) subquery )xx left join ( Select distinct(aa.delivery_date), aa.Total_Sales, aa.Total_Eggs_Sold, aa.Landing_SP, aa.Procured_Price, (aa.procured_price* aa.Total_Eggs_Sold) as Cost_of_Goods_Sold, aa.Loss_Or_Profit_per_Egg, aa.Loss_Or_Profit, ifnull(bb.Sales_White_Chatki, 0) as Sales_White_Chatki, ifnull(bb.Eggs_Sold_White_Chatki, 0) as Eggs_Sold_White_Chatki, ifnull(Landing_SP_White_Chatki, 0) as Landing_SP_White_Chatki, ifnull(bb.Procured_Price_White_Chatki, 0) as Procurred_Price_White_Chatki, ifnull(bb.Loss_Or_Profit_per_Egg_White_Chatki, 0) as Loss_Or_Profit_per_Egg_White_Chatki, ifnull(bb.Loss_Or_Profit_White_Chatki, 0) as Loss_Or_Profit_White_Chatki, ifnull(cc.Sales_Brown_Chatki, 0) as Sales_Brown_Chatki, ifnull(cc.Eggs_Sold_Brown_Chatki, 0) as Eggs_Sold_Brown_Chatki, ifnull(cc.Landing_SP_Brown_Chatki, 0) as Landing_SP_Brown_Chatki, ifnull(cc.Procured_Price_Brown_Chatki, 0) as Procured_Price_Brown_Chatki, ifnull(cc.Loss_Or_Profit_per_Egg_Brown_Chatki, 0) as Loss_Or_Profit_per_Egg_Brown_Chatki, ifnull(cc.Loss_Or_Profit_Brown_Chatki, 0) as Loss_Or_Profit_Brown_Chatki, ifnull(dd.Sales_Brown_Hairline, 0) as Sales_Brown_Hairline, ifnull(dd.Eggs_Sold_Brown_Hairline, 0) as Eggs_Sold_Brown_Hairline, ifnull(dd.Landing_SP_Brown_Hairline, 0) as Landing_SP_Brown_Hairline, ifnull(dd.Procured_Price_Brown_Hairline, 0) as Procured_Price_Brown_Hairline, ifnull(dd.Loss_Or_Profit_per_Egg_Brown_Hairline, 0) as Loss_Or_Profit_per_Egg_Brown_Hairline, ifnull(dd.Loss_Or_Profit_Brown_Hairline, 0) as Loss_Or_Profit_Brown_Hairline, ifnull(ee.Sales_White_Hairline, 0) as Sales_White_Hairline, ifnull(ee.Eggs_Sold_White_Hairline, 0) as Eggs_Sold_White_Hairline, ifnull(ee.Landing_SP_White_Hairline, 0) as Landing_SP_White_Hairline, ifnull(ee.Procured_Price_White_Hairline, 0) as Procured_Price_White_Hairline, ifnull(ee.Loss_Or_Profit_per_Egg_White_Hairline, 0) as Loss_Or_Profit_per_Egg_White_Hairline, ifnull(ee.Loss_Or_Profit_White_Hairline, 0) as Loss_Or_Profit_White_Hairline, ifnull(ff.Sales_Brown_Melted, 0) as Sales_Brown_Melted, ifnull(ff.Eggs_Sold_Brown_Melted, 0) as Eggs_Sold_Brown_Melted, ifnull(ff.Landing_SP_Brown_Melted, 0) as Landing_SP_Brown_Melted, ifnull(ff.Procured_Price_Brown_Melted, 0) as Procured_Price_Brown_Melted, ifnull(ff.Loss_Or_Profit_per_Egg_Brown_Melted, 0) as Loss_Or_Profit_per_Egg_Brown_Melted, ifnull(ff.Loss_Or_Profit_Brown_Melted, 0) as Loss_Or_Profit_Brown_Melted, ifnull(gg.Sales_White_Melted, 0) as Sales_White_Melted, ifnull(gg.Eggs_Sold_White_Melted, 0)as Eggs_Sold_White_Melted, ifnull(gg.Landing_SP_White_Melted, 0) as Landing_SP_White_Melted, ifnull(gg.Procured_Price_White_Melted, 0) as Procured_Price_White_Melted, ifnull(gg.Loss_Or_Profit_per_Egg_White_Melted, 0) as Loss_Or_Profit_per_Egg_White_Melted, ifnull(gg.Loss_Or_Profit_White_Melted, 0) as Loss_Or_Profit_White_Melted, ifnull(hh.Sales_White_Normal, 0) as Sales_White_Normal, ifnull(hh.Eggs_Sold_White_Normal, 0) as Eggs_Sold_White_Normal, ifnull(hh.Landing_SP_White_Normal, 0) as Landing_SP_White_Normal, ifnull(hh.Procured_Price_White_Normal, 0) as Procured_Price_White_Normal, ifnull(hh.Loss_Or_Profit_per_Egg_White_Normal, 0) as Loss_Or_Profit_per_Egg_White_Normal, ifnull(hh.Loss_Or_Profit_White_Normal, 0) as Loss_Or_Profit_White_Normal, ifnull(ii.Sales_Brown_Normal, 0) as Sales_Brown_Normal, ifnull(ii.Eggs_Sold_Brown_Normal, 0) as Eggs_Sold_Brown_Normal, ifnull(ii.Landing_SP_Brown_Normal, 0) as Landing_SP_Brown_Normal, ifnull(ii.Procured_Price_Brown_Normal, 0) as Procured_Price_Brown_Normal, ifnull(ii.Loss_Or_Profit_per_Egg_Brown_Normal, 0) as Loss_Or_Profit_per_Egg_Brown_Normal, ifnull(ii.Loss_Or_Profit_Brown_Normal, 0) as Loss_Or_Profit_Brown_Normal, ifnull(jj.Sales_Brown_Replaced, 0) as Sales_Brown_Replaced, ifnull(jj.Eggs_Sold_Brown_Replaced, 0) as Eggs_Sold_Brown_Replaced, ifnull(jj.Landing_SP_Brown_Replaced, 0) as Landing_SP_Brown_Replaced, ifnull(jj.Procured_Price_Brown_Replaced, 0) as Procured_Price_Brown_Replaced, ifnull(jj.Loss_Or_Profit_per_Egg_Brown_Replaced, 0) as Loss_Or_Profit_per_Egg_Brown_Replaced, ifnull(jj.Loss_Or_Profit_Brown_Replaced, 0) as Loss_Or_Profit_Brown_Replaced, ifnull(kk.Sales_White_Replaced, 0) as Sales_White_Replaced, ifnull(kk.Eggs_Sold_White_Replaced, 0) as Eggs_Sold_White_Replaced, ifnull(kk.Landing_SP_White_Replaced, 0) as Landing_SP_White_Replaced, ifnull(kk.Procured_Price_White_Replaced, 0) as Procured_Price_White_Replaced, ifnull(kk.Loss_Or_Profit_per_Egg_White_Replaced, 0) as Loss_Or_Profit_per_Egg_White_Replaced, ifnull(kk.Loss_Or_Profit_White_Replaced, 0) as Loss_Or_Profit_White_Replaced, ifnull(ab.Sales_White_Darjan, 0) as Sales_White_Darjan, ifnull(ab.Eggs_Sold_White_Darjan, 0) as Eggs_Sold_White_Darjan, ifnull(ab.Landing_SP_White_Darjan, 0) as Landing_SP_White_Darjan, ifnull(ab.Procured_Price_White_Darjan, 0) as Procured_Price_White_Darjan, ifnull(ab.Loss_Or_Profit_per_Egg_White_Darjan, 0) as Loss_Or_Profit_per_Egg_White_Darjan, ifnull(ab.Loss_Or_Profit_White_Darjan, 0) as Loss_Or_Profit_White_Darjan , ifnull(ac.Procured_Price_Chatki_White_IMS,0) as Procured_Price_Chatki_White_IMS , ifnull(ac.Chatki_White_IMS,0) as Chatki_White_IMS, ifnull(ad.Procured_Price_Chatki_Brown_IMS,0) as Procured_Price_Chatki_Brown_IMS , ifnull(ad.Chatki_Brown_IMS,0) as Chatki_Brown_IMS, ifnull(ae.Procured_Price_Chatki_Nutra_IMS,0) as Procured_Price_Chatki_Nutra_IMS , ifnull(ae.Chatki_Nutra_IMS,0) as Chatki_Nutra_IMS, case when (ifnull(gg.Eggs_Sold_White_Melted, 0) -ifnull(ac.Chatki_White_IMS,0) + ifnull(bb.Eggs_Sold_White_Chatki, 0)) > 0 then (ifnull(gg.Eggs_Sold_White_Melted, 0) -ifnull(ac.Chatki_White_IMS,0) + ifnull(bb.Eggs_Sold_White_Chatki, 0)) else 0 end as Melted_Replacement_White, case when (ifnull(ff.Eggs_Sold_Brown_Melted, 0) -ifnull(ad.Chatki_Brown_IMS,0) + ifnull(cc.Eggs_Sold_Brown_Chatki, 0)) >0 then (ifnull(ff.Eggs_Sold_Brown_Melted, 0) -ifnull(ad.Chatki_Brown_IMS,0) + ifnull(cc.Eggs_Sold_Brown_Chatki, 0)) else 0 end as Melted_Replacement_Brown, ifnull(af.Procured_price_IMS,0) as Procured_price_IMS , ifnull(af.PPP_Loss_IMS,0) as PPP_Loss_IMS, ifnull(ag.packaging_cost_per_egg,0) as Packaging_Cost_Per_Egg, ifnull(ag.packaging_cost_per_egg,0)* (aa.Total_Eggs_Sold) as Total_Packaging_Cost, ifnull(ag.packaging_cost_per_egg,0) * (aa.Total_Eggs_Sold- ifnull(kk.Eggs_Sold_White_Replaced, 0) -ifnull(jj.Eggs_Sold_Brown_Replaced, 0)) as Fresh_Packaging_Cost, ifnull(ag.packaging_cost_per_egg,0)* (ifnull(kk.Eggs_Sold_White_Replaced, 0) + ifnull(jj.Eggs_Sold_Brown_Replaced, 0)+ (case when (ifnull(gg.Eggs_Sold_White_Melted, 0) -ifnull(ac.Chatki_White_IMS,0) + ifnull(bb.Eggs_Sold_White_Chatki, 0)) > 0 then (ifnull(gg.Eggs_Sold_White_Melted, 0) -ifnull(ac.Chatki_White_IMS,0) + ifnull(bb.Eggs_Sold_White_Chatki, 0)) else 0 end) + (case when (ifnull(ff.Eggs_Sold_Brown_Melted, 0) -ifnull(ad.Chatki_Brown_IMS,0) + ifnull(cc.Eggs_Sold_Brown_Chatki, 0)) >0 then (ifnull(ff.Eggs_Sold_Brown_Melted, 0) -ifnull(ad.Chatki_Brown_IMS,0) + ifnull(cc.Eggs_Sold_Brown_Chatki, 0)) else 0 end)) as Return_Replacement_Packaging_Cost, ifnull(ah.Last_Mile_Cost,0) as Last_Mile_Cost, ifnull(ah.Last_Mile_Unloading_Cost,0) as Last_Mile_Unloading_Cost, ifnull(ai.First_Mile_Eggs,0) as First_Mile_Eggs, ifnull(ai.First_Mile_Cost,0) as First_Mile_Cost, ifnull(oi.Branded_Labour_Cost,0) as Branded_Labour_Cost , ifnull(oi.Unbranded_Labour_Cost,0) as Unbranded_Labour_Cost from ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Total_Sales, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Total_Eggs_Sold, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit FROM maplemonk.ub_log where region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) )aa left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Chatki, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Chatki, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_White_Chatki, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_White_Chatki, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_White_Chatki, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Chatki FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Chatki\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) bb on aa.delivery_date = bb.delivery_date and aa.region = bb.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_Brown_Chatki, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_Brown_Chatki, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_Brown_Chatki, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_Brown_Chatki, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_Brown_Chatki, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_Brown_Chatki FROM maplemonk.ub_log WHERE category = \'Brown\' AND egg_type = \'Chatki\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) cc on aa.delivery_date = cc.delivery_date and aa.region = cc.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_Brown_Hairline, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_Brown_Hairline, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_Brown_Hairline, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_Brown_Hairline, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_Brown_Hairline, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_Brown_Hairline FROM maplemonk.ub_log WHERE category = \'Brown\' AND egg_type = \'Hairline\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) dd on aa.delivery_date = dd.delivery_date and aa.region = dd.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Hairline, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Hairline, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_White_Hairline, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_White_Hairline, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_White_Hairline, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Hairline FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Hairline\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) ee on aa.delivery_date = ee.delivery_date and aa.region = ee.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_Brown_Melted, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_Brown_Melted, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_Brown_Melted, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_Brown_Melted, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_Brown_Melted, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_Brown_Melted FROM maplemonk.ub_log WHERE category = \'Brown\' AND egg_type = \'Melted\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) ff on aa.delivery_date = ff.delivery_date and aa.region = ff.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Melted, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Melted, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_White_Melted, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_White_Melted, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_White_Melted, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Melted FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Melted\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) gg on aa.delivery_date = gg.delivery_date and aa.region = gg.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Normal, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Normal, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_White_Normal, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_White_Normal, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_White_Normal, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Normal FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Normal\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) hh on aa.delivery_date = hh.delivery_date and aa.region = hh.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_Brown_Normal, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_Brown_Normal, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_Brown_Normal, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_Brown_Normal, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_Brown_Normal, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_Brown_Normal FROM maplemonk.ub_log WHERE category = \'Brown\' AND egg_type = \'Normal\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) ii on aa.delivery_date = ii.delivery_date and aa.region = ii.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_Brown_Replaced, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_Brown_Replaced, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_Brown_Replaced, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_Brown_Replaced, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_Brown_Replaced, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_Brown_Replaced FROM maplemonk.ub_log WHERE category = \'Brown\' AND egg_type = \'Replaced\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) jj on aa.delivery_date = jj.delivery_date and aa.region = jj.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Replaced, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Replaced, ifnull(round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2), 0) AS Landing_SP_White_Replaced, ifnull(sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise), 0) AS Procured_Price_White_Replaced, ifnull(round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2), 0) AS Loss_Or_Profit_per_Egg_White_Replaced, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Replaced FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Replaced\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) kk on aa.delivery_date = kk.delivery_date and aa.region = kk.region left join ( SELECT region AS region, DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, ifnull(round(SUM(sales_daily_typewise), 0), 0) AS Sales_White_Darjan, ifnull(round(SUM(eggs_sold_daily_typewise), 0), 0) AS Eggs_Sold_White_Darjan, ifnull( case when sum(eggs_sold_daily_typewise) = 0 then 0 else round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2) end , 0) AS Landing_SP_White_Darjan, ifnull( case when sum(eggs_sold_daily_typewise) = 0 then 0 else sum(procured_price_daily*eggs_sold_daily_typewise) / sum(eggs_sold_daily_typewise) end , 0) AS Procured_Price_White_Darjan, ifnull( case when sum(eggs_sold_daily_typewise) = 0 then 0 else round((sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily)) / sum(eggs_sold_daily_typewise), 2) end , 0) AS Loss_Or_Profit_per_Egg_White_Darjan, ifnull(round(sum(sales_daily_typewise) - sum(eggs_sold_daily_typewise*procured_price_daily), 0), 0) AS Loss_Or_Profit_White_Darjan FROM maplemonk.ub_log WHERE category = \'White\' AND egg_type = \'Darjan\' and region = \'NCR\' GROUP BY region, DATE_TRUNC(\'DAY\', delivery_date) ) ab on aa.delivery_date = ab.delivery_date and aa.region = ab.region left join ( SELECT DATE_TRUNC(\'DAY\', processing_date) AS processing_date, zone_name AS zone_name, avg(procured_price) as Procured_Price_Chatki_White_IMS, sum(procurement_egg_chatki)+sum(processing_egg_chatki)+sum(packaging_egg_chatki) AS Chatki_White_IMS FROM maplemonk.batch_procurement_processing_packaging WHERE zone_name IN (\'NCR\') AND ((processing_no_of_eggs>0)) and egg_type = \'White\' GROUP BY DATE_TRUNC(\'DAY\', processing_date), zone_name, egg_type )ac on aa.delivery_date = ac.processing_date and aa.region = ac.zone_name left join ( SELECT DATE_TRUNC(\'DAY\', processing_date) AS processing_date, zone_name AS zone_name, avg(procured_price) as Procured_Price_Chatki_Brown_IMS, sum(procurement_egg_chatki)+sum(processing_egg_chatki)+sum(packaging_egg_chatki) AS Chatki_Brown_IMS FROM maplemonk.batch_procurement_processing_packaging WHERE zone_name IN (\'NCR\') AND ((processing_no_of_eggs>0)) and egg_type = \'Brown\' GROUP BY DATE_TRUNC(\'DAY\', processing_date), zone_name, egg_type )ad on aa.delivery_date = ad.processing_date and aa.region = ad.zone_name left join ( SELECT DATE_TRUNC(\'DAY\', processing_date) AS processing_date, avg(procured_price) as Procured_Price_Chatki_Nutra_IMS, zone_name AS zone_name, sum(procurement_egg_chatki)+sum(processing_egg_chatki)+sum(packaging_egg_chatki) AS Chatki_Nutra_IMS FROM maplemonk.batch_procurement_processing_packaging WHERE zone_name IN (\'NCR\') AND ((processing_no_of_eggs>0)) and egg_type = \'Nutra\' GROUP BY DATE_TRUNC(\'DAY\', processing_date), zone_name, egg_type )ae on aa.delivery_date = ae.processing_date and aa.region = ae.zone_name left join ( SELECT DATE_TRUNC(\'DAY\', processing_date) AS processing_date, zone_name as Zone_name, AVG(procured_price) AS Procured_Price_IMS, SUM(total_processing_loss)+SUM(total_procurement_loss)+SUM(total_packaging_loss) AS PPP_Loss_IMS FROM maplemonk.batch_procurement_processing_packaging WHERE zone_name IN (\'NCR\') AND ((processing_no_of_eggs>0)) GROUP BY DATE_TRUNC(\'DAY\', processing_date), zone_name )af on aa.delivery_date = af.processing_date and aa.region = af.zone_name left join ( select DISTINCT tt.area_classification, tt.sku, tt.packaging_cost_per_egg from ( select area, CASE when area in ( \'NCR-ON-MT\', \'NCR-Others\' ) then \'NCR\' when area in ( \'Bangalore-ON-MT\', \'Bangalore-Others\' ) then \'Bangalore\' when area in ( \'East-ON-MT\', \'East-Others\' ) then \'East\' else \'NA\' end as area_classification, sku, packaging_cost_per_egg from eggozdb.maplemonk.pkg_cost_Packaging_cost where sku = \'30WD\' and area = \'NCR-Others\' ) tt )ag on aa.region = ag.area_classification left join ( Select distinct to_date(mm.Date, \'dd/mm/yyyy\' ) as Date, sum(mm.Cost) over (partition by mm.Date order by mm.Date) as Last_Mile_Cost, sum(mm.Unloading_Cost) over (partition by mm.Date order by mm.Date) as Last_Mile_Unloading_Cost, mm.Beat from ( select Date, \"Cost/Egg_Out\" as Cost_Per_Egg, \"Delivery Area\", Cost, Total_Eggs_Out, \"GT/MT\", Unloading_Cost, beat from maplemonk.transport_costs_last_mid_mile where beat = \'Unbranded\' ) mm )ah on aa.delivery_date = ah.Date left join ( select distinct to_date(Date, \'dd/mm/yyyy\') as Date15, sum(\"Picked_up_Qty(In_Eggs)\") over (partition by date order by Date) as First_Mile_Eggs, sum(Total_Expense) over (partition by date order by Date) as First_Mile_Cost from maplemonk.transport_costs_FM_Vehicle_Details_after_1st_April order by to_date(Date, \'dd/mm/yyyy\' ) )ai on aa.delivery_date = ai.Date15 left join ( select to_date(Date, \'dd/mm/yyyy\') as Date, Branded_Labour_Cost, Unbranded_Labour_Cost, OT_Cost from eggozdb.maplemonk.BI_fixed_Labour_cost )oi on aa.delivery_date = oi.Date ) yy on xx.date = yy.delivery_date left join ( SELECT DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, sum(sales_daily_typewise) AS Sales_White, round(SUM(eggs_sold_daily_typewise), 0) AS Eggs_Sold_White, round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2) AS Landing_SP_White, round(AVG(procured_price_daily), 2) AS Procured_Price_White, round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise) - AVG(procured_price_daily), 2) AS Loss_Or_Profit_White, round(AVG(procured_price_daily), 2) * round(SUM(eggs_sold_daily_typewise), 0) AS Total_UB_Cost_White FROM maplemonk.ub_log WHERE region = \'NCR\' AND category = \'White\' GROUP BY DATE_TRUNC(\'DAY\', delivery_date) )zz on xx.date = zz.delivery_date left join ( SELECT DATE_TRUNC(\'DAY\', delivery_date) AS delivery_date, sum(sales_daily_typewise) AS Sales_Brown, round(SUM(eggs_sold_daily_typewise), 0) AS Eggs_Sold_Brown, round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise), 2) AS Landing_SP_Brown, round(AVG(procured_price_daily), 2) AS Procured_Price_Brown, round(sum(sales_daily_typewise) / sum(eggs_sold_daily_typewise) - AVG(procured_price_daily), 2) AS Loss_Or_Profit_Brown, round(AVG(procured_price_daily), 2) * round(SUM(eggs_sold_daily_typewise), 0) AS Total_UB_Cost_Brown FROM maplemonk.ub_log WHERE region = \'NCR\' AND category = \'Brown\' GROUP BY DATE_TRUNC(\'DAY\', delivery_date) )mm on xx.date = mm.delivery_date )ss ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        