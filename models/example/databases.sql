{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table eggozdb.maplemonk.darjan_sales_return_replace_promo_primary_and_secondary as select al.*, rr2.code as distributor from ( select COALESCE(tt.retailer_name, rt.retailer_name)as retailer_name, COALESCE(tt.date,rt.pickup_date) as date, tt.parent_retailer_name, COALESCE(tt.area_classification, rt.area_classification) as area_classification, COALESCE(tt.SKU_Count,rt.sku_count)as SKU_Count,tt.brand_type,tt.order_price_amount,ifnull(rt.sku_return_amount,0)Sku_return_amount,COALESCE(tt.date,rt.pickup_date)as pick, concat(coalesce(tt.sku_count,rt.sku_count),coalesce(tt.short_name,rt.short_name)) as SKU, ifnull(rt.return_eggs,0) return_eggs, ifnull(rt.replaced_eggs,0)replaced_eggs, ifnull(rt.promo_eggs,0) promo_eggs, ifnull(tt.single_sku_rate,0)single_sku_rate, ifnull(tt.eggs,0)eggs,ifnull(tt.sales,0)sales, coalesce(tt.retailer_category, rt.retailer_category) retailer_category, coalesce(tt.sale_type, rt.sale_type) sale_type, coalesce(tt.retailer_id, rt.retailer_id) retailer_id, coalesce(tt.distributor_id, rt.distributor_id) distributor_id from ( select rr.code as retailer_name, rrp.name as parent_retailer_name, rr.area_classification, rr.beat_number, cast(timestampadd(minute, 660, oo.delivery_date) as date) as date, oo.order_price_amount, ol.quantity, pp.SKU_Count, ol.single_sku_rate, ol.single_sku_mrp, ol.quantity * pp.SKU_Count as eggs, ol.quantity * ol.single_sku_rate as sales, ol.quantity * ol.single_sku_mrp as sales_mrp, pp.slug, pp.brand_type, pp.short_name, rr.id retailer_id, rr.distributor_id, \'Primary_Sale\' sale_type, rcc.name as retailer_category from eggozdb.maplemonk.my_sql_order_order oo left join eggozdb.maplemonk.my_sql_order_orderline ol on ol.order_id = oo.id left join eggozdb.maplemonk.my_sql_product_product pp on pp.id = ol.product_id left join eggozdb.maplemonk.my_sql_retailer_retailer rr on rr.id = oo.retailer_id left join eggozdb.maplemonk.my_sql_retailer_retailerparent rrp on rrp.id = rr.parent_id left join eggozdb.maplemonk.my_sql_retailer_customer_category rcc on rcc.id = rr.category_id where (lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\') and lower(oo.status) in (\'completed\',\'delivered\') and ol.quantity > 0 group by oo.name, rr.code, cast(timestampadd(minute, 660, oo.delivery_date) as date), pp.slug, rr.area_classification, rr.beat_number, rrp.name, ol.quantity, pp.sku_count, ol.single_sku_rate, ol.single_sku_mrp, oo.order_price_amount, pp.brand_type, pp.short_name, rr.id, rcc.name, rr.distributor_id union all select rr.code as retailer_name, rrp.name as parent_retailer_name, rr.area_classification, rr.beat_number, cast(timestampadd(minute, 660, oo.delivery_date) as date) as date, oo.order_price_amount, ol.quantity, pp.SKU_Count, ol.single_sku_rate, ol.single_sku_mrp, ol.quantity * pp.SKU_Count eggs, ol.quantity * ol.single_sku_rate as sales, ol.quantity * ol.single_sku_mrp as sales_mrp, pp.slug, pp.brand_type, pp.short_name, rr.id retailer_id, rr.distributor_id, \'Secondary_Sale\' sale_type, rcc.name as retailer_category from eggozdb.maplemonk.my_sql_distributor_sales_secondaryorder oo left join eggozdb.maplemonk.my_sql_distributor_sales_secondaryorderline ol on ol.order_id = oo.id left join eggozdb.maplemonk.my_sql_product_product pp on pp.id = ol.product_id left join eggozdb.maplemonk.my_sql_retailer_retailer rr on rr.id = oo.retailer_id left join eggozdb.maplemonk.my_sql_retailer_retailerparent rrp on rrp.id = rr.parent_id left join eggozdb.maplemonk.my_sql_retailer_customer_category rcc on rcc.id = rr.category_id where (lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\') and lower(oo.status) in (\'created\') and ol.quantity > 0 group by rr.code, cast(timestampadd(minute, 660, oo.delivery_date) as date), pp.slug, rr.area_classification, rr.beat_number, rrp.name, ol.quantity, pp.sku_count, ol.single_sku_rate, ol.single_sku_mrp, oo.order_price_amount, pp.brand_type, pp.short_name, rr.id, rcc.name, rr.distributor_id ) tt full outer join ( select rr2.code as distributor, ret_rep.* from ( select rr.code as retailer_name,rr.area_classification, rr.beat_number, cast(timestampadd(minute,660,dsr.return_date) as date) pickup_date, pp.slug,pp.brand_type,concat(pp.sku_count,pp.short_name) as SKU, pp.sku_count, pp.short_name, rr.id retailer_id, rr.distributor_id, sum(dsrl.quantity*dsrl.single_sku_rate-dsrl.quantity*dsrl.single_sku_discount) as sku_return_amount, \'Secondary_sale\' sale_type, rcc.name as retailer_category, sum(case when lower(dsr.type) = \'return\' then dsrl.quantity*pp.sku_count else 0 end) as return_eggs, sum(case when lower(dsr.type) = \'replacement\' then dsrl.quantity*pp.sku_count else 0 end) as replaced_eggs, sum(case when lower(dsr.type) = \'promo\' then dsrl.quantity*pp.sku_count else 0 end) as promo_eggs from eggozdb.maplemonk.my_sql_distributor_sales_secondaryorderreturn dsr left join eggozdb.maplemonk.my_sql_distributor_sales_secondaryorderreturnreplaceline dsrl on dsr.id=dsrl.return_order_id left join eggozdb.maplemonk.my_sql_retailer_retailer rr on dsr.retailer_id=rr.id left join eggozdb.maplemonk.my_sql_product_product pp on dsrl.product_id=pp.id left join eggozdb.maplemonk.my_sql_retailer_customer_category rcc on rcc.id = rr.category_id where lower(dsr.status) = \'created\' and (lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\') group by dsrl.product_id, dsr.retailer_id, rr.code, cast(timestampadd(minute,660,dsr.return_date) as date), concat(pp.sku_count,pp.short_name), pp.slug, pp.short_name, rr.id, dsrl.single_sku_rate, dsrl.single_sku_discount, rr.area_classification, pp.brand_type, rr.id, rr.distributor_id, rr.beat_number, pp.sku_count, rcc.name ) ret_rep left join eggozdb.maplemonk.my_sql_retailer_retailer rr2 on rr2.id = ret_rep.distributor_id union all select rr2.code as distributor, ret_rep.* from ( select rr.code as retailer_name,rr.area_classification, rr.beat_number, cast(timestampadd(minute,660,dsrl.pickup_date) as date) pickup_date, pp.slug,pp.brand_type, concat(pp.sku_count,pp.short_name) as SKU, pp.sku_count, pp.short_name, rr.id retailer_id, rr.distributor_id, sum(dsrl.amount) as sku_return_amount, \'Primary_sale\' sale_type, rcc.name as retailer_category, sum(case when lower(dsrl.line_type) = \'return\' then dsrl.quantity*pp.sku_count else 0 end) as return_eggs, sum(case when lower(dsrl.line_type) = \'replacement\' then dsrl.quantity*pp.sku_count else 0 end) as replaced_eggs, sum(case when lower(dsrl.line_type) = \'promo\' then dsrl.quantity*pp.sku_count else 0 end) as promo_eggs from eggozdb.maplemonk.my_sql_order_orderreturnline dsrl left join eggozdb.maplemonk.my_sql_retailer_retailer rr on dsrl.retailer_id=rr.id left join eggozdb.maplemonk.my_sql_retailer_retailerparent rrp on rrp.id = rr.parent_id left join eggozdb.maplemonk.my_sql_product_product pp on dsrl.product_id=pp.id left join eggozdb.maplemonk.my_sql_retailer_customer_category rcc on rcc.id = rr.category_id where lower(dsrl.line_type) <> \'cancelled\' and (lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\') group by dsrl.product_id, rr.code, cast(timestampadd(minute,660,dsrl.pickup_date) as date), pp.short_name, dsrl.line_type, pp.sku_count, rr.area_classification, pp.brand_type, rr.id, rr.distributor_id, rr.beat_number, pp.sku_count, pp.slug, rcc.name ) ret_rep left join eggozdb.maplemonk.my_sql_retailer_retailer rr2 on rr2.id = ret_rep.distributor_id )rt on tt.slug=rt.slug and tt.retailer_name=rt.retailer_name and tt.date=rt.pickup_date ) al left join eggozdb.maplemonk.my_sql_retailer_retailer rr2 on rr2.id = al.distributor_id",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        