{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE eggozdb.maplemonk.SALES_SUMMARY_Darjan AS select * ,sum(Net_Sales_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Net_Sales_Darjan from (select a.date Date ,a.area_classification Area_classification ,ifnull(b.Net_sales,0) Net_Sales_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select date ,area_classification ,sum(sales_per_item) Net_sales from ( select cast(timestampadd(minute,660,o.date) as date) Date ,o.id ,ol1.id ,rr.area_classification Area_Classification ,sum(single_sku_rate*quantity + single_sku_discount*quantity) Sales_per_item from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, o.id, ol1.id ) group by date ,area_classification) b on a.area_classification = b.area_classification and a.date = b.date ); CREATE OR REPLACE TABLE eggozdb.maplemonk.Eggs_Sold_SUMMARY_Darjan AS select * ,sum(Eggs_sold_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_sold_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_sold,0) Eggs_sold_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select date ,area_classification ,(case when eggs_sold_white is null then 0 else eggs_sold_white end) Eggs_sold_White ,((case when eggs_sold_white is null then 0 else eggs_sold_White end) + (case when eggs_sold_brown is null then 0 else eggs_sold_Brown end) + (case when eggs_sold_nutra is null then 0 else eggs_sold_Nutra end) + (case when eggs_sold_Champs is null then 0 else eggs_sold_Champs end) + (case when eggs_sold_fr is null then 0 else eggs_sold_fr end) ) as eggs_sold from ( select cast(timestampadd(minute,660,o.date) as date) Date ,rr.area_classification Area_Classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,SUM(ol1.quantity*pp.SKU_Count) Eggs_Sold from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, ( case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end ) ) pivot( sum(eggs_sold) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Date, Area_Classification, Eggs_sold_White, Eggs_sold_Brown, Eggs_sold_Nutra, Eggs_sold_Champs, Eggs_sold_fr) ) b on a.area_classification = b.Area_Classification and a.date = b.date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ); create or replace table eggozdb.maplemonk.Replacement_Summary_Darjan as select * ,sum(Eggs_replaced_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_replaced_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_replaced,0) Eggs_replaced_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select replacement_date , area_classification ,(case when eggs_replaced_white is null then 0 else eggs_replaced_white end) Eggs_Replaced_White ,(case when eggs_replaced_brown is null then 0 else eggs_replaced_Brown end) Eggs_replaced_Brown ,(case when eggs_replaced_nutra is null then 0 else eggs_replaced_Nutra end) Eggs_replaced_Nutra ,(case when eggs_replaced_fr is null then 0 else eggs_replaced_fr end) Eggs_replaced_fr ,(case when eggs_replaced_champs is null then 0 else eggs_replaced_champs end) Eggs_replaced_Champs ,((case when eggs_replaced_white is null then 0 else eggs_replaced_white end) + (case when eggs_replaced_brown is null then 0 else eggs_replaced_Brown end) + (case when eggs_replaced_Nutra is null then 0 else eggs_replaced_Nutra end) + (case when eggs_replaced_fr is null then 0 else eggs_replaced_fr end) + (case when eggs_replaced_champs is null then 0 else eggs_replaced_champs end)) as eggs_replaced from ( select date(timestampadd(minute,660,or1.date)) as Replacement_Date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.quantity* pp.sku_count) Eggs_replaced from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Replacement\') and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(eggs_replaced) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Replacement_date, area_classification, Eggs_replaced_White, Eggs_replaced_Brown, Eggs_replaced_Nutra, Eggs_replaced_Champs, Eggs_replaced_fr) ) b on a.area_classification = b.area_classification and a.date = b.replacement_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ) ; create or replace table eggozdb.maplemonk.Return_Summary_Darjan as select * ,sum(Eggs_returned_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_returned_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_returned,0) Eggs_returned_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select return_date , area_classification ,(case when eggs_returned_white is null then 0 else eggs_returned_white end) Eggs_returned_White ,(case when eggs_returned_brown is null then 0 else eggs_returned_Brown end) Eggs_returned_Brown ,(case when eggs_returned_nutra is null then 0 else eggs_returned_Nutra end) Eggs_returned_Nutra ,(case when eggs_returned_fr is null then 0 else eggs_returned_fr end) Eggs_returned_fr ,(case when eggs_returned_champs is null then 0 else eggs_returned_champs end) Eggs_returned_Champs ,((case when eggs_returned_white is null then 0 else eggs_returned_white end) + (case when eggs_returned_brown is null then 0 else eggs_returned_Brown end) + (case when eggs_returned_Nutra is null then 0 else eggs_returned_Nutra end) + (case when eggs_returned_fr is null then 0 else eggs_returned_fr end) + (case when eggs_returned_champs is null then 0 else eggs_returned_champs end)) as eggs_returned from ( select date(timestampadd(minute,660,or1.pickup_date)) as Return_Date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.quantity* pp.sku_count) Eggs_returned from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' and lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(eggs_returned) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Return_date, area_classification, Eggs_Returned_White, Eggs_Returned_Brown, Eggs_Returned_Nutra, Eggs_Returned_Champs, Eggs_Returned_fr) ) b on a.area_classification = b.area_classification and a.date = b.return_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) and a.date between \'2023-06-01\' and \'2023-06-15\' ) ; create or replace table eggozdb.maplemonk.ReturnAmount_Summary_Darjan as select * ,sum(Amount_Return_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Amount_Return_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Amount_Return,0) Amount_Return_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select return_date , area_classification ,(case when Amount_Return_white is null then 0 else Amount_Return_white end) Amount_Return_White ,(case when Amount_Return_brown is null then 0 else Amount_Return_Brown end) Amount_Return_Brown ,(case when Amount_Return_nutra is null then 0 else Amount_Return_Nutra end) Amount_Return_Nutra ,(case when Amount_Return_fr is null then 0 else Amount_Return_fr end) Amount_Return_fr ,(case when Amount_Return_champs is null then 0 else Amount_Return_champs end) Amount_Return_Champs ,((case when Amount_Return_white is null then 0 else Amount_Return_white end) + (case when Amount_Return_brown is null then 0 else Amount_Return_Brown end) + (case when Amount_Return_Nutra is null then 0 else Amount_Return_Nutra end) + (case when Amount_Return_fr is null then 0 else Amount_Return_fr end) + (case when Amount_Return_champs is null then 0 else Amount_Return_champs end)) as Amount_Return from ( select date(timestampadd(minute,660,or1.pickup_date)) as return_date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.amount) Amount_Return from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' and lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(Amount_Return) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (return_date, area_classification, Amount_Return_White, Amount_Return_Brown, Amount_Return_Nutra, Amount_Return_Champs, Amount_Return_fr) ) b on a.area_classification = b.area_classification and a.date = b.return_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ) ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        