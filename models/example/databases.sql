{{ config(
            materialized='table',
                post_hook={
                    "sql": "create or replace table sleepycat_db.maplemonk.sleepcat_db_product_traffic_summary as with sales as ( select order_date, sku, product_sub_category, product_category, product_id, case when upper(channel) = \'WOOCOMMERCE\' then \'DIRECT\' else channel end as channel, count(distinct order_id) as total_orders, sum(quantity) as total_quantity, sum(selling_price) as total_selling_price from sleepycat_db.maplemonk.sleepycat_db_sales_consolidated where upper(marketplace) = \'WOOCOMMERCE\' group by 1,2,3,4,5,6 ), pf_map1 as ( with sessions_users as ( select TO_DATE(date, \'YYYYMMDD\')date, itemid, sessions, ENGAGEDSESSIONS, totalusers, ITEMSVIEWED, ITEMSCHECKEDOUT, ITEMSADDEDTOCART, SESSIONSOURCEMEDIUM, replace(SPLIT(SESSIONSOURCEMEDIUM, \' / \')[0],\'\"\',\'\') AS source, replace(SPLIT(SESSIONSOURCEMEDIUM, \' / \')[1],\'\"\',\'\') AS medium from sleepycat_db.maplemonk.ga4_sc_ga4_products_funnel_metrics ), GA_CHANNEL_MAPPING as( select * from ( select *, row_number() over (partition by lower(concat(lower(ifnull(ga_source,\'\')),lower(ifnull(ga_medium,\'\')))) order by 1) rw from SLEEPYCAT_DB.MAPLEMONK.GA_CHANNEL_MAPPING ) where rw=1 and lower(concat(ifnull(ga_source,\'\'),ifnull(ga_medium,\'\'))) is not null ), joined_table as( select pf.date, pf.itemid, pf.sessions, pf.ENGAGEDSESSIONS, pf.totalusers, pf.ITEMSVIEWED, pf.ITEMSCHECKEDOUT, pf.ITEMSADDEDTOCART, pf.source, pf.medium, SESSIONSOURCEMEDIUM, GA_MAPPING.FINAL_SOURCE as ga_mapped_source, ga_mapping.FINAL_channel as ga_mapped_channel from sessions_users as pf left join GA_CHANNEL_MAPPING as ga_mapping on lower(concat(ifnull(pf.SOURCE,\'\'),ifnull(pf.MEDIUM,\'\'))) = lower(concat(ifnull(GA_MAPPING.ga_source,\'\'),ifnull(GA_MAPPING.ga_medium,\'\'))) ) select date, itemid, ga_mapped_channel, sum(sessions) as sessions, sum(ENGAGEDSESSIONS) as ENGAGEDSESSIONS, sum(totalusers) as totalusers, sum(ITEMSVIEWED) as ITEMSVIEWED, sum(ITEMSADDEDTOCART) as ITEMSADDEDTOCART, sum(ITEMSCHECKEDOUT) as ITEMSCHECKEDOUT from joined_table group by 1,2,3 ), spend as ( select date ,skucode ,upper(channel) marketing_Channel ,sum(ifnull(Clicks,0)) as Clicks ,sum(ifnull(Spend,0)) as Spend ,sum(ifnull(Impressions,0)) as Impressions ,sum(ifnull(Conversions,0)) as Conversions ,sum(ifnull(Conversion_Value,0)) as Conversion_Value from SLEEPYCAT_DB.MAPLEMONK.SLEEPYCAT_DB_PRODUCT_MARKETING_CONSOLIDATED where lower(channel) like any (\'%google%\',\'%facebook%\') group by 1,2,3 ) select coalesce(s_c.order_date,pf_map1.date ,s.date )::date as Order_date, upper(coalesce(s_c.sku, pf_map1.itemid, s.skucode)) as sku , upper(coalesce( s_c.channel,pf_map1.ga_mapped_channel,s.marketing_Channel)) as channel, s_c.product_category, s_c.product_sub_category, s_c.product_id, s_c.total_orders, s_c.total_quantity, s_c.total_selling_price, pf_map1.totalusers, pf_map1.ITEMSVIEWED, pf_map1.sessions, pf_map1.ENGAGEDSESSIONS, pf_map1.ga_mapped_channel, pf_map1.ITEMSADDEDTOCART, pf_map1.ITEMSCHECKEDOUT, s.spend FROM sales s_c full outer JOIN pf_map1 ON lower(s_c.channel) = LOWER(pf_map1.ga_mapped_channel) AND lower(s_c.sku) = lower(pf_map1.itemid) and s_c.order_date::DATE = pf_map1.date::DATE full outer join spend s on LOWER(coalesce(s_c.channel,pf_map1.ga_mapped_channel)) = LOWER(s.marketing_Channel) AND lower(coalesce(s_c.sku,pf_map1.itemid)) = LOWER(s.skucode) and coalesce(s_c.order_date::DATE ,pf_map1.date::DATE) = s.date order by ORDER_DATE desc;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from SLEEPYCAT_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            