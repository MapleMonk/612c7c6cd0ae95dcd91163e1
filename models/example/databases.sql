{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE or replace table snitch_db.maplemonk.return_fact_items as WITH sales_data AS ( SELECT sku_group, order_name, sku, customer_name, phone, order_timestamp::date AS order_date, CASE WHEN webshopney = \'Appbrew\' THEN \'App\' WHEN webshopney = \'Snitch_IOS\' THEN \'App_IOS\' ELSE \'Web\' END AS channel, state, quantity AS sales_qty FROM snitch_db.maplemonk.fact_items_snitch where lower(ifnull(discount_code,\'n\')) not like \'%influ%\' and order_name not in (\'2431093\',\'2422140\',\'2425364\',\'2430652\',\'2422237\',\'2420623\',\'2429832\',\'2422378\',\'2428311\',\'2429064\',\'2428204\',\'2421343\',\'2431206\',\'2430491\',\'2426682\',\'2426487\',\'2426458\',\'2423575\',\'2422431\',\'2423612\',\'2426625\',\'2428117\',\'2426894\',\'2425461\',\'2426570\',\'2423455\',\'2430777\',\'2426009\',\'2428245\',\'2427269\',\'2430946\',\'2425821\',\'2429986\',\'2429085\',\'2422047\',\'2430789\',\'2420219\',\'2428341\',\'2430444\',\'2426866\',\'2431230\',\'2425839\',\'2430980\',\'2427048\',\'2430597\',\'2420499\',\'2431050\',\'2420271\',\'2426684\',\'2428747\',\'2423523\',\'2431171\',\'2430830\',\'2425325\',\'2428414\',\'2429054\',\'2423596\') and tags not in (\'FLITS_LOGICERP\') ), first_order_date AS ( SELECT sku_group, MIN(order_date) AS first_order_date FROM sales_data GROUP BY sku_group ), live_date AS ( SELECT a.id, a.status, a.published_at AS live_date, b.sku_group FROM snitch_db.maplemonk.shopifyindia_new_products a LEFT JOIN snitch_db.maplemonk.availability_master_v2 b ON a.id = b.id ), live_date_final as ( SELECT COALESCE(a.sku_group, b.sku_group) AS sku_group, CASE WHEN a.live_date < b.first_order_date THEN a.live_date::date ELSE b.first_order_date::date END AS live_date FROM live_date a FULL OUTER JOIN first_order_date b ON a.sku_group = b.sku_group ), category as ( select sku_group, product_type, case when product_type in (\'Joggers & Trackpants\',\'Cargo Pants\',\'Boxers\',\'Jeans\',\'Night Suit & Pyjamas\',\'Trousers\',\'Chinos\',\'Shorts\') then \'bottom_wear\' when product_type in (\'Shirt\',\'Overshirt\',\'Hoodies\',\'Sweaters\',\'T-Shirts\',\'Sweatshirts\',\'Shirts\',\'Jackets\',\'Blazers\') then \'top_wear\' when product_type in (\'Accessories\',\'Sunglasses\',\'Shoes\',\'Inner Wear\',\'Perfumes\') then \'accessories\' else \'others\' end as top_bottom from snitch_db.maplemonk.metafields_fill_rate_visiblity ), final_sales_table as ( select a.*, b.live_date, c.product_type, c.top_bottom from sales_data a left join live_date_final b on a.sku_group = b.sku_group left join category c on a.sku_group = c.sku_group ), fit AS ( SELECT SUBSTRING(id, POSITION(\'Product/\' IN id) + LENGTH(\'Product/\')) AS id, REPLACE(A.value:key, \'\"\', \'\') AS key_type, REPLACE(A.value:value, \'\"\', \'\') AS fit FROM snitch_db.maplemonk.metafields_products_graph_ql, LATERAL FLATTEN (input => metafields) A WHERE key_type = \'fit\' ), sku_group_fit as ( select a.sku_group, b.fit from snitch_db.maplemonk.availability_master_v2 a left join fit b on a.id = b.id ), returns_data as ( select sku, REVERSE(SUBSTRING(REVERSE(sku), CHARINDEX(\'-\', REVERSE(sku)) + 1)) AS sku_group, order_id, quantity as return_qty, return_reasons, case when RETURN_REASONS = \'product looks different from website\' then \'product_different_from_website\' when RETURN_REASONS IN (\'i do not like the product\', \'product quality issue\') then \'quality\' when RETURN_REASONS IN (\'size is too large\', \'size is too small\', \'size or fit issue\') then \'size\' when RETURN_REASONS IN (\'wrong item shipped\', \'i received a defective item\', \'wrong item received\', \'wrong size shipped\', \'wrong or defective product\') then \'wpr\' when RETURN_REASONS = \'delivery was delayed\' then \'delivery_delayed\' when RETURN_REASONS = \'i change my mind\' then \'mind_change\' end as reason from snitch_db.maplemonk.ecoreturns_final_returns where status != \'REJECTED\' AND REQUEST_TYPE = \'Return\' ) select a.*, ifnull(b.return_qty,0) as return_qty, coalesce(b.return_reasons,\'not_returned\') as return_reasons, coalesce(b.reason,\'not_returned\') as reason, c.live_date, d.product_type as category, d.top_bottom, e.fit from sales_data a left join returns_data b on a.sku = b.sku and a.sku_group = b.sku_group and cast(a.order_name as varchar) = cast(b.order_id as varchar) left join live_date_final c on a.sku_group = c.sku_group left join category d on a.sku_group = d.sku_group left join sku_group_fit e on a.sku_group = e.sku_group where a.order_date >= \'2023-10-01\' ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            