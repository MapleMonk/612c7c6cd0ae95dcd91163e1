{{ config(
            materialized='table',
                post_hook={
                    "sql": "Create or Replace table snitch_db.maplemonk.cp_1 as with ops as ( select * from ( With Final as ( Select * From ( SELECT *, CASE WHEN PIN_code LIKE \'11%\' THEN \'Delhi\' WHEN PIN_code LIKE \'12%\' OR PIN_code LIKE \'13%\' THEN \'Haryana\' WHEN PIN_code LIKE \'14%\' OR PIN_code LIKE \'15%\' THEN \'Punjab\' WHEN PIN_code LIKE \'16%\' THEN \'Chandigarh\' WHEN PIN_code LIKE \'17%\' THEN \'Himachal Pradesh\' WHEN PIN_code LIKE \'18%\' OR PIN_code LIKE \'19%\' THEN \'Jammu and Kashmir, Ladakh\' WHEN PIN_code BETWEEN \'200000\' AND \'289999\' THEN \'Uttar Pradesh, Uttarakhand\' WHEN PIN_code BETWEEN \'300000\' AND \'349999\' THEN \'Rajasthan\' WHEN (PIN_code BETWEEN \'360000\' AND \'399999\' AND PIN_code NOT LIKE \'396%\') THEN \'Gujarat\' WHEN PIN_code LIKE \'396%\' THEN \'Dadra & Nagar Haveli and Daman & Diu\' WHEN (PIN_code BETWEEN \'400000\' AND \'449999\' AND PIN_code NOT LIKE \'403%\') THEN \'Maharashtra\' WHEN PIN_code LIKE \'403%\' THEN \'Goa\' WHEN PIN_code BETWEEN \'450000\' AND \'489999\' THEN \'Madhya Pradesh\' WHEN PIN_code LIKE \'49%\' THEN \'Chhattisgarh\' WHEN PIN_code LIKE \'50%\' THEN \'Telangana\' WHEN PIN_code BETWEEN \'510000\' AND \'539999\' THEN \'Andhra Pradesh\' WHEN PIN_code BETWEEN \'560000\' AND \'599999\' THEN \'Karnataka\' WHEN PIN_code BETWEEN \'600000\' AND \'669999\' THEN \'Tamil Nadu\' WHEN PIN_code LIKE \'605%\' THEN \'Puducherry\' WHEN (PIN_code BETWEEN \'670000\' AND \'699999\' AND PIN_code NOT LIKE \'682%\') THEN \'Kerala\' WHEN PIN_code LIKE \'682%\' THEN \'Lakshadweep\' WHEN (PIN_code BETWEEN \'700000\' AND \'749999\' AND PIN_code NOT LIKE \'737%\' AND PIN_code NOT LIKE \'744%\') THEN \'West Bengal\' WHEN PIN_code LIKE \'737%\' THEN \'Sikkim\' WHEN PIN_code LIKE \'744%\' THEN \'Andaman and Nicobar Islands\' WHEN PIN_code BETWEEN \'750000\' AND \'779999\' THEN \'Odisha\' WHEN PIN_code LIKE \'78%\' THEN \'Assam\' WHEN PIN_code BETWEEN \'790000\' AND \'799999\' THEN \'Arunachal Pradesh\' WHEN PIN_code BETWEEN \'793000\' AND \'794999\' THEN \'Meghalaya\' WHEN PIN_code LIKE \'795%\' THEN \'Manipur\' WHEN PIN_code LIKE \'796%\' THEN \'Mizoram\' WHEN PIN_code BETWEEN \'797000\' AND \'798999\' THEN \'Nagaland\' WHEN PIN_code LIKE \'799%\' THEN \'Tripura\' WHEN PIN_code BETWEEN \'800000\' AND \'859999\' THEN \'Bihar, Jharkhand\' WHEN PIN_code BETWEEN \'900000\' AND \'999999\' THEN \'Army Postal Service\' ELSE \'Unknown\' END AS final_State, FROM ( select awb as awb_number ,TRY_TO_TIMESTAMP(\"Created at\", \'YYYY-MM-DD HH24:MI:SS\') as assigned_date ,TRY_TO_TIMESTAMP(\"Order Date\", \'YYYY-MM-DD HH24:MI:SS\') as ORDER_DATE_dummy ,\"Pickup Date\" ,TRY_TO_TIMESTAMP(\"Pickup Date\", \'YYYY-MM-DD HH24:MI:SS\') as PICKUP_DATE ,TRY_TO_TIMESTAMP(\"Delivery Date\", \'YYYY-MM-DD HH24:MI:SS\') as DELIVERY_DATE ,\"Current Location\" as Current_Location ,TRY_TO_TIMESTAMP(\"Latest Timestamp\", \'YYYY-MM-DD HH24:MI:SS\') CURRENT_DATE ,\"Latest Remark\" Latest_Remark ,\"Clickpost Unified Status\" pre_current_status ,case when lower(pre_current_status) in (\'rto-shipmentdelay\',\'rto-delivered\',\'rto-intransit\',\'rto-requested\',\'rto-marked\',\'rto-contactcustomercare\',\'rto-outfordelivery\',\'rto-failed\') then \'RTO\' when lower(pre_current_status) in (\'pickedup\',\'destinationhubin\',\'contactcustomercare\',\'shipmentdelayed\',\'origincityin\',\'outfordelivery\',\'intransit\',\'origincityout\',\'shipmentheld\') then \'INTRANSIT\' when lower(pre_current_status) in (\'delivered\') then \'DELIVERED\' when lower(pre_current_status) in (\'cancelled\') then \'CANCELLED\' when lower(pre_current_status) in (\'orderplaced\',\'outforpickup\',\'awb registered\',\'pickuppending\',\'pickupfailed\') then \'ORDER_PLACED\' when lower(pre_current_status) in (\'faileddelivery\',\'notserviceable\') then \'UNDELIVERED\' when lower(pre_current_status) in (\'lost\',\'damaged\') then \'LOST\' END as status ,\"Order ID\" as ORDER_ID ,\"Product SKU Code\" SKU_LIST ,\"Items Quantity\" quantity_in_Box ,\"Out For Delivery Attempts\" as Out_For_Delivery_Attempts ,TRY_TO_TIMESTAMP(\"Out For Delivery 1st Attempt\", \'YYYY-MM-DD HH24:MI:SS\') outfordelivery_date ,\"Courier Partner\" as COURIER_PARTNER ,\"Shipment Weight\" ,try_cast(\"Expected Date of Delivery (Max)\" as date) as MAX_SLA ,try_cast(\"Expected Date of Delivery (Min)\" as Date) as MIN_SLA ,\"Expected delivery date by Courier Partner\" EDD_CP ,\"Payment Mode\" as PAYMENT_MODE ,\"Payment Mode\" as PAYMENT_METHOD ,\"Invoice Date\" as INVOICE_DATE ,\"Invoice Value\" as INVOICE_VALUE ,\"Invoice Number\" as INVOICE_NUMBER ,\"Drop Pincode\" as pincode ,\"Drop City\" CITY ,\"Drop State\" STATE ,\"Drop Name\" Customer_name ,\"Drop Phone\" PHONE ,\"Drop Email\" EMAIL ,DATEDIFF(\'hour\',pickup_date , outfordelivery_date) AS P2A ,DATEDIFF(\'hour\',pickup_date , delivery_date) AS P2D ,(DATEDIFF(\'hour\',ORDER_DATE_dummy ,pickup_date)/24)::int AS O2P1 ,(DATEDIFF(\'hour\',ORDER_DATE_dummy ,assigned_date)/24)::int AS O2A1 ,case when (delivery_date :: date) >= MIN_SLA and (delivery_date :: Date) <= MAX_SLA then 1 else 0 end as in_time ,case when o2p1=0 then \'D-0\' when o2p1=1 then \'D-1\' when o2p1=2 then \'D-2\' when o2p1=3 then \'D-3\' when o2p1>3 then \'3+\' end as O2P ,case when o2A1=0 then \'D-0\' when o2A1=1 then \'D-1\' when o2A1=2 then \'D-2\' when o2A1=3 then \'D-3\' when o2A1>3 then \'3+\' end as O2A ,case when outfordelivery_date::date = delivery_date::date then 1 when outfordelivery_date::date != delivery_date::date then 0 end as FASR ,case when \"Reference Number\" like \'%EMIZA%\' then \'EMIZA\' when \"Reference Number\" like \'%INV-SAPL%\' then \'YLK1\' when \"Reference Number\" like \'%SAPL%\' then \'YLK2\' when \"Reference Number\" like \'%INV-SR%\' then \'HSK\' end as warehouse ,mapped_zone as zone ,delivery_state as mapped_state ,delivery_city as mapped_city, CASE WHEN lower(\"Courier Partner\") NOT LIKE \'%reverse%\' THEN \"Drop Pincode\" ELSE \"Pickup Pincode\" END AS PIN_code, CASE WHEN lower(\"Courier Partner\") LIKE \'delhivery%\' THEN \'Delhivery\' WHEN lower(\"Courier Partner\") LIKE \'bluedart%\' THEN \'Bluedart\' WHEN lower(\"Courier Partner\") LIKE \'blitz%\' THEN \'Blitz\' WHEN lower(\"Courier Partner\") LIKE \'shirocket%\' THEN \'Shiprocket\' WHEN lower(\"Courier Partner\") LIKE \'proship%\' THEN \'Proship\' ELSE \'Snitch\' END AS wh, CASE WHEN lower(\"Courier Partner\") LIKE \'%reverse%\' THEN \"RVP Reason\" ELSE NULL END AS Return_Reason, CASE WHEN lower(\"Courier Partner\") LIKE \'%reverse%\' THEN \'Reverse\' ELSE \'Forward\' END AS Mode, CASE WHEN lower(\"Courier Partner\") NOT LIKE \'%reverse%\' AND lower(\"Clickpost Unified Status\") LIKE \'%rto%\' THEN \'RTO\' WHEN lower(\"Courier Partner\") LIKE \'%reverse%\' THEN \'Reverse\' ELSE \'Forward\' END AS journey, CASE WHEN \"Account Code\" IN (\'Delhivery\',\'Delhivery_Surface\',\'BharatDart Prepaid\',\'Ecom Reverse\',\'Proship Reverse\',\'Blitz\',\'Ecom Express\',\'DelhiveryRVP\') THEN \'Surface\' ELSE \'Air\' END AS MODE_1, CASE WHEN lower(\"Courier Partner\") LIKE \'delhivery%\' THEN \'Delhivery\' WHEN lower(\"Courier Partner\") LIKE \'proship%\' THEN \'Proship\' WHEN lower(\"Courier Partner\") LIKE \'blitz%\' THEN \'Blitz (Formerly Grow Simplee)\' ELSE \"Courier Partner\" END AS Partner from ( select co.* ,pz.zone as mapped_zone ,pz.delivery_state ,pz.delivery_city from snitch_db.maplemonk.snitch_clickpost_track_order_dashboard_report co left join ( select * from ( select *,row_number() over(partition by delivery_postcode order by 1)rw from snitch_db.maplemonk.pincodemappingzoneupdatedsnitch ) where rw = 1 )pz on co.\"Drop Pincode\" = pz.DELIVERY_POSTCODE ) )) ), zone as ( select * from ( select *,row_number() over(partition by delivery_postcode order by 1)rw from snitch_db.maplemonk.pincodemappingzoneupdatedsnitch ) where rw = 1 ) Select a.*, b.zone as final_zone from final a left join zone b on a.PIN_code =b.DELIVERY_POSTCODE ) ), correct_order_date as ( select * from (SELECT awb, order_timestamp as order_date, ROW_NUMBER() OVER (PARTITION BY awb ORDER BY order_timestamp DESC) AS rn FROM snitch_db.maplemonk.unicommerce_fact_items_snitch ) where rn=1) select a.*, b.order_date from ops a left join correct_order_date b on a.awb_number = b.awb",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            