{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE snitch_db.maplemonk.plus_size_summary AS ( WITH shopify_sales AS ( SELECT order_timestamp::date AS Date, \'Shopify\' AS type, sku_group, webshopney AS channel, SUM(NULLIF(gross_sales, 0)) AS gross_sales, SUM(NULLIF(quantity, 0)) AS gross_quantity, ROUND( (SUM(NULLIF(discount, 0)) / NULLIF(SUM(discount + gross_sales), 0)) * 100, 2 ) AS discount_percentage, SUM(discount) AS discount_amount, SUM(CASE WHEN new_customer_flag != \'Repeated\' THEN gross_sales ELSE 0 END) AS new_customers_revenue, SUM(CASE WHEN new_customer_flag = \'Repeated\' THEN gross_sales ELSE 0 END) AS repeat_customers_revenue, COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN customer_id ELSE NULL END) AS new_customers, DIV0( COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN customer_id ELSE NULL END), COUNT(DISTINCT order_name) ) * 100 AS new_customers_percentage, DIV0(SUM(NULLIF(gross_sales, 0)), SUM(NULLIF(quantity, 0))) AS ASP FROM snitch_db.maplemonk.fact_items_snitch WHERE ( size IN (\'3XL\',\'4XL\',\'5XL\',\'6XL\',\'40\',\'42\',\'44\',\'46\') OR sku_group LIKE \'4MBG%\' ) AND LOWER(IFNULL(discount_code, \'n\')) NOT LIKE \'%eco%\' AND LOWER(IFNULL(discount_code, \'n\')) NOT LIKE \'%influ%\' AND order_name NOT IN (\'2431093\',\'2422140\',\'2425364\',\'2430652\',\'2422237\',\'2420623\',\'2429832\',\'2422378\',\'2428311\',\'2429064\',\'2428204\',\'2421343\',\'2431206\',\'2430491\',\'2426682\',\'2426487\',\'2426458\',\'2423575\',\'2422431\',\'2423612\',\'2426625\',\'2428117\',\'2426894\',\'2425461\',\'2426570\',\'2423455\',\'2430777\',\'2426009\',\'2428245\',\'2427269\',\'2430946\',\'2425821\',\'2429986\',\'2429085\',\'2422047\',\'2430789\',\'2420219\',\'2428341\',\'2430444\',\'2426866\',\'2431230\',\'2425839\',\'2430980\',\'2427048\',\'2430597\',\'2420499\',\'2431050\',\'2420271\',\'2426684\',\'2428747\',\'2423523\',\'2431171\',\'2430830\',\'2425325\',\'2428414\',\'2429054\',\'2423596\') AND tags NOT IN (\'FLITS_LOGICERP\') AND order_timestamp::date >= \'2024-07-11\' GROUP BY order_timestamp::date, type, channel, sku_group ), marketplace_pre_data AS ( SELECT order_date AS Date, CASE WHEN marketplace IN (\'SNITCH VR MALL\', \'SNITCH - FOCO - VR MALL\') THEN \'Store_Vr_Mall\' WHEN marketplace IN (\'FLIPKART\', \'FLIPKART_SAPL\', \'FLIPKART_SAPLWH2\', \'FLIPKART_SAPL_EMIZA\', \'FLIPKART_SAPL_SR\') THEN \'Marketplace_Flipkart\' WHEN marketplace IN (\'SNITCH BRIGADE ROAD\', \'SNITCH - COFO - BRIGADE ROAD\',\'SNITCH - COFO - BRIGADE ROAD\') THEN \'Store_Brigade_Road\' WHEN marketplace IN (\'SNITCH MBH\', \'SNITCH - FOCO - MBH\') THEN \'Store_Mbh\' WHEN marketplace IN (\'SAPL_AJIO_OMNI_SR\', \'SAPL_AJIO_OMNI\', \'SAPL_AJIO_OMNI_EMIZA\', \'SAPL_AJIO_OMNI_2\', \'AJIO_OMNI\') THEN \'Marketplace_Ajio\' WHEN marketplace = \'SNITCH - FOCO - TRION\' THEN \'Store_Trion\' WHEN marketplace = \'SNITCH - FOCO - EVA\' THEN \'Store_Eva\' WHEN marketplace IN (\'SAPL_MYNTRA_EMIZA\', \'MYNTRAPPMP\', \'SAPL_MYNTRAPPMP_SR\', \'SAPL_MYNTRAPPMP\', \'MYNTRAPPMP_SAPL_WH2\') THEN \'Marketplace_Myntra\' WHEN marketplace = \'NYKAA_FASHION\' THEN \'Marketplace_Nykaa\' WHEN marketplace = \'SNITCH - FOCO - GANDHI NAGAR\' THEN \'Store_Gandhi_Nagar\' WHEN marketplace = \'SNITCH - COCO - BEL ROAD\' THEN \'Store_Bel_Road\' WHEN marketplace IN (\'AMAZON_FLEX_API_EMIZA\', \'AMAZON_FLEX_API_SR\', \'AMAZON_FLEX_API_SAPL\', \'AMAZON\') THEN \'Marketplace_Amazon\' WHEN marketplace = \'SNITCH - COCO - HSR LAYOUT\' THEN \'Store_Hsr\' WHEN marketplace = \'SHOPIFY\' THEN \'Shopify\' WHEN marketplace IN (\'SNITCH - JAYANAGAR\', \'SNITCH - COCO - JAYANAGAR\') THEN \'Store_Jayanagar\' WHEN marketplace = \'SNITCH - COFO - SARATH CITY\' THEN \'Store_Sarath_City\' END AS channel, \'Marketplace\' AS type, sku_group, SUM(NULLIF(selling_price, 0)) AS gross_sales, SUM(NULLIF(shipping_quantity, 0)) AS gross_quantity, ROUND( (SUM(NULLIF(discount, 0)) / NULLIF(SUM(discount + selling_price), 0)) * 100, 2 ) AS discount_percentage, SUM(NULLIF(discount, 0)) AS discount_amount, SUM(CASE WHEN new_customer_flag != \'Repeated\' THEN selling_price ELSE 0 END) AS new_customers_revenue, SUM(CASE WHEN new_customer_flag = \'Repeated\' THEN selling_price ELSE 0 END) AS repeat_customers_revenue, COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN customer_id ELSE NULL END) AS new_customers, DIV0( COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN customer_id ELSE NULL END), COUNT(DISTINCT customer_id) ) * 100 AS new_customers_percentage, DIV0(SUM(selling_price), SUM(shipping_quantity)) AS ASP FROM snitch_db.maplemonk.unicommerce_fact_items_snitch WHERE order_date >= \'2024-07-11\' AND sku_group like \'4MBG%\' GROUP BY 1, 2, 3, 4 ), marketplace_data AS ( SELECT * FROM marketplace_pre_data WHERE channel LIKE \'Marketplace%\' ), stores_data AS ( SELECT order_date AS Date, \'Store\' AS type, MARKETPLACE_MAPPED AS channel, sku_group, SUM(NULLIF(selling_price, 0)) AS gross_sales, SUM(NULLIF(shipping_quantity, 0)) AS gross_quantity, nullif(ROUND( (SUM(NULLIF(discount, 0)) / NULLIF(SUM(discount + selling_price), 0)) * 100, 2 ),0) AS discount_percentage, nullif(SUM(NULLIF(discount, 0)),0) AS discount_amount, SUM(CASE WHEN new_customer_flag != \'Repeated\' THEN selling_price ELSE 0 END) AS new_customers_revenue, SUM(CASE WHEN new_customer_flag = \'Repeated\' THEN selling_price ELSE 0 END) AS repeat_customers_revenue, COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN phone ELSE NULL END) AS new_customers, DIV0( COUNT(DISTINCT CASE WHEN new_customer_flag != \'Repeated\' THEN phone ELSE NULL END), COUNT(DISTINCT phone) ) * 100 AS new_customers_percentage, DIV0(SUM(NULLIF(selling_price, 0)), SUM(NULLIF(shipping_quantity, 0))) AS ASP FROM snitch_db.maplemonk.STORE_fact_items_offline WHERE order_date >= \'2024-07-11\' AND sku_group LIKE \'4MBG%\' and marketplace_mapped not like \'%WH%\' GROUP BY 1, 2, 3, 4 ) select * from shopify_sales union select * from marketplace_data union select * from stores_data );",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            