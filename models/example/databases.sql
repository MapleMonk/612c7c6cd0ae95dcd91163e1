{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table anveshan_db.maplemonk.customer_master_intermediate as select fi.customer_id_final, coalesce(max(case when left(name,1) <> \'#\' then name end),max(name)) as Name, coalesce(max(case when lower(left(fi.email,5)) <> \'dummy\' then email end),max(fi.email)) as Email, fi.phone, min(Acquisition_Date) Acquisition_Date , min(case when fi.order_date = Acquisition_Date then shop_name end) as acquisition_channel, fi.acquisition_product, datediff(day,min(order_date),current_date) days_since_first_purchase, max(case when fi.order_date=fi1.max_order_date then Product_name end) last_product, ifnull(sum(fi.selling_price),0) total_sales_inr, count(distinct fi.order_id) total_orders, count(distinct case when shop_name = \'Shopify_India\' then fi.order_id end ) as total_shopify_orders, count(distinct case when shop_name = \'CRED\' then fi.order_id end ) as total_CRED_orders, count(distinct fi.sales_order_item_id) total_items, max(case when fi.order_date=fi1.max_order_date then shop_name end) last_order_channel, max(case when fi.order_date=fi1.max_order_date then order_id end) last_order_id, datediff(day,max(fi.order_date),current_date) days_since_last_purchase, case when count(distinct order_id)=0 then null else datediff(day,min(order_date),max(order_date))/count(distinct order_id) end Avg_days_between_purchases, sum(fi.DISCOUNT) discount_inr, case when sum(fi.selling_price)=0 then null else sum(fi.DISCOUNT)/sum(fi.selling_price) end discount_percent from (select * from Anveshan_db.maplemonk.SALES_CONSOLIDATED_ANVESHAN where lower(order_status) not in (\'cancelled\'))fi left join (select customer_id_final, max(order_date) max_order_date, min(order_date) min_order_date from Anveshan_db.maplemonk.SALES_CONSOLIDATED_ANVESHAN where lower(order_status) not in (\'cancelled\') group by customer_id_final )fi1 on fi.customer_id_final=fi1.customer_id_final where fi.customer_id_final is not null and order_date is not null group by fi.customer_id_final, fi.phone, fi.Acquisition_Product; create or replace table anveshan_db.maplemonk.customer_master_anveshan as select x.*, rcm.category from (select c.*, m.Score as M_Score,r.Score as R_Score,f.Score as F_Score, (r.Score*1/3+f.Score*1/3+m.Score*1/3) as RFM_Score from (select *, row_number () over (order by TOTAL_Sales_INR desc)/ (select count (distinct CUSTOMER_ID_FINAL) from anveshan_db.maplemonk.Customer_Master_Intermediate) as Percentile_M, row_number() over(order by DAYS_SINCE_LAST_PURCHASE asc,CUSTOMER_ID_FINAL)/(select count(distinct CUSTOMER_ID_FINAL) from anveshan_db.maplemonk.Customer_Master_Intermediate) as Percentile_R, case when AVG_DAYS_BETWEEN_PURCHASES=0 then 0.4 else row_number () over (partition by case when AVG_DAYS_BETWEEN_PURCHASES=0 then 0 else 1 end order by AVG_DAYS_BETWEEN_PURCHASES asc,CUSTOMER_ID_FINAL) /(select count(distinct CUSTOMER_ID_FINAL) from anveshan_db.maplemonk.Customer_Master_Intermediate) end as Percentile_F from anveshan_db.maplemonk.Customer_Master_Intermediate) c left join anveshan_db.maplemonk.RFM_Score m on c.Percentile_M > m.\"Lower Limit\" and c.Percentile_M<=m.\"Upper Limit\" left join anveshan_db.maplemonk.RFM_Score r on c.Percentile_R > r.\"Lower Limit\" and c.Percentile_R<=r.\"Upper Limit\" left join anveshan_db.maplemonk.RFM_Score f on c.Percentile_F > f.\"Lower Limit\" and c.Percentile_F<=f.\"Upper Limit\")x left join anveshan_db.maplemonk.RFM_CUSTOMER_CATEGORY_MAPPING rcm on x.M_Score::int>rcm.M_START::int and x.M_Score::int<=M_END::int and x.R_Score::int>rcm.R_START::int and x.R_Score::int<=R_END::int and x.F_Score::int>rcm.F_START::int and x.F_Score::int<=F_END::int;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from ANVESHAN_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        