{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE Snitch_db.MAPLEMONK.EOQ AS SELECT *, TOTAL_UNITS_ON_HAND - ((LEAD_TIME) * (final_ros * (1 - AVERAGE_RETURNS_SINCE_FIRST_ORDER/100))) + aggregated.qup as inv_level_lead_time_end, OP - (TOTAL_UNITS_ON_HAND - ((LEAD_TIME + SAFETY) * (final_ros * (1 - AVERAGE_RETURNS_SINCE_FIRST_ORDER/100))) + aggregated.qup) as EOQ, CASE WHEN (TOTAL_UNITS_ON_HAND - ((LEAD_TIME + SAFETY) * (final_ros * (1 - AVERAGE_RETURNS_SINCE_FIRST_ORDER/100))) + aggregated.qup) < 0 THEN OP ELSE CASE WHEN (OP - (TOTAL_UNITS_ON_HAND - ((LEAD_TIME + SAFETY) * (final_ros * (1 - AVERAGE_RETURNS_SINCE_FIRST_ORDER/100))) + aggregated.qup))<0 THEN 0 ELSE (OP - (TOTAL_UNITS_ON_HAND - ((LEAD_TIME + SAFETY) * (final_ros * (1 - AVERAGE_RETURNS_SINCE_FIRST_ORDER/100))) + aggregated.qup)) END END as EOQ_NEW from ( SELECT order_point_inventory.MOQ, order_point_inventory.safety, order_point_inventory.factory, order_point_inventory.category, order_point_inventory.lead_time, order_point_inventory.min_days_to, order_point_inventory.product_name, order_point_inventory.final_category, order_point_inventory.final_ros, order_point_inventory.AVERAGE_RETURNS_SINCE_FIRST_ORDER, order_point_inventory.OP, order_point_inventory.TOTAL_UNITS_ON_HAND, order_point_inventory.INVENTORY_BELOW_ORDER_POINT, order_point_inventory.DEFICIT_INVENTORY, COALESCE(SubQuery.sku_group, order_point_inventory.sku_group) as sku_group, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.quantity ELSE 0 END), 0) as qup, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.L ELSE 0 END), 0) as qup_L, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.M ELSE 0 END), 0) as qup_M, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.S ELSE 0 END), 0) as qup_S, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.XL ELSE 0 END), 0) as qup_XL, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.XXL ELSE 0 END), 0) as qup_XXL, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.XS ELSE 0 END), 0) as qup_XS, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.\"3XL\" ELSE 0 END), 0) as qup_3XL, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.\"4XL\" ELSE 0 END), 0) as qup_4XL, COALESCE(SUM(CASE WHEN SubQuery.consideration_flag = 1 THEN SubQuery.\"5XL\" ELSE 0 END), 0) as qup_5XL FROM ( SELECT FACTORY_PRODUCTION_INVENTORY.sku_group, FACTORY_PRODUCTION_INVENTORY.quantity, FACTORY_PRODUCTION_INVENTORY.L, FACTORY_PRODUCTION_INVENTORY.M, FACTORY_PRODUCTION_INVENTORY.S, FACTORY_PRODUCTION_INVENTORY.XL, FACTORY_PRODUCTION_INVENTORY.XXL, FACTORY_PRODUCTION_INVENTORY.XS, FACTORY_PRODUCTION_INVENTORY.\"3XL\", FACTORY_PRODUCTION_INVENTORY.\"4XL\", FACTORY_PRODUCTION_INVENTORY.\"5XL\", FACTORY_PRODUCTION_INVENTORY.expected_delivery_date, FACTORY_INPUTS.lead_time, FACTORY_INPUTS.safety, CASE WHEN FACTORY_PRODUCTION_INVENTORY.expected_delivery_date < (CURRENT_DATE + CAST(FACTORY_INPUTS.lead_time AS INTEGER) + CAST(FACTORY_INPUTS.safety AS INTEGER)) THEN 1 ELSE 0 END AS consideration_flag FROM snitch_db.MAPLEMONK.FACTORY_PRODUCTION_INVENTORY LEFT JOIN snitch_db.MAPLEMONK.FACTORY_INPUTS ON FACTORY_PRODUCTION_INVENTORY.sku_group = FACTORY_INPUTS.sku_group ) AS SubQuery RIGHT JOIN snitch_db.maplemonk.order_point_inventory ON SubQuery.sku_group = order_point_inventory.sku_group GROUP BY order_point_inventory.sku_group, SubQuery.sku_group, order_point_inventory.product_name, order_point_inventory.final_Category, order_point_inventory.final_ros, order_point_inventory.AVERAGE_RETURNS_SINCE_FIRST_ORDER, order_point_inventory.OP, order_point_inventory.MOQ, order_point_inventory.SAFETY, order_point_inventory.FACTORY, order_point_inventory.CATEGORY, order_point_inventory.LEAD_TIME, order_point_inventory.MIN_DAYS_TO, order_point_inventory.TOTAL_UNITS_ON_HAND, order_point_inventory.INVENTORY_BELOW_ORDER_POINT, ORDER_POINT_INVENTORY.DEFICIT_INVENTORY ) as aggregated order by EOQ DESC",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        