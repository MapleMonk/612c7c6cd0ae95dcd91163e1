{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table LILGOODNESS_DB.maplemonk.secondary_sales_consolidated_LG as select SHOP_NAME, CARRIER_ID, COURIER, CUSTOMER_NAME, EMAIL, PHONE, MARKETPLACE, MARKETPLACE_ID, ORDER_ID, LINE_ITEM_ID, INVOICE_ID, REFERENCE_CODE, MANIFEST_DATE, SHIPPING_LAST_UPDATE_DATE, SHIPPING_STATUS, SKU, SKU_TYPE, PRODUCT_ID, PRODUCTNAME, CURRENCY, RETURN_FLAG, CITY, STATE, ORDER_STATUS, ORDER_DATE, SHIPPING_PRICE, NUMBER_OF_PRODUCTS_IN_COMBO, SUBORDER_QUANTITY, SHIPPED_QUANTITY, RETURNED_QUANTITY, CANCELLED_QUANTITY, RETURN_SALES, CANCEL_SALES, TAX, SUBORDER_MRP, CATEGORY, DISCOUNT, SELLING_PRICE, MRP_SALES, DISCOUNT_MRP, NEW_CUSTOMER_FLAG, WAREHOUSE_NAME, DAYS_IN_SHIPMENT, CHANNEL, PAYMENT_MODE, IMPORT_DATE, LAST_UPDATE_DATE, MAPPING_SKU from LILGOODNESS_DB.maplemonk.SALES_CONSOLIDATED_LG where not(lower(marketplace) like any (\'%b2b%\',\'%offline%\')) union all select SHOP_NAME ,null as Carrier_ID ,null as Courier ,null as Customer_name ,null as Email ,null as Phone ,\'Flipkart\' as Marketplace ,null as Marketplace_ID ,ORDER_ID ,ORDER_ITEM_ID ,BUYER_INVOICE_ID ,ORDER_ID ,null as Manifest_Date ,null as Shipping_Last_Update_date ,null as Shipping_Status ,SKU ,null as SKU_Type ,FSN ,PRODUCT_NAME_PER_PLATFORM ,null as Currency ,case when lower(FINAL_ORDER_STATUS) like (\'%return%\') then 1 end Return_Flag ,null as City ,DELIVERY_STATE ,FINAL_ORDER_STATUS ,ORDER_DATE ,SHIPPING_CHARGES ,null as Number_of_products_in_combo ,ITEM_QUANTITY ,null as shipped_quantity ,case when lower(FINAL_ORDER_STATUS) like (\'%return%\') then ITEM_QUANTITY end RETURNED_QUANTITY ,case when lower(FINAL_ORDER_STATUS) like (\'%cancel%\') then ITEM_QUANTITY end CANCEL_QUANTITY ,case when lower(FINAL_ORDER_STATUS) like (\'%return%\') then FINAL_INVOICE_AMOUNT end RETURN_SALES ,case when lower(FINAL_ORDER_STATUS) like (\'%cancel%\') then FINAL_INVOICE_AMOUNT end CANCEL_SALES ,CST_AMOUNT+TDS_AMOUNT+VAT_AMOUNT+CGST_AMOUNT+IGST_AMOUNT ,PRICE_BEFORE_DISCOUNT ,null as category ,PRICE_AFTER_DISCOUNT-PRICE_BEFORE_DISCOUNT ,FINAL_INVOICE_AMOUNT ,USUAL_PRICE*ITEM_QUANTITY ,DISCOUNT_PER_PLATFORM ,null as NEW_CUSTOMER_FLAG ,null as WAREHOUSE_NAME ,null as DAYS_IN_SHIPMENT ,\'Flipkart\' as channel ,ORDER_TYPE as Payment_mode ,BUYER_INVOICE_DATE IMPORT_Date ,null as last_update_date ,MAPPING_SKU FROM lilgoodness_db.maplemonk.flipkart_fact_items_lg where order_id not in (select distinct reference_code from lilgoodness_db.maplemonk.fact_items_easy_ecom_lg where lower(marketplace) like \'%flipkart%\') union all select SHOP_NAME as SHOP_NAME ,null as CARRIER_ID ,null as COURIER ,null as CUSTOMER_NAME ,null as EMAIL ,null as PHONE ,\'BigBasket\' as MARKETPLACE ,null as MARKETPLACE_ID ,Order_ID as ORDER_ID ,Order_ID as LINE_ITEM_ID ,null as INVOICE_ID ,null as REFERENCE_CODE ,null as MANIFEST_DATE ,null as SHIPPING_LAST_UPDATE_DATE ,null as SHIPPING_STATUS ,BB_SKU as SKU ,null as SKU_TYPE ,BB_SKU as PRODUCT_ID ,null as PRODUCTNAME ,null as CURRENCY ,null as RETURN_FLAG ,CITY as CITY ,null as STATE ,null as ORDER_STATUS ,ORDER_DATE as ORDER_DATE ,null as SHIPPING_PRICE ,null as NUMBER_OF_PRODUCTS_IN_COMBO ,QUANTITY as SUBORDER_QUANTITY ,null as SHIPPED_QUANTITY ,null as RETURNED_QUANTITY ,null as CANCELLED_QUANTITY ,null as RETURN_SALES ,null as CANCEL_SALES ,null as TAX ,null as SUBORDER_MRP ,null as CATEGORY ,null as DISCOUNT ,TOTAL_SALES as SELLING_PRICE ,TOTAL_MRP_PER_PLATFORM as MRP_SALES ,null as DISCOUNT_MRP ,null as NEW_CUSTOMER_FLAG ,null as WAREHOUSE_NAME ,null as DAYS_IN_SHIPMENT ,\'BigBasket\' as CHANNEL ,null as PAYMENT_MODE ,null as IMPORT_DATE ,null as LAST_UPDATE_DATE ,MAPPING_SKU as MAPPING_SKU from lilgoodness_db.maplemonk.bigbasket_fact_items_lg union all select SHOP_NAME as SHOP_NAME ,null as CARRIER_ID ,null as COURIER ,null as CUSTOMER_NAME ,null as EMAIL ,null as PHONE ,\'Amazon Retail & Fresh\' as MARKETPLACE ,null as MARKETPLACE_ID ,Order_ID as ORDER_ID ,Order_ID as LINE_ITEM_ID ,null as INVOICE_ID ,null as REFERENCE_CODE ,null as MANIFEST_DATE ,null as SHIPPING_LAST_UPDATE_DATE ,null as SHIPPING_STATUS ,ASIN as SKU ,null as SKU_TYPE ,ASIN as PRODUCT_ID ,null as PRODUCTNAME ,null as CURRENCY ,null as RETURN_FLAG ,null as CITY ,null as STATE ,null as ORDER_STATUS ,DATE as ORDER_DATE ,null as SHIPPING_PRICE ,null as NUMBER_OF_PRODUCTS_IN_COMBO ,Ordered_Units as SUBORDER_QUANTITY ,Shipped_Units as SHIPPED_QUANTITY ,Customer_returns as RETURNED_QUANTITY ,null as CANCELLED_QUANTITY ,null as RETURN_SALES ,null as CANCEL_SALES ,null as TAX ,null as SUBORDER_MRP ,null as CATEGORY ,null as DISCOUNT ,Ordered_revenue as SELLING_PRICE ,null as MRP_SALES ,null as DISCOUNT_MRP ,null as NEW_CUSTOMER_FLAG ,null as WAREHOUSE_NAME ,null as DAYS_IN_SHIPMENT ,\'Amazon Retail and Fresh\' as CHANNEL ,null as PAYMENT_MODE ,null as IMPORT_DATE ,null as LAST_UPDATE_DATE ,MAPPING_SKU as MAPPING_SKU from lilgoodness_db.maplemonk.amazon_manufacturing_fact_items_lg ; create or replace table lilgoodness_db.maplemonk.SECONDARY_SALES_CONSOLIDATED_LG as select SC.* ,SKU_MASTER.MAPPED_SKU ,SKU_MASTER.MAPPED_SKU_TYPE ,SKU_MASTER.MAPPED_PRODUCT_NAME ,SKU_MASTER.MAPPED_CATEGORY ,SKU_MASTER.MRP MAPPED_MRP ,ifnull(try_to_double(SKU_MASTER.MRP),0)*ifnull(SC.suborder_quantity,0) as MAPPED_TOTAL_MRP_SALES ,MAPPED_TOTAL_MRP_SALES-ifnull(selling_price,0) MAPPED_TOTAL_DISCOUNT from lilgoodness_db.maplemonk.SECONDARY_SALES_CONSOLIDATED_LG SC left join (select * from (select SKU MAPPED_SKU ,SKU_TYPE MAPPED_SKU_TYPE ,PRODUCT_NAME MAPPED_PRODUCT_NAME ,CATEGORY MAPPED_CATEGORY ,MRP ,row_number() over (partition by SKU order by SKU) rw from lilgoodness_db.maplemonk.lg_sku_master ) where rw=1 ) SKU_MASTER on SC.MAPPING_SKU=SKU_MASTER.MAPPED_SKU ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from LILGOODNESS_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        