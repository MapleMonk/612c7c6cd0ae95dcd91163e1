{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE eggozdb.maplemonk.SALES_SUMMARY_Darjan AS select * ,sum(Net_Sales_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Net_Sales_Darjan from (select a.date Date ,a.area_classification Area_classification ,ifnull(b.Net_sales,0) Net_Sales_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select date ,area_classification ,sum(sales_per_item) Net_sales from ( select cast(timestampadd(minute,660,o.date) as date) Date ,o.id ,ol1.id ,rr.area_classification Area_Classification ,sum(single_sku_rate*quantity + single_sku_discount*quantity) Sales_per_item from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, o.id, ol1.id ) group by date ,area_classification) b on a.area_classification = b.area_classification and a.date = b.date ); CREATE OR REPLACE TABLE eggozdb.maplemonk.Eggs_Sold_SUMMARY_Darjan AS select * ,sum(Eggs_sold_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_sold_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_sold,0) Eggs_sold_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select date ,area_classification ,(case when eggs_sold_white is null then 0 else eggs_sold_white end) Eggs_sold_White ,((case when eggs_sold_white is null then 0 else eggs_sold_White end) + (case when eggs_sold_brown is null then 0 else eggs_sold_Brown end) + (case when eggs_sold_nutra is null then 0 else eggs_sold_Nutra end) + (case when eggs_sold_Champs is null then 0 else eggs_sold_Champs end) + (case when eggs_sold_fr is null then 0 else eggs_sold_fr end) ) as eggs_sold from ( select cast(timestampadd(minute,660,o.date) as date) Date ,rr.area_classification Area_Classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,SUM(ol1.quantity*pp.SKU_Count) Eggs_Sold from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, ( case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end ) ) pivot( sum(eggs_sold) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Date, Area_Classification, Eggs_sold_White, Eggs_sold_Brown, Eggs_sold_Nutra, Eggs_sold_Champs, Eggs_sold_fr) ) b on a.area_classification = b.Area_Classification and a.date = b.date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ); create or replace table eggozdb.maplemonk.Replacement_Summary_Darjan as select * ,sum(Eggs_replaced_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_replaced_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_replaced,0) Eggs_replaced_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select replacement_date , area_classification ,(case when eggs_replaced_white is null then 0 else eggs_replaced_white end) Eggs_Replaced_White ,(case when eggs_replaced_brown is null then 0 else eggs_replaced_Brown end) Eggs_replaced_Brown ,(case when eggs_replaced_nutra is null then 0 else eggs_replaced_Nutra end) Eggs_replaced_Nutra ,(case when eggs_replaced_fr is null then 0 else eggs_replaced_fr end) Eggs_replaced_fr ,(case when eggs_replaced_champs is null then 0 else eggs_replaced_champs end) Eggs_replaced_Champs ,((case when eggs_replaced_white is null then 0 else eggs_replaced_white end) + (case when eggs_replaced_brown is null then 0 else eggs_replaced_Brown end) + (case when eggs_replaced_Nutra is null then 0 else eggs_replaced_Nutra end) + (case when eggs_replaced_fr is null then 0 else eggs_replaced_fr end) + (case when eggs_replaced_champs is null then 0 else eggs_replaced_champs end)) as eggs_replaced from ( select date(timestampadd(minute,660,or1.date)) as Replacement_Date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.quantity* pp.sku_count) Eggs_replaced from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Replacement\') and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(eggs_replaced) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Replacement_date, area_classification, Eggs_replaced_White, Eggs_replaced_Brown, Eggs_replaced_Nutra, Eggs_replaced_Champs, Eggs_replaced_fr) ) b on a.area_classification = b.area_classification and a.date = b.replacement_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ) ; create or replace table eggozdb.maplemonk.Return_Summary_Darjan as select * ,sum(Eggs_returned_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Eggs_returned_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Eggs_returned,0) Eggs_returned_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select return_date , area_classification ,(case when eggs_returned_white is null then 0 else eggs_returned_white end) Eggs_returned_White ,(case when eggs_returned_brown is null then 0 else eggs_returned_Brown end) Eggs_returned_Brown ,(case when eggs_returned_nutra is null then 0 else eggs_returned_Nutra end) Eggs_returned_Nutra ,(case when eggs_returned_fr is null then 0 else eggs_returned_fr end) Eggs_returned_fr ,(case when eggs_returned_champs is null then 0 else eggs_returned_champs end) Eggs_returned_Champs ,((case when eggs_returned_white is null then 0 else eggs_returned_white end) + (case when eggs_returned_brown is null then 0 else eggs_returned_Brown end) + (case when eggs_returned_Nutra is null then 0 else eggs_returned_Nutra end) + (case when eggs_returned_fr is null then 0 else eggs_returned_fr end) + (case when eggs_returned_champs is null then 0 else eggs_returned_champs end)) as eggs_returned from ( select date(timestampadd(minute,660,or1.pickup_date)) as Return_Date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.quantity* pp.sku_count) Eggs_returned from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' and lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(eggs_returned) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Return_date, area_classification, Eggs_Returned_White, Eggs_Returned_Brown, Eggs_Returned_Nutra, Eggs_Returned_Champs, Eggs_Returned_fr) ) b on a.area_classification = b.area_classification and a.date = b.return_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ) ; create or replace table eggozdb.maplemonk.ReturnAmount_Summary_Darjan as select * ,sum(Amount_Return_Darjan) over (partition by area_classification,year(date), month(date) order by year (date), month(date), Date) MTD_Amount_Return_Darjan from ( select a.date Date ,a.area_classification Area_classification ,ifnull(b.Amount_Return,0) Amount_Return_Darjan from eggozdb.maplemonk.Date_area_dim a left join ( select return_date , area_classification ,(case when Amount_Return_white is null then 0 else Amount_Return_white end) Amount_Return_White ,(case when Amount_Return_brown is null then 0 else Amount_Return_Brown end) Amount_Return_Brown ,(case when Amount_Return_nutra is null then 0 else Amount_Return_Nutra end) Amount_Return_Nutra ,(case when Amount_Return_fr is null then 0 else Amount_Return_fr end) Amount_Return_fr ,(case when Amount_Return_champs is null then 0 else Amount_Return_champs end) Amount_Return_Champs ,((case when Amount_Return_white is null then 0 else Amount_Return_white end) + (case when Amount_Return_brown is null then 0 else Amount_Return_Brown end) + (case when Amount_Return_Nutra is null then 0 else Amount_Return_Nutra end) + (case when Amount_Return_fr is null then 0 else Amount_Return_fr end) + (case when Amount_Return_champs is null then 0 else Amount_Return_champs end)) as Amount_Return from ( select date(timestampadd(minute,660,or1.pickup_date)) as return_date ,rr.area_classification ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,sum(or1.amount) Amount_Return from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' and lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ) pivot( sum(Amount_Return) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (return_date, area_classification, Amount_Return_White, Amount_Return_Brown, Amount_Return_Nutra, Amount_Return_Champs, Amount_Return_fr) ) b on a.area_classification = b.area_classification and a.date = b.return_date where year(a.date)>= 2020 and year(a.date) <= year(getdate()) ) ; CREATE OR REPLACE TABLE eggozdb.maplemonk.Summary_reporting_table_Darjan as select a.date ,a.area_classification as Area ,Net_Sales_Darjan ,MTD_Net_Sales_Darjan as MTD_Net_Sales_Darjan ,eggs_sold_Darjan ,mtd_eggs_sold_Darjan ,eggs_replaced_Darjan ,mtd_eggs_replaced_Darjan ,eggs_returned_Darjan ,mtd_eggs_returned_Darjan ,Amount_Return_Darjan ,mtd_Amount_Return_Darjan ,datediff(day, date(DATE_TRUNC(\'MONTH\',a.date)), a.date) + 1 as Days_in_month from eggozdb.maplemonk.SALES_SUMMARY_Darjan a left join eggozdb.maplemonk.Replacement_Summary_Darjan c on a.area_classification = c.area_classification and a.date = c.date left join eggozdb.maplemonk.Eggs_Sold_SUMMARY_Darjan e on e.area_Classification = a.area_classification and e.date = a.date left join eggozdb.maplemonk.Return_Summary_Darjan f on a.area_classification = f.area_classification and a.date = f.date left join eggozdb.maplemonk.ReturnAmount_Summary_Darjan ra on a.area_classification = ra.area_classification and a.date = ra.date ; create or replace table eggozdb.Maplemonk.Sales_summary_beat_retailer_Darjan as select date ,area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,SKU ,name classification_name ,sum(sales_per_item) Net_sales_Darjan from ( select cast(timestampadd(minute,660,o.date) as date) Date ,o.id ,ol1.id ,rr.area_classification Area_Classification ,rr.code ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rc.name ,rr.onboarding_status ,sum(single_sku_rate*quantity + single_sku_discount*quantity) Sales_per_item ,concat(pp.sku_count,left(pp.name,1)) SKU from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = o.beat_assignment_id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' and cast(timestampadd(minute,660,o.date) as date) between \'2023-06-01\' and \'2023-06-15\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, rr.code, ba.beat_name,ba.beat_number, o.id, ol1.id, concat(pp.sku_count,left(pp.name,1)),rc.name, rr.onboarding_status,rr.beat_number ) group by date ,area_classification, beat_name, code, SKU, name, onboarding_status,beat_number_operations, beat_number_original ; create or replace table eggozdb.Maplemonk.Eggs_Sold_SUMMARY_beat_retailer_Darjan as select date ,area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,name classification_name ,SKU ,((case when eggs_sold_white is null then 0 else eggs_sold_white end) + (case when eggs_sold_brown is null then 0 else eggs_sold_Brown end) + (case when eggs_sold_Nutra is null then 0 else eggs_sold_Nutra end) + (case when eggs_sold_fr is null then 0 else eggs_sold_fr end) + (case when eggs_sold_Champs is null then 0 else eggs_sold_Champs end)) as eggs_sold_Darjan from ( select cast(timestampadd(minute,660,o.date) as date) Date ,rr.area_classification Area_Classification ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rr.code ,rc.name ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,concat(pp.sku_count,left(pp.name,1)) SKU ,SUM(ol1.quantity*pp.SKU_Count) Eggs_Sold from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = o.beat_assignment_id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by cast(timestampadd(minute,660,o.date) as date) , rr.area_classification, (case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) , ba.beat_name, ba.beat_number, rr.code, rc.name, concat(pp.sku_count,left(pp.name,1)), rr.beat_number ) pivot( sum(eggs_sold) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Date, Area_Classification, beat_name, beat_number_operations, beat_number_original, code, SKU, name, Eggs_sold_White, Eggs_sold_Brown, Eggs_sold_Nutra, Eggs_sold_Champs, Eggs_sold_fr) ; create or replace table eggozdb.maplemonk.Replacement_Summary_beat_retailer_Darjan as select replacement_date date , area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,name classification_name ,SKU ,((case when eggs_replaced_white is null then 0 else eggs_replaced_white end) + (case when eggs_replaced_brown is null then 0 else eggs_replaced_Brown end) + (case when eggs_replaced_Nutra is null then 0 else eggs_replaced_Nutra end) + (case when eggs_replaced_fr is null then 0 else eggs_replaced_fr end) + (case when eggs_replaced_Champs is null then 0 else eggs_replaced_Champs end) ) as eggs_replaced_Darjan from ( select date(timestampadd(minute,660,or1.date)) as Replacement_Date ,rr.area_classification ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rr.code ,rc.name ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,concat(pp.sku_count,left(pp.name,1)) SKU ,sum(or1.quantity* pp.sku_count) Eggs_replaced from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = or1.beat_assignment_id where line_type in (\'Replacement\') and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ,ba.beat_name, ba.beat_number, rr.beat_number ,rr.code,rc.name, concat(pp.sku_count,left(pp.name,1)) ) pivot( sum(eggs_replaced) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (Replacement_date, area_classification, beat_name, beat_number_operations, beat_number_original, SKU, code, name, Eggs_Replaced_White, Eggs_Replaced_Brown, Eggs_Replaced_Nutra, Eggs_Replaced_Champs, Eggs_Replaced_fr) ; create or replace table eggozdb.maplemonk.Return_Summary_beat_retailer_Darjan as select return_date date , area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,name classification_name ,SKU ,((case when eggs_return_white is null then 0 else eggs_return_white end) + (case when eggs_return_brown is null then 0 else eggs_return_Brown end) + (case when eggs_return_Nutra is null then 0 else eggs_return_Nutra end) + (case when eggs_return_fr is null then 0 else eggs_return_fr end) + (case when eggs_return_Champs is null then 0 else eggs_return_Champs end) ) as eggs_return_Darjan from ( select date(timestampadd(minute,660,or1.pickup_date)) as return_Date ,rr.area_classification ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rr.code ,rc.name ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,concat(pp.sku_count,left(pp.name,1)) SKU ,sum(or1.quantity* pp.sku_count) Eggs_return from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = or1.beat_assignment_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ,ba.beat_name,ba.beat_number, rr.beat_number ,rr.code, rc.name, concat(pp.sku_count,left(pp.name,1)) ) pivot( sum(eggs_return) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (return_date, area_classification, beat_name,beat_number_operations,beat_number_original, SKU, code, name, Eggs_return_White, Eggs_return_Brown, Eggs_return_Nutra, Eggs_return_Champs, Eggs_return_fr) ; create or replace table eggozdb.maplemonk.ReturnAmount_Summary_beat_retailer_Darjan as select return_date date , area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,name classification_name ,SKU ,((case when amount_return_white is null then 0 else amount_return_white end) + (case when amount_return_brown is null then 0 else amount_return_Brown end) + (case when amount_return_Nutra is null then 0 else amount_return_Nutra end) + (case when amount_return_fr is null then 0 else amount_return_fr end) + (case when amount_return_Champs is null then 0 else amount_return_Champs end) ) as amount_return_Darjan from ( select date(timestampadd(minute,660,or1.pickup_date)) as return_Date ,rr.area_classification ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rr.code ,rc.name ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) Egg_Name ,concat(pp.sku_count,left(pp.name,1)) SKU ,sum(amount) amount_return from eggozdb.maplemonk.my_sql_order_orderreturnline or1 left join eggozdb.maplemonk.my_sql_retailer_retailer rr ON or1.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left JOIN eggozdb.maplemonk.my_sql_product_product pp on pp.id = or1.product_id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = or1.beat_assignment_id where line_type in (\'Return\') and lower(pp.slug) like \'%wd%\' or lower(pp.slug) like \'%djn%\' group by rr.area_classification, date(timestampadd(minute,660,or1.pickup_date)) ,(case when pp.name like \'%White%\' then \'White\' when pp.name like \'%Brown%\' then \'Brown\' when pp.name like \'%Nutra%\' then \'Nutra\' when pp.name like \'%Champs%\' then \'Champs\' when pp.name like \'%Free Range%\' then \'FreeRange\' end) ,ba.beat_name,ba.beat_number, rr.beat_number ,rr.code, rc.name, concat(pp.sku_count,left(pp.name,1)) ) pivot( sum(amount_return) for egg_name in (\'White\', \'Brown\', \'Nutra\', \'Champs\', \'FreeRange\')) as p (return_date, area_classification, beat_name,beat_number_operations,beat_number_original, SKU, code, name, amount_return_White, amount_return_Brown, amount_return_Nutra, amount_return_Champs, amount_return_fr) ; create or replace table eggozdb.maplemonk.Darjan_With_Return_Replacement as Select aa.*, bb.Eggs_sold_Darjan,ifnull(cc.Eggs_Replaced_Darjan,0) as Eggs_Replaced_Darjan , ifnull(dd.Eggs_Return_Darjan,0) as Eggs_Return_Darjan , ifnull(ee.Amount_Return_Darjan,0) as Amount_Return_Darjan from ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area_classification AS area_classification, beat_number_original AS beat_number_original, code AS code, sku AS sku, sum(net_sales_darjan) AS Net_sales_Darjan FROM maplemonk.sales_summary_beat_retailer_darjan GROUP BY DATE_TRUNC(\'DAY\', date), area_classification, beat_number_original, code, sku )aa left join ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area_classification AS area_classification, beat_number_original AS beat_number_original, code AS code, sku AS sku, sum(eggs_sold_darjan) AS Eggs_sold_Darjan FROM maplemonk.eggs_sold_summary_beat_retailer_darjan GROUP BY DATE_TRUNC(\'DAY\', date), area_classification, beat_number_original, code, sku )bb on aa.date = bb.date and aa.area_classification = bb.area_classification and aa.beat_number_original=bb.beat_number_original and aa.code=bb.code and aa.sku = bb.sku left join ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area_classification AS area_classification, beat_number_original AS beat_number_original, code AS code, sku AS sku, sum(eggs_replaced_darjan) AS Eggs_Replaced_Darjan FROM maplemonk.replacement_summary_beat_retailer_darjan GROUP BY DATE_TRUNC(\'DAY\', date), area_classification, beat_number_original, code, sku )cc on aa.date = cc.date and aa.area_classification = cc.area_classification and aa.beat_number_original=cc.beat_number_original and aa.code=cc.code and aa.sku = cc.sku left join ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area_classification AS area_classification, beat_number_original AS beat_number_original, code AS code, sku AS sku, sum(eggs_return_darjan) AS Eggs_Return_Darjan FROM maplemonk.Return_Summary_beat_retailer_Darjan GROUP BY DATE_TRUNC(\'DAY\', date), area_classification, beat_number_original, code, sku )dd on aa.date = dd.date and aa.area_classification = dd.area_classification and aa.beat_number_original=dd.beat_number_original and aa.code=dd.code and aa.sku = dd.sku left join ( SELECT DATE_TRUNC(\'DAY\', date) AS date, area_classification AS area_classification, beat_number_original AS beat_number_original, code AS code, sku AS sku, sum(amount_return_darjan) AS Amount_Return_Darjan FROM maplemonk.ReturnAmount_Summary_beat_retailer_Darjan GROUP BY DATE_TRUNC(\'DAY\', date), area_classification, beat_number_original, code, sku )ee on aa.date = ee.date and aa.area_classification = ee.area_classification and aa.beat_number_original=ee.beat_number_original and aa.code=ee.code and aa.sku = ee.sku ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        