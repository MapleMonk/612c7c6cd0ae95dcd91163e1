{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.snitch.customer_master_view_shopify_extension as with lineitemwithc_id_temp as (select t1.*,t2.final_size_mapped , t2.product_category from (select t3.*,r_t.returns,r_t.quantity as return_quantity, case when t3.order_status = \'CANCELLED\' then t3.suborder_quantity else 0 end as cancelled_quantity from ( (select cast(t2.customer_id_final as varchar) as customer_id_final,t2.tags ,t1.*,t2.district,t2.state,t2.phone,t2.email,t2.pincode from (select * from snitch_db.snitch.ORDER_LINEITEMS_FACT)t1 left join (select * from snitch_db.snitch.ORDERS_fact )t2 on t1.order_id = t2.order_id))t3 left join (select order_id,sku,sum(quantity) as quantity , \'True\' as returns from snitch_db.snitch.customer_returns_dim group by order_id,sku) r_t on t3.order_id = r_t.order_id and t3.sku = r_t.sku)t1 left join (select distinct sku ,final_size_mapped,product_category from snitch_db.snitch.product_dim)t2 on t1.sku = t2.sku ), lineitemwithc_id as( select * from lineitemwithc_id_temp where source_channel = \'SHOPIFY\' and lower(ifnull(discount_code,\'n\')) not like \'%eco%\' and lower(ifnull(discount_code,\'n\')) not like \'%influ%\' and order_name not in (\'2431093\',\'2422140\',\'2425364\',\'2430652\',\'2422237\',\'2420623\',\'2429832\',\'2422378\',\'2428311\',\'2429064\',\'2428204\',\'2421343\',\'2431206\',\'2430491\',\'2426682\',\'2426487\',\'2426458\',\'2423575\',\'2422431\',\'2423612\',\'2426625\',\'2428117\',\'2426894\',\'2425461\',\'2426570\',\'2423455\',\'2430777\',\'2426009\',\'2428245\',\'2427269\',\'2430946\',\'2425821\',\'2429986\',\'2429085\',\'2422047\',\'2430789\',\'2420219\',\'2428341\',\'2430444\',\'2426866\',\'2431230\',\'2425839\',\'2430980\',\'2427048\',\'2430597\',\'2420499\',\'2431050\',\'2420271\',\'2426684\',\'2428747\',\'2423523\',\'2431171\',\'2430830\',\'2425325\',\'2428414\',\'2429054\',\'2423596\') and tags not in (\'FLITS_LOGICERP\') ) select c_d.shopify_customer_id as \"identity\", t0.pincode as \"Pincode\", t0.city as \"District\", t0.state as \"State_name\", CONCAT(\'+91\',RIGHT(REGEXP_REPLACE(t0.phone, \'[^a-zA-Z0-9]+\', \'\'), 10)) AS \"Phone\", t0.email as \"Email\", c_d.first_name as \"First_name\", c_d.last_name as \"Last_name\", t1.first_order_date as \"First_order_date\", t1.last_order_date as \"Last_order_date\" , COALESCE(l1_s.orders,0) as Last1_months_orders, COALESCE(l3_s.orders,0) as Last3_months_orders , COALESCE(l6_s.orders,0) as Last6_months_orders , COALESCE(l12_s.orders,0) as Last12_months_orders , COALESCE(Average_Time_Duration_Between_Purchase,0) as Average_Time_Duration_Between_Purchase, COALESCE(Time_Between_1_2_order,0) as Time_Between_1_2_order, COALESCE(Time_Between_2_3_order,0) as Time_Between_2_3_order, COALESCE(net_t2.orders,0) as \"Net_orders\", COALESCE(net_t2.units,0) as \"Net_units\", COALESCE(net_t2.sales,0) as \"Total_revenue\", COALESCE(net_av.Average_Purchase_Value,0) as net_AOV, p_r.return_percentage as \"Return_percentage\", p_d.discount_percentage as \"Discount%\", p_c.cancel_percentage as \"Cancel_percentage\", COALESCE(t1.total_discount,0) as \"Total_discount\", f_s.final_size_mapped as Recommended_size, m_o_p.cod_percentage as Cod_percentage, m_o_p.prepaid_percentage as Prepaid_percentage, f_p.product_id as Frequently_purchased_productCategory , f_p.sku_group as Frequently_purchased_sku_group, COALESCE(a_p.Average_Purchase_Value,0) as Average_selling_price, from (select distinct customer_id_final,max(ifnull(phone,\'\'))phone,max(ifnull(pincode,\'\'))pincode ,max(ifnull(email,\'\'))email,max(ifnull(district,\'\'))city,max(ifnull(state,\'\'))state from lineitemwithc_id group by 1)t0 left join (select customer_id_final,min(order_date::date) as first_order_date,max(order_date::date) as last_order_date,sum(discount) as total_discount from lineitemwithc_id where order_status != \'CANCELLED\' group by customer_id_final)t1 on t0.customer_id_final = t1.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id group by customer_id_final) t2 on t0.customer_id_final = t2.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where not(order_status = \'CANCELLED\' and returns = \'True\') group by customer_id_final) net_t2 on t0.customer_id_final = net_t2.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_status = \'CANCELLED\' group by customer_id_final)t_c on t0.customer_id_final = t_c.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(return_quantity) as units ,sum(div0(selling_price,suborder_quantity)*return_quantity) as sales from lineitemwithc_id where returns = \'True\' group by customer_id_final)t_r on t0.customer_id_final = t_r.customer_id_final left join (select customer_id_final,product_category as product_id,sku_group as sku_group from (SELECT customer_id_final, product_id, sku_group, product_category, count(*) as total_count, row_number() OVER (PARTITION BY customer_id_final ORDER BY sum(shipping_quantity) DESC) AS row_number FROM lineitemwithc_id GROUP BY customer_id_final, product_id,sku_group,product_category order by customer_id_final,4) where row_number = 1)f_p on t0.customer_id_final = f_p.customer_id_final left join (select customer_id_final,avg(selling_price) as Average_Purchase_Value from lineitemwithc_id where order_status !=\'CANCELLED\' group by customer_id_final)a_p on t0.customer_id_final = a_p.customer_id_final left join (select customer_id_final,avg(selling_price) as Average_Purchase_Value from lineitemwithc_id where not(order_status = \'CANCELLED\' and returns = \'True\') group by customer_id_final) net_av on t0.customer_id_final = net_av.customer_id_final left join (SELECT customer_id_final, sku AS first_order_highest_sku FROM ( SELECT customer_id_final, sku, ROW_NUMBER() OVER (PARTITION BY customer_id_final ORDER BY selling_price DESC) AS row_number FROM ( SELECT * FROM lineitemwithc_id_temp o INNER JOIN ( SELECT customer_id_final AS c_id, MIN(order_date) AS first_order_date FROM lineitemwithc_id_temp WHERE order_status != \'CANCELLED\' GROUP BY customer_id_final ) t ON o.customer_id_final::varchar = t.c_id::varchar AND o.order_date = t.first_order_date ) ) WHERE row_number = 1)f_o_hc on t0.customer_id_final::varchar = f_o_hc.customer_id_final::varchar left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_date >= (SELECT (MAX(order_date) - INTERVAL \'30 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l1_s on t0.customer_id_final = l1_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_date >= (SELECT (MAX(order_date) - INTERVAL \'90 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l3_s on t0.customer_id_final = l3_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_status = \'CANCELLED\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'90 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l3_c on t0.customer_id_final = l3_c.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(return_quantity) as units ,sum(div0(selling_price,suborder_quantity)*return_quantity) as sales from lineitemwithc_id where returns = \'True\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'90 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l3_r on t0.customer_id_final = l3_r.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_date >= (SELECT (MAX(order_date) - INTERVAL \'180 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l6_s on t0.customer_id_final = l6_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_status = \'CANCELLED\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'180 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l6_c on t0.customer_id_final = l6_c.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(return_quantity) as units ,sum(div0(selling_price,suborder_quantity)*return_quantity) as sales from lineitemwithc_id where returns = \'True\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'180 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l6_r on t0.customer_id_final = l6_r.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_date >= (SELECT (MAX(order_date) - INTERVAL \'365 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l12_s on t0.customer_id_final = l12_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where order_status = \'CANCELLED\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'365 days\')::DATE FROM lineitemwithc_id) group by customer_id_final) l12_c on t0.customer_id_final = l12_c.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(return_quantity) as units ,sum(div0(selling_price,suborder_quantity)*return_quantity) as sales from lineitemwithc_id where returns = \'True\' and order_date >= (SELECT (MAX(order_date) - INTERVAL \'365 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)l12_r on t0.customer_id_final = l12_r.customer_id_final left join (select customer_id_final,primary_payment_type from (SELECT customer_id_final, primary_payment_type, count(*) as total_count, row_number() OVER (PARTITION BY customer_id_final ORDER BY count(primary_payment_type) DESC) AS row_number FROM lineitemwithc_id GROUP BY customer_id_final, primary_payment_type order by customer_id_final,4) where row_number = 1) p_p on t0.customer_id_final = p_p.customer_id_final left join (select customer_id_final,div0(sum(IFNULL(return_quantity, 0)), sum(ifnull(suborder_quantity,0)))*100 as return_percentage from lineitemwithc_id where order_status != \'CANCELLED\' group by customer_id_final)p_r on t0.customer_id_final = p_r.customer_id_final left join (select customer_id_final,div0(sum(IFNULL(discount, 0)), sum(ifnull(mrp,0)))*100 as discount_percentage from lineitemwithc_id group by customer_id_final)p_d on t0.customer_id_final = p_d.customer_id_final left join (select customer_id_final, div0(sum(cancelled_quantity),sum(suborder_quantity))*100 as cancel_percentage from lineitemwithc_id group by customer_id_final)p_c on t0.customer_id_final = p_c.customer_id_final left join (select customer_id_final,final_size_mapped from (SELECT customer_id_final, final_size_mapped, count(*) as total_count, row_number() OVER (PARTITION BY customer_id_final ORDER BY sum(shipping_quantity) DESC) AS row_number FROM lineitemwithc_id where order_status != \'CANCELLED\' GROUP BY customer_id_final, final_size_mapped order by customer_id_final) where row_number = 1)f_s on t0.customer_id_final = f_s.customer_id_final left join (SELECT customer_id_final, (SUM(CASE WHEN mode_of_payment = \'COD\' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS cod_percentage, (SUM(CASE WHEN mode_of_payment = \'Prepaid\' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS prepaid_percentage from lineitemwithc_id where order_status != \'CANCELLED\' group by customer_id_final) m_o_p on t0.customer_id_final = m_o_p.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where not(order_status = \'CANCELLED\' and returns = \'True\') and order_date >= (SELECT (MAX(order_date) - INTERVAL \'90 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)net_l3_s on t0.customer_id_final = net_l3_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where not(order_status = \'CANCELLED\' and returns = \'True\') and order_date >= (SELECT (MAX(order_date) - INTERVAL \'180 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)net_l6_s on t0.customer_id_final = net_l6_s.customer_id_final left join (select customer_id_final,count(distinct order_id) as orders,sum(suborder_quantity) as units ,sum(selling_price) as sales from lineitemwithc_id where not(order_status = \'CANCELLED\' and returns = \'True\') and order_date >= (SELECT (MAX(order_date) - INTERVAL \'365 days\')::DATE FROM lineitemwithc_id) group by customer_id_final)net_l12_s on t0.customer_id_final = net_l12_s.customer_id_final left join ( select customer_id_final, avg(DATEDIFF(day, order_date, next_order_date)) Average_Time_Duration_Between_Purchase from (select distinct customer_id_final ,order_date::date as order_date ,LAG(order_date::date, 1) OVER (partition by customer_id_final ORDER BY order_date::date desc) AS next_order_date from lineitemwithc_id )where next_order_date is not null group by 1 )avg_time_p on t0.customer_id_final = avg_time_p.customer_id_final left join ( select customer_id_final ,DATEDIFF(day, order_date, next_order_date) Time_Between_1_2_order from (select distinct customer_id_final ,order_date::date as order_date ,LAG(order_date::date, 1) OVER (partition by customer_id_final ORDER BY order_date::date desc) AS next_order_date ,row_number() over(partition by customer_id_final order by order_date::date ASC ) rw from lineitemwithc_id )where next_order_date is not null and rw = 1 )first_second_order on t0.customer_id_final = first_second_order.customer_id_final left join ( select customer_id_final ,DATEDIFF(day, order_date, next_order_date) Time_Between_2_3_order from (select distinct customer_id_final ,order_date::date as order_date ,LAG(order_date::date, 1) OVER (partition by customer_id_final ORDER BY order_date::date desc) AS next_order_date ,row_number() over(partition by customer_id_final order by order_date::date ASC ) rw from lineitemwithc_id )where next_order_date is not null and rw = 2 )second_third_order on t0.customer_id_final = second_third_order.customer_id_final left join ( select * from ( select * ,row_number() over(partition by customer_id_final order by ifnull(phone,\'\'),ifnull(name,\'\'),ifnull(email,\'\')) rw from snitch_db.snitch.customer_dim_all where lower(source) like \'%shopify%\' )where rw=1 )c_d on t0.customer_id_final = c_d.customer_id_final ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        