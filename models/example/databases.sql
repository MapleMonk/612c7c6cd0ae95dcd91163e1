{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table vahdam_db.maplemonk.All_amazon_payment_reports_local_cur as (select coalesce(a.DATE , ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'USD\' as Currency ,\'Amazon US\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,SUM(IFNULL(OTHER_SALES,0)) AS OTHER_SALES ,SUM(IFNULL(TOTAL_ADJUSTMENT_QTY,0)) AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_MARKETING_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,SUM(IFNULL(FBA_DISPOSAL_FEE,0)) AS FBA_DISPOSAL_FEE ,SUM(IFNULL(FBA_REMOVAL_FEE,0)) AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.Amazon_USA_Budget_Comparison_Vahdam a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_na_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE , ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'INR\' as Currency ,\'Amazon IN\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,SUM(IFNULL(OTHER_SALES,0)) AS OTHER_SALES ,SUM(IFNULL(TOTAL_ADJUSTMENT_QTY,0)) AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_MARKETING_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,SUM(IFNULL(FBA_DISPOSAL_FEE,0)) AS FBA_DISPOSAL_FEE ,SUM(IFNULL(FBA_REMOVAL_FEE,0)) AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.Amazon_IN_Budget_Comparison_Vahdam a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_IN_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE , ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'CAD\' as Currency ,\'Amazon CA\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,SUM(IFNULL(OTHER_SALES,0)) AS OTHER_SALES ,SUM(IFNULL(TOTAL_ADJUSTMENT_QTY,0)) AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,SUM(IFNULL(FBA_DISPOSAL_FEE,0)) AS FBA_DISPOSAL_FEE ,SUM(IFNULL(FBA_REMOVAL_FEE,0)) AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_CA_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_ca_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE , ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'GBP\' as Currency ,\'Amazon UK\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,SUM(IFNULL(OTHER_SALES,0)) AS OTHER_SALES ,SUM(IFNULL(TOTAL_ADJUSTMENT_QTY,0)) AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,SUM(IFNULL(FBA_DISPOSAL_FEE,0)) AS FBA_DISPOSAL_FEE ,SUM(IFNULL(FBA_REMOVAL_FEE,0)) AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_UK_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_uk_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'EUR\' as Currency ,\'Amazon DE\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,SUM(IFNULL(OTHER_SALES,0)) AS OTHER_SALES ,SUM(IFNULL(TOTAL_ADJUSTMENT_QTY,0)) AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,SUM(IFNULL(FBA_DISPOSAL_FEE,0)) AS FBA_DISPOSAL_FEE ,SUM(IFNULL(FBA_REMOVAL_FEE,0)) AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_DE_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_de_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'EUR\' as Currency ,\'Amazon FR\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,0 AS OTHER_SALES ,0 AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,0 AS FBA_DISPOSAL_FEE ,0 AS FBA_REMOVAL_FEE ,0 AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_FR_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_fr_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'EUR\' as Currency ,\'Amazon ES\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,0 AS OTHER_SALES ,0 AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,0 AS FBA_DISPOSAL_FEE ,0 AS FBA_REMOVAL_FEE ,0 AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_ES_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_esp_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'JPY\' as Currency ,\'Amazon JP\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,0 AS OTHER_SALES ,0 AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,0 AS FBA_DISPOSAL_FEE ,0 AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_JP_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_jp_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'AUD\' as Currency ,\'Amazon AU\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,0 AS OTHER_SALES ,0 AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,0 AS FBA_DISPOSAL_FEE ,0 AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_AUS_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_aus_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 UNION ALL select coalesce(a.DATE,ly.date) as DATE ,coalesce(a.ASIN, ly.asin_new) as ASIN ,WEIGHT ,BRAND ,\"Mother SKU\" ,\"Common Name\" ,CATEGORY ,\"SUB CATEGORY\" ,\"LOOSE/TEA BAG/ POWDER\" ,\"Common SKU Description\" ,\"COMMON SKU ID\" ,\'AED\' as Currency ,\'Amazon UAE\' as Marketplace ,sum(ifnull(SALES,0)) SALES ,0 AS OTHER_SALES ,0 AS TOTAL_ADJUSTMENT_QTY ,sum(ifnull(ly.sales_usd,0)) LY_SALES ,sum(ifnull(ly.SPEND,0)) LY_SPEND ,sum(ifnull(QUANTITY_SOLD,0)) QUANTITY_SOLD ,sum(ifnull(REFUND_QUANITY,0)) REFUND_QUANITY ,sum(ifnull(UNITS,0)) UNITS ,sum(ifnull(COMMISSION,0)) COMMISSION ,sum(ifnull(FBA_FEES,0)) FBA_FEES ,sum(ifnull(TOTAL_AMAZON_SPEND,0)) TOTAL_MARKETING_SPEND ,sum(ifnull(PER_UNIT_COGS,0)) PER_UNIT_COGS ,sum(ifnull(Add_Per_unit_Outbound,0)) Add_Per_unit_Outbound ,sum(ifnull(PER_UNIT_OUTBOUND,0)) PER_UNIT_OUTBOUND ,sum(ifnull(BUDGET_ASP,0)) BUDGET_ASP ,sum(ifnull(DAILY_BUDGET_UNITS,0)) DAILY_BUDGET_UNITS ,sum(ifnull(DAILY_BUDGET_REVENUE,0)) DAILY_BUDGET_REVENUE ,sum(ifnull(DAILY_BUDGET_COGS,0)) DAILY_BUDGET_COGS ,sum(ifnull(DAILY_BUDGET_COMMISSION,0)) DAILY_BUDGET_COMMISSION ,sum(ifnull(DAILY_BUDGET_OUTBOUND,0)) DAILY_BUDGET_OUTBOUND ,sum(ifnull(DAILY_BUDGET_STORAGE,0)) DAILY_BUDGET_STORAGE ,sum(ifnull(DAILY_BUDGET_FBA,0)) DAILY_BUDGET_FBA ,sum(ifnull(DAILY_BUDGET_PM_SPEND,0)) DAILY_BUDGET_PM_SPEND ,sum(ifnull(DAILY_BUDGET_CM2,0)) DAILY_BUDGET_CM2 ,sum(ifnull(DAILY_BUDGET_CM1,0)) DAILY_BUDGET_CM1 ,sum(ifnull(Daily_Budget_Revenue_INR,0)) Daily_Budget_Revenue_INR ,sum(ifnull(Daily_Budget_COGS_INR,0)) Daily_Budget_COGS_INR ,sum(ifnull(Daily_Budget_Commission_INR,0)) Daily_Budget_Commission_INR ,sum(ifnull(Daily_Budget_Outbound_INR,0)) Daily_Budget_Outbound_INR ,sum(ifnull(Daily_Budget_Storage_INR,0)) Daily_Budget_Storage_INR ,sum(ifnull(Daily_Budget_FBA_INR,0)) Daily_Budget_FBA_INR ,sum(ifnull(Daily_Budget_CM1_INR,0)) Daily_Budget_CM1_INR ,sum(ifnull(Daily_Budget_PM_SPEND_INR,0)) Daily_Budget_PM_SPEND_INR ,sum(ifnull(Daily_Budget_CM2_INR,0)) Daily_Budget_CM2_INR ,0 AS FBA_DISPOSAL_FEE ,0 AS FBA_REMOVAL_FEE ,SUM(IFNULL(STSF,0))+ SUM(IFNULL(LTSF,0)) AS PR_STORAGE_FEES from vahdam_db.maplemonk.ASP_UAE_ASIN_Payment_Reports_Budget_Tracking a left join (select date,asin_new, sum(sales_usd) as sales_usd, sum(spend) as SPEND from vahdam_db.maplemonk.amazonads_uae_marketing group by 1,2) ly on ly.date::date = dateadd(year,-1, a.date)::date and lower(a.ASIN) = lower(ly.asin_new) group by 1,2,3,4,5,6,7,8,9,10,11 ); create or replace table vahdam_db.maplemonk.All_amazon_payment_reports_local_cur_Conv_temp as select pr.*, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.SALES * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.SALES WHEN pr.CURRENCY = \'USD\' THEN pr.SALES * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.SALES * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.SALES * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.SALES * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.SALES * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.SALES * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.SALES * EX.AED_INR END AS SALES_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.OTHER_SALES * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.OTHER_SALES WHEN pr.CURRENCY = \'USD\' THEN pr.OTHER_SALES * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.OTHER_SALES * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.OTHER_SALES * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.OTHER_SALES * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.OTHER_SALES * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.OTHER_SALES * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.OTHER_SALES * EX.AED_INR END AS OTHER_SALES_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.LY_SALES * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.LY_SALES WHEN pr.CURRENCY = \'USD\' THEN pr.LY_SALES * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.LY_SALES * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.LY_SALES * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.LY_SALES * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.LY_SALES * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.LY_SALES * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.LY_SALES * EX.AED_INR END AS LY_SALES_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.LY_SPEND * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.LY_SPEND WHEN pr.CURRENCY = \'USD\' THEN pr.LY_SPEND * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.LY_SPEND * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.LY_SPEND * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.LY_SPEND * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.LY_SPEND * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.LY_SPEND * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.LY_SPEND * EX.AED_INR END AS LY_SPEND_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.COMMISSION * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.COMMISSION WHEN pr.CURRENCY = \'USD\' THEN pr.COMMISSION * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.COMMISSION * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.COMMISSION * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.COMMISSION * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.COMMISSION * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.COMMISSION * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.COMMISSION * EX.AED_INR END AS COMMISSION_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.FBA_FEES * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.FBA_FEES WHEN pr.CURRENCY = \'USD\' THEN pr.FBA_FEES * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.FBA_FEES * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.FBA_FEES * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.FBA_FEES * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.FBA_FEES * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.FBA_FEES * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.FBA_FEES * EX.AED_INR END AS FBA_FEES_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.PR_STORAGE_FEES * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.PR_STORAGE_FEES WHEN pr.CURRENCY = \'USD\' THEN pr.PR_STORAGE_FEES * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.PR_STORAGE_FEES * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.PR_STORAGE_FEES * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.PR_STORAGE_FEES * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.PR_STORAGE_FEES * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.PR_STORAGE_FEES * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.PR_STORAGE_FEES * EX.AED_INR END AS PR_STORAGE_FEES_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.TOTAL_MARKETING_SPEND * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.TOTAL_MARKETING_SPEND WHEN pr.CURRENCY = \'USD\' THEN pr.TOTAL_MARKETING_SPEND * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.TOTAL_MARKETING_SPEND * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.TOTAL_MARKETING_SPEND * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.TOTAL_MARKETING_SPEND * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.TOTAL_MARKETING_SPEND * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.TOTAL_MARKETING_SPEND * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.TOTAL_MARKETING_SPEND * EX.AED_INR END AS TOTAL_MARKETING_SPEND_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.PER_UNIT_COGS * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.PER_UNIT_COGS WHEN pr.CURRENCY = \'USD\' THEN pr.PER_UNIT_COGS * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.PER_UNIT_COGS * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.PER_UNIT_COGS * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.PER_UNIT_COGS * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.PER_UNIT_COGS * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.PER_UNIT_COGS * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.PER_UNIT_COGS * EX.AED_INR END AS PER_UNIT_COGS_INR_PRE, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.PER_UNIT_OUTBOUND * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.PER_UNIT_OUTBOUND WHEN pr.CURRENCY = \'USD\' THEN pr.PER_UNIT_OUTBOUND * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.PER_UNIT_OUTBOUND * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.PER_UNIT_OUTBOUND * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.PER_UNIT_OUTBOUND * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.PER_UNIT_OUTBOUND * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.PER_UNIT_OUTBOUND * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.PER_UNIT_OUTBOUND * EX.AED_INR END AS PER_UNIT_OUTBOUND_INR_PRE, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.Add_Per_unit_Outbound*EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.ADD_PER_UNIT_OUTBOUND WHEN pr.CURRENCY = \'USD\' THEN pr.Add_Per_unit_Outbound*EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.Add_Per_unit_Outbound*EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.Add_Per_unit_Outbound*EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.Add_Per_unit_Outbound*EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.Add_Per_unit_Outbound*EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.Add_Per_unit_Outbound*EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.Add_Per_unit_Outbound*EX.AED_INR END AS Add_Per_unit_Outbound_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.DAILY_BUDGET_REVENUE * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.DAILY_BUDGET_REVENUE WHEN pr.CURRENCY = \'USD\' THEN pr.DAILY_BUDGET_REVENUE * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.DAILY_BUDGET_REVENUE * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.DAILY_BUDGET_REVENUE * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.DAILY_BUDGET_REVENUE * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.DAILY_BUDGET_REVENUE * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.DAILY_BUDGET_REVENUE * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.DAILY_BUDGET_REVENUE * EX.AED_INR END AS DAILY_BUDGET_REVENUE_INR_CONV, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.DAILY_BUDGET_CM1 * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.DAILY_BUDGET_CM1 WHEN pr.CURRENCY = \'USD\' THEN pr.DAILY_BUDGET_CM1 * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.DAILY_BUDGET_CM1 * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.DAILY_BUDGET_CM1 * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.DAILY_BUDGET_CM1 * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.DAILY_BUDGET_CM1 * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.DAILY_BUDGET_CM1 * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.DAILY_BUDGET_CM1 * EX.AED_INR END AS DAILY_BUDGET_CM1_INR_CONV, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.DAILY_BUDGET_CM2 * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.DAILY_BUDGET_CM2 WHEN pr.CURRENCY = \'USD\' THEN pr.DAILY_BUDGET_CM2 * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.DAILY_BUDGET_CM2 * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.DAILY_BUDGET_CM2 * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.DAILY_BUDGET_CM2 * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.DAILY_BUDGET_CM2 * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.DAILY_BUDGET_CM2 * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.DAILY_BUDGET_CM2 * EX.AED_INR END AS DAILY_BUDGET_CM2_INR_CONV, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.DAILY_BUDGET_STORAGE * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.DAILY_BUDGET_STORAGE WHEN pr.CURRENCY = \'USD\' THEN pr.DAILY_BUDGET_STORAGE * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.DAILY_BUDGET_STORAGE * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.DAILY_BUDGET_STORAGE * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.DAILY_BUDGET_STORAGE * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.DAILY_BUDGET_STORAGE * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.DAILY_BUDGET_STORAGE * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.DAILY_BUDGET_STORAGE * EX.AED_INR END AS DAILY_BUDGET_STORAGE_INR_CONV, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.FBA_DISPOSAL_FEE * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.FBA_DISPOSAL_FEE WHEN pr.CURRENCY = \'USD\' THEN pr.FBA_DISPOSAL_FEE * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.FBA_DISPOSAL_FEE * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.FBA_DISPOSAL_FEE * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.FBA_DISPOSAL_FEE * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.FBA_DISPOSAL_FEE * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.FBA_DISPOSAL_FEE * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.FBA_DISPOSAL_FEE * EX.AED_INR END AS FBA_DISPOSAL_FEE_INR, CASE WHEN pr.CURRENCY = \'EUR\' THEN pr.FBA_REMOVAL_FEE * EX.EUR_INR WHEN pr.CURRENCY = \'INR\' THEN pr.FBA_REMOVAL_FEE WHEN pr.CURRENCY = \'USD\' THEN pr.FBA_REMOVAL_FEE * EX.USD_INR WHEN pr.CURRENCY = \'GBP\' THEN pr.FBA_REMOVAL_FEE * EX.GBP_INR WHEN pr.CURRENCY = \'AUD\' THEN pr.FBA_REMOVAL_FEE * EX.AUD_INR WHEN pr.CURRENCY = \'JPY\' THEN pr.FBA_REMOVAL_FEE * EX.JPY_INR WHEN pr.CURRENCY = \'SGD\' THEN pr.FBA_REMOVAL_FEE * EX.SGD_INR WHEN pr.CURRENCY = \'CAD\' THEN pr.FBA_REMOVAL_FEE * EX.CAD_INR WHEN pr.CURRENCY = \'AED\' THEN pr.FBA_REMOVAL_FEE * EX.AED_INR END AS FBA_REMOVAL_FEE_INR from vahdam_db.maplemonk.All_amazon_payment_reports_local_cur pr LEFT JOIN( SELECT date, RATES:INR AS EUR_INR, (RATES:EUR/RATES:USD)*RATES:INR AS USD_INR, (RATES:EUR/RATES:GBP)*RATES:INR AS GBP_INR, (RATES:EUR/RATES:AUD)*RATES:INR AS AUD_INR, (RATES:EUR/RATES:JPY)*RATES:INR AS JPY_INR, (RATES:EUR/RATES:SGD)*RATES:INR AS SGD_INR, (RATES:EUR/RATES:CAD)*RATES:INR AS CAD_INR, (RATES:EUR/RATES:AED)*RATES:INR AS AED_INR FROM( SELECT *, ROW_NUMBER()OVER(PARTITION BY BASE, DATE ORDER BY _AIRBYTE_EMITTED_AT DESC) RW FROM VAHDAM_DB.MAPLEMONK.EXCHANGE_RATES ) A WHERE RW = 1 ) EX ON pr.date::DATE = EX.date; create or replace table vahdam_db.maplemonk.All_amazon_payment_reports_local_cur_Conv as select *, case when PER_UNIT_COGS_INR_PRE = 0 then div0(SALES_INR,quantity_sold)*0.20 else PER_UNIT_COGS_INR_PRE end as PER_UNIT_COGS_INR ,case when PER_UNIT_OUTBOUND_INR_PRE = 0 then div0(SALES_INR,quantity_sold)*0.05 else PER_UNIT_OUTBOUND_INR_PRE end as PER_UNIT_OUTBOUND_INR FROM vahdam_db.maplemonk.All_amazon_payment_reports_local_cur_Conv_temp",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from VAHDAM_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        