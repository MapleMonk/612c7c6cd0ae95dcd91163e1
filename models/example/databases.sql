{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table rpsg_DB.maplemonk.custom_ltv_metric_drv as with L3_6M_Calculations as ( select order_month, count(distinct customer_id_final) customers_purchased, avg(lifespan) avg_lifespan, avg(div0(last_6m_sales,last_6m_orders)) avg_last_6m_aov, avg(div0(last_6m_orders,least(6,lifespan))) avg_last_6m_frequency, avg(div0(last_12m_sales,last_12m_orders)) avg_last_12m_aov, avg(div0(last_12m_orders,least(12,lifespan))) avg_last_12m_frequency, avg_lifespan*avg_last_6m_aov*avg_last_6m_frequency last_6m_LTV, avg_lifespan*avg_last_12m_aov*avg_last_12m_frequency last_12m_LTV from ( select c.customer_id_final, c.ordeR_month, case when c.months_from_acquisition = 0 then 1 else c.months_from_acquisition end lifespan, c.last_6m_sales, c.last_6m_orders, sum(sales) last_12m_sales, sum(orders) last_12m_orders from ( select a.customer_id_final, a.order_month::date order_month, a.months_from_acquisition, sum(b.sales) last_6m_sales, sum(b.orders) last_6m_orders from (select distinct customer_id_final , date_trunc(\'month\',order_date) order_month , months_from_acquisition from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV where (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) and lower(marketplace) like any (\'%shopify%\', \'%woocommerce%\') ) a left join (select customer_id_final , date_trunc(\'month\',order_date) order_month , sum(selling_price) sales , count(distinct order_id) orders from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV where (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) and lower(marketplace) like any (\'%shopify%\', \'%woocommerce%\') group by 1,2 ) b on datediff(month, b.order_month, a.order_month) <=6 and a.customer_id_final = b.customer_id_final group by 1,2,3 ) c left join (select customer_id_final , date_trunc(\'month\',order_date) order_month , sum(selling_price) sales , count(distinct order_id) orders from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV where (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) and lower(marketplace) like any (\'%shopify%\', \'%woocommerce%\') group by 1,2 ) d on datediff(month, d.order_month, c.order_month) <=12 and c.customer_id_final = d.customer_id_final group by 1,2,3,4,5 ) group by 1 ), Lifetime_Calculation as ( select order_month, count(distinct customer_id_final) customers, avg(orders) Avg_Orders_Per_Customer, avg(AOV) Avg_Order_Value, avg(lifetime) Avg_life_time, avg(sales) Avg_Sales_Per_Customer, avg(orders)*avg(AOV)*avg(lifetime) CLTV from ( select a.order_month, a.customer_id_final customer_id_final, b.customer_id_final customer_id_final2, sum(orders) orders, sum(sales) sales, div0(sum(sales),sum(orders)) AOV, max(lifetime) lifetime from (select a.order_month , b.customer_id_final from (select distinct date_trunc(\'month\',order_date::date) order_month from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV ) a cross join (select distinct customer_id_final from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV where (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) and lower(marketplace) like any (\'%shopify%\', \'%woocommerce%\') ) b ) a left join ( select date_trunc(\'month\',order_date::date) order_month, customer_id_final, count(distinct order_id) orders, sum(selling_price) sales, max(case when months_from_acquisition = 0 then 1 else months_from_acquisition end) lifetime from rpsg_DB.maplemonk.SALES_CONSOLIDATED_DRV where (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) and lower(marketplace) like any (\'%shopify%\', \'%woocommerce%\') group by 1,2 ) b on a.order_month >= b.order_month and a.customer_id_final = b.customer_id_final group by 1,2,3 ) where customer_id_final2 is not null group by 1 ) Select a.order_month ,a.customers Lifetime_Customers ,a.Avg_Orders_Per_Customer LT_Avg_Orders_Per_Customer ,a.Avg_Order_Value LT_Avg_Order_Values ,a.Avg_life_time ,a.Avg_Sales_Per_Customer LT_Avg_Sales_Per_Customer ,a.CLTV ,b.customers_purchased ,b.avg_lifespan avg_lifespan_of_purchase_customers ,b.avg_last_6m_aov ,b.avg_last_6m_frequency ,b.avg_last_12m_aov ,b.avg_last_12m_frequency ,b.last_6m_LTV ,b.last_12m_LTV from Lifetime_Calculation a left join L3_6M_Calculations b on a.order_month = b.order_month;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from RPSG_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        