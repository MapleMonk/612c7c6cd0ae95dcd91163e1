{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.maplemonk.Customer_DIM_TEMP as select \'unicommerce\' as source_channel, order_id, source, name as first_name, null as last_name, name, phone, email, address_line_1, address_line_2, country, state, city, pincode, null as shopify_customer_id, order_Date as latest_information_Date from ( select replace(saleorderdto:code,\'\"\',\'\') as order_id,case when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%ajio%\' then \'AJIO\' when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%myntra%\' then \'MYNTRA\' when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%fynd%\' then \'FYND\' when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%amazon%\' then \'AMAZON\' when lower(replace(saleorderdto:channel,\'\"\',\'\')) like \'%flipkart%\' then \'FLIPKART\' else replace(saleorderdto:channel,\'\"\',\'\') end as source, replace(saleorderdto:billingAddress:addressLine1,\'\"\',\'\') address_line_1, replace(saleorderdto:billingAddress:addressLine2,\'\"\',\'\') address_line_2, replace(saleorderdto:billingAddress:phone,\'\"\',\'\') as phone, replace(saleorderdto:billingAddress:name,\'\"\',\'\') as name, saleorderdto:billingAddress:email::varchar as email, replace(saleorderdto:billingAddress:city,\'\"\',\'\') as city, replace(saleorderdto:billingAddress:state,\'\"\',\'\') as state, replace(saleorderdto:billingAddress:country,\'\"\',\'\') as country, replace(saleorderdto:billingAddress:pincode,\'\"\',\'\') as pincode, date(CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',saleorderdto:displayOrderDateTime,\'1970-01-01\'))) as order_date, row_number() over (partition by source, address_line_1, address_line_1, phone, name, email, city, state, country, pincode order by order_Date desc) rw from snitch_db.maplemonk.SNITCH_UNICOMMERCE_GET_ORDERS_BY_IDS_TEST, LATERAL FLATTEN (INPUT => saleorderdto:saleOrderItems)A where replace(saleorderdto:displayOrderCode,\'\"\',\'\') not in (select distinct name from Snitch_db.maplemonk.shopifyindia_orders) ) where rw = 1 union all select \'logicerp\' as source_channel, null as order_id, source, name as first_name, null as last_name, name, phone, email, address_line_1, address_line_2, country, state, city, pincode, null as shopify_customer_id, latest_information_Date from ( select Branch_Name::varchar as source, retail_cust_name::varchar as name, retail_cust_mobile_no::varchar as phone, retail_cust_email_id::varchar as email, null as address_line_1, null as address_line_2, null as country, null as state, null as city, null as pincode, to_date(bill_date, \'DD/MM/YYYY\') as latest_information_Date, row_number() over (partition by source, address_line_1, address_line_1, phone, name, email, city, state, country, pincode order by latest_information_Date desc) rw from snitch_db.maplemonk.LOGICERPConsolidated_GET_SALE_INVOICE, LATERAL FLATTEN (INPUT => LSTITEMS)A ) where rw = 1 union all select distinct \'shopify\' as source_channel, null as order_id, \'SHOPIFY\' as source, first_name, last_name, concat(first_name,last_name) as name, coalesce(a.phone,b.phone) phone, coalesce(a.email,b.email) email, address1 as address_line_1, address2 as address_line_2, country, state, city, zip_code as pincode, a.customer_id as shopify_customer_id, updated_date as latest_information_Date from ( select ct.ID as CUSTOMER_ID, case when ct.FIRST_NAME is null then ct.DEFAULT_ADDRESS : first_name else ct.FIRST_NAME end as FIRST_NAME, case when ct.LAST_NAME is null then ct.DEFAULT_ADDRESS : last_name else ct.LAST_NAME end as LAST_NAME, cast(ct.email as varchar) as EMAIL, coalesce(ct.phone,ct.DEFAULT_ADDRESS:phone) phone, cast(ct.TAGS as varchar) as TAGS, ct.STATE as ACCOUNT_STATUS, cast(ct.TAX_EXEMPT as boolean) as TAX_EXEMPT, ct.CURRENCY, CAST(ct.ORDERS_COUNT as int) as ORDERS_COUNT, CAST(ct.TOTAL_SPENT as float) as TOTAL_SPENT, cast(ct.VERIFIED_EMAIL as boolean) as VERIFIED_EMAIL, CAST(ct.LAST_ORDER_ID as int) as LAST_ORDER_ID, CAST(ct.LAST_ORDER_NAME as varchar) as LAST_ORDER_NAME, cast (ct.ACCEPTS_MARKETING as boolean) as ACCEPTS_MARKETING, cast (ct.ACCEPTS_MARKETING_UPDATED_AT as datetime) as ACCEPTS_MARKETING_UPDATED_AT, CAST(ct.DEFAULT_ADDRESS:address1 AS varchar) AS ADDRESS1, CAST(ct.DEFAULT_ADDRESS:address2 AS varchar) AS ADDRESS2, CAST(ct.DEFAULT_ADDRESS:country AS varchar) AS country, CAST(ct.DEFAULT_ADDRESS:country_code AS varchar) AS country_code, CAST(ct.DEFAULT_ADDRESS:province AS varchar) AS state, CAST(ct.DEFAULT_ADDRESS:province_code AS varchar) AS state_code, CAST(ct.DEFAULT_ADDRESS:city AS varchar) As city, CAST(ct.DEFAULT_ADDRESS:zip AS varchar) AS zip_code, updated_at::date as updated_date from Snitch_db.maplemonk.shopifyindia_customers ct where first_name is not null or last_name is not null union (select CUSTOMER_ID,first_name,last_name,email,phone,TAGS,ACCOUNT_STATUS,TAX_EXEMPT,CURRENCY,ORDERS_COUNT,TOTAL_SPENT,VERIFIED_EMAIL,LAST_ORDER_ID,LAST_ORDER_NAME,ACCEPTS_MARKETING,ACCEPTS_MARKETING_UPDATED_AT,address1,address2,country,country_code,state,state_code,city,zip_code, updated_date from (select e.*, row_number() over(partition by CUSTOMER_ID order by first_name ASC) as rn from (select * from (select id from Snitch_db.maplemonk.shopifyindia_customers ct where last_name is null and first_name is null ) nl inner join (select ct.ID as CUSTOMER_ID, CAST(var.value:first_name AS VARCHAR) AS first_name, CAST(var.value:last_name AS VARCHAR) AS last_name, CAST(var.value:address1 AS VARCHAR) AS address1, CAST(var.value:address2 AS VARCHAR) AS address2, coalesce(CAST(var.value:phone AS VARCHAR), phone) AS phone, coalesce(cast(ct.email as varchar),email) as EMAIL, CAST(var.value:country AS VARCHAR) AS country, CAST(var.value:country_code AS VARCHAR) AS country_code, CAST(var.value:province AS VARCHAR) AS state, CAST(var.value:province_code AS VARCHAR) AS state_code, CAST(var.value:city AS VARCHAR) AS city, CAST(var.value:zip AS VARCHAR) AS zip_code, cast(ct.TAGS as varchar) as TAGS, ct.STATE as ACCOUNT_STATUS, cast(ct.TAX_EXEMPT as boolean) as TAX_EXEMPT, ct.CURRENCY, CAST(ct.ORDERS_COUNT as int) as ORDERS_COUNT, CAST(ct.TOTAL_SPENT as float) as TOTAL_SPENT, cast(ct.VERIFIED_EMAIL as boolean) as VERIFIED_EMAIL, CAST(ct.LAST_ORDER_ID as int) as LAST_ORDER_ID, CAST(ct.LAST_ORDER_NAME as varchar) as LAST_ORDER_NAME, cast (ct.ACCEPTS_MARKETING as boolean) as ACCEPTS_MARKETING, cast (ct.ACCEPTS_MARKETING_UPDATED_AT as datetime) as ACCEPTS_MARKETING_UPDATED_AT, updated_at::date as updated_date from Snitch_db.maplemonk.shopifyindia_customers ct, lateral flatten(input => ct.ADDRESSES, outer => true) var ) rm on nl.id = rm.CUSTOMER_ID) e ) x where x.rn<=1 ) )a left join (select customer_id, email, phone from ( select replace(customer:id,\'\"\',\'\') customer_id, coalesce(email, replace(customer:email,\'\"\',\'\')) email, coalesce(phone, replace(customer:default_address:phone,\'\"\',\'\')) phone, row_number() over (partition by replace(customer:id,\'\"\',\'\') order by created_at desc) rw from snitch_db.maplemonk.shopifyindia_orders )where rw=1) b on a.customer_id = b.customer_id; create or replace table snitch_db.maplemonk.Customer_DIM_TEMP as select * from snitch_db.maplemonk.Customer_DIM_TEMP union SELECT \'SHOPIFY\' as source_channel, null as order_id , \'SHOPIFY\' as source, null as first_name, null as last_name, null as name,phone,email,null as address_line_1, null as address_line_2, null as country, null as state, null as city, null as pincode, null as shopify_customer_id, null as latest_information_Date from (SELECT * FROM ( SELECT coalesce(phone, replace(customer:default_address:phone,\'\"\',\'\')) phone, coalesce(email, replace(customer:email,\'\"\',\'\')) email FROM Snitch_db.maplemonk.Shopify_All_orders WHERE RIGHT(REGEXP_REPLACE(coalesce(phone, replace(customer:default_address:phone,\'\"\',\'\')), \'[^a-zA-Z0-9]+\', \'\'), 10) NOT IN ( SELECT RIGHT(REGEXP_REPLACE(phone, \'[^a-zA-Z0-9]+\', \'\'), 10) FROM snitch_db.maplemonk.Customer_DIM_TEMP WHERE phone IS NOT NULL and source = \'SHOPIFY\' ) ) AS Subquery WHERE lower(CAST(email AS VARCHAR)) NOT IN ( SELECT lower(CAST(email AS VARCHAR)) FROM snitch_db.maplemonk.Customer_DIM_TEMP WHERE email IS NOT NULL and source = \'SHOPIFY\' )); create or replace table snitch_db.maplemonk.Final_customerID_TEMP as with new_phone_numbers as ( select phone, contact_num, 19700000000 + row_number() over( order by contact_num asc ) as maple_monk_id from ( select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) as contact_num, phone from snitch_db.maplemonk.Customer_DIM_TEMP ) a ), int as ( select contact_num, email, coalesce(maple_monk_id,id2) as maple_monk_id from ( select contact_num, email, maple_monk_id, 19800000000+row_number() over(partition by maple_monk_id is NULL order by email asc ) as id2 from ( select distinct coalesce(p.contact_num,right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10)) as contact_num, e.email, maple_monk_id from ( select phone as contact_num, email from snitch_db.maplemonk.Customer_DIM_TEMP ) e left join new_phone_numbers p on p.contact_num = right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10) ) a ) b ) select contact_num, email, maple_monk_id from int where coalesce(contact_num,email) is not NULL; create or replace table snitch_db.maplemonk.Customer_intermediate_details_DIM as select coalesce(m.maple_monk_id_phone, d.maple_monk_id) as customer_id_final, m.* from ( select c.maple_monk_id as maple_monk_id_phone, o.* from snitch_db.maplemonk.Customer_DIM_TEMP o left join ( select * from ( select contact_num phone, maple_monk_id, row_number() over (partition by contact_num order by maple_monk_id asc) magic from snitch_db.maplemonk.Final_customerID_TEMP ) where magic =1 )c on c.phone = right(regexp_replace(o.phone, \'[^a-zA-Z0-9]+\'),10) )m left join ( select distinct maple_monk_id, email from snitch_db.maplemonk.Final_customerID_TEMP where contact_num is null )d on d.email = m.email; create or replace table snitch_db.snitch.Customer_details_DIM as select * from snitch_db.maplemonk.Customer_intermediate_details_DIM where customer_id_final not in ( select t1.customer_id_final from (select * from snitch_db.maplemonk.Customer_intermediate_details_DIM where phone is null) t1 join (select * from snitch_db.maplemonk.Customer_intermediate_details_DIM where phone is not null)t2 on t1.email=t2.email ) ; create or replace table snitch_db.snitch.Customer_DIM_ALL as select case when source_channel=\'unicommerce\' then cast(order_id as varchar) else cast(customer_id_final as varchar) end as customer_id_final, source, first_name, last_name, name, phone, email, address_line_1, address_line_2, country, state, city, pincode, shopify_customer_id, latest_information_Date from snitch_db.snitch.Customer_details_DIM ; create or replace table snitch_db.snitch.Customer_DIM as select customer_id_final, phone , email from (SELECT customer_id_final, RIGHT(REGEXP_REPLACE(phone, \'[^a-zA-Z0-9]+\', \'\'), 10) AS phone,latest_information_date,email, row_number() over(partition by customer_id_final order by phone,email ,latest_information_date DESC) as rn FROM snitch_db.snitch.Customer_details_DIM ) where rn =1",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        