{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE table if not exists prd_db.justherbs.dwh_AMAZON_FACT_ITEMS ( Customer_id varchar,Shop_name varchar,Source varchar, order_id varchar, order_name varchar, phone varchar, name varchar, email varchar, shipping_last_update_date varchar, sku varchar, product_id varchar, product_name varchar, currency varchar, city varchar, state varchar, order_status varchar, order_timestamp varchar, shipping_price float, quantity float, discount_before_tax float, tax float, total_Sales float, is_refund number(38,0), product_name_final varchar, category varchar, product_sub_category varchar) ; create table if not exists prd_db.justherbs.dwh_EasyEcom_FACT_ITEMS ( customer_id varchar, Shop_name varchar,marketplace varchar,Source varchar, order_id varchar, contact_num varchar, customer_name varchar, email varchar, shipping_last_update_date varchar, sku varchar, product_id varchar, productname varchar, currency varchar, city varchar, state varchar, order_status varchar, order_Date varchar, shipping_price float, suborder_quantity float, discount float, tax float, selling_price float, is_refund number(38,0), suborder_id variant, product_name_final varchar, product_category varchar, product_sub_category varchar, new_customer_flag varchar, shipping_status varchar, days_in_shipment varchar) ; create table if not exists prd_db.justherbs.dwh_UNICOMMERCE_FACT_ITEMS ( order_id varchar ,order_Date date ,reference_code varchar ,name varchar ,email varchar ,city varchar ,state varchar ,phone varchar ,saleorderitemcode varchar ,sales_order_item_id varchar ,shippingpackagecode varchar ,SHIPPINGPACKAGESTATUS varchar ,shipping_status varchar ,order_status varchar ,Courier varchar ,Dispatch_Date date ,Delivered_date date ,Return_flag int ,Return_quantity int ,suborder_quantity int ,cancelled_quantity int ,selling_price float ,shipping_price float ,tax float ,discount float ,shipping_last_update_date date ,days_in_shipment float ,awb varchar ,marketplace varchar ,payment_method varchar ,PAYMENT_MODE varchar ,PRODUCT_ID varchar ,SKU varchar ,SKU_CODE varchar ,currency varchar ,NEW_CUSTOMER_FLAG varchar ,product_name varchar ,mapped_product_name varchar ,product_name_final varchar ,mapped_category varchar ,product_category varchar ,mapped_sub_category varchar ,product_sub_category varchar ,warehouse_name varchar) ; create or replace table prd_db.justherbs.dwh_sales_consolidated_intermediate as select b.customer_id ,upper(b.SHOP_NAME) SHOP_NAME ,upper(b.shop_name) as marketplace ,Upper(b.FINAL_UTM_CHANNEL) AS CHANNEL ,Upper(b.FINAL_UTM_SOURCE) AS SOURCE ,b.ORDER_ID ,order_name reference_code ,b.PHONE ,b.NAME ,b.EMAIL ,coalesce(c.shipping_last_update_date::datetime, b.Shopify_Shipping_Updated_Date, d.shipping_last_update_date::datetime) AS SHIPPING_LAST_UPDATE_DATE ,b.SKU ,b.PRODUCT_ID ,Upper(b.PRODUCT_NAME) PRODUCT_NAME ,b.CURRENCY ,Upper(b.CITY) As CITY ,Upper(b.STATE) AS State ,Upper(b.ORDER_STATUS) ORDER_STATUS ,b.ORDER_TIMESTAMP::date AS Order_Date ,b.order_timestamp ,b.QUANTITY ,b.GROSS_SALES_BEFORE_TAX AS GROSS_SALES_BEFORE_TAX ,b.DISCOUNT_BEFORE_TAX AS DISCOUNT ,b.TAX ,b.SHIPPING_PRICE ,b.TOTAL_SALES AS SELLING_PRICE ,UPPER(coalesce(c.order_status,d.order_status)) as OMS_order_status ,UPPER(coalesce(c.shipping_status, b.Shopify_Shipping_Status, d.shipping_status)) AS SHIPPING_STATUS ,upper(case when lower(b.ORDER_STATUS) like \'%cancel%\' or lower(c.ORDER_STATUS) like \'%cancel%\' or lower(c.shipping_status) like \'%cancel%\' then \'CANCELLED\' else coalesce(c.shipping_status, b.Shopify_Shipping_Status, d.shipping_status) end) FINAL_SHIPPING_STATUS ,b.LINE_ITEM_ID::varchar as SALEORDERITEMCODE ,d.sales_order_item_id as SALES_ORDER_ITEM_ID ,coalesce(c.awb,b.awb,d.awb) AWB ,UPPER(b.payment_gateway_names) PAYMENT_GATEWAY ,upper(coalesce(c.payment_mode,d.payment_mode)) Payment_Mode ,Upper(coalesce(c.Courier,d.courier)) AS COURIER ,coalesce(c.manifest_date,d.dispatch_date) AS DISPATCH_DATE ,coalesce(c.delivered_date,d.delivered_date,case when b.shopify_shipping_status like \'delivered\' then b.SHOPIFY_SHIPPING_UPDATED_DATE end) AS DELIVERED_DATE ,case when lower(coalesce(c.shipping_status,b.shopify_shipping_status, d.shipping_status)) = \'delivered\' then 1 else 0 end AS DELIVERED_STATUS ,coalesce(case when b.IS_REFUND=1 and lower(b.order_status) not in (\'cancelled\') and lower(c.shipping_status) not in (\'cancelled\') then 1 end,c.IS_REFUND, d.return_flag) AS RETURN_FLAG ,case when RETURN_FLAG = 1 and lower(b.order_status) not in (\'cancelled\') and lower(c.shipping_status) not in (\'cancelled\') then ifnull(refund_quantity,0) end returned_quantity ,case when RETURN_FLAG = 1 and lower(b.order_status) not in (\'cancelled\') and lower(c.shipping_status) not in (\'cancelled\') then ifnull(refund_value,0) end returned_sales ,case when lower(b.order_status) in (\'cancelled\') or lower(c.shipping_status) like \'%cancel%\' then quantity::int end cancelled_quantity ,b.shopify_new_customer_flag as NEW_CUSTOMER_FLAG ,Upper(b.shopify_acquisition_product) as acquisition_product ,case when lower(coalesce(c.shipping_status, b.shopify_shipping_status,d.shipping_status)) in (\'delivered\',\'delivered to origin\') then datediff(day,date(b.ORDER_TIMESTAMP),date(coalesce(c.shipping_last_update_date::datetime, b.Shopify_Shipping_Updated_Date, d.shipping_last_update_date::datetime))) when lower(coalesce(c.shipping_status, b.shopify_shipping_status,d.shipping_status)) in (\'in transit\', \'shipment created\') then datediff(day,date(b.ORDER_TIMESTAMP), getdate()) end::int as Days_in_Shipment ,b.shopify_acquisition_date AS ACQUSITION_DATE ,b.SKU_CODE ,UPPER(b.PRODUCT_NAME_FINAL) PRODUCT_NAME_FINAL ,UPPER(b.PRODUCT_CATEGORY) PRODUCT_CATEGORY ,upper(b.PRODUCT_SUB_CATEGORY) PRODUCT_SUB_CATEGORY ,b.brand ,upper(c.warehouse_name) WAREHOUSE ,coalesce(b.pincode, c.pincode) pincode ,c.shipping_status easyecom_Status from prd_db.justherbs.dwh_SHOPIFY_FACT_ITEMS b left join (select * from ( select * ,row_number()over(partition by reference_code, Marketplace_LineItem_ID, suborder_id order by last_update_date desc) rw from prd_db.justherbs.EasyEcom_JH_FACT_ITEMS ) z where z.rw = 1 and lower(marketplace) like any (\'%shopify%\') ) c on lower(replace(b.order_name,\'#\',\'\')) = lower(c.reference_code) and b.LINE_ITEM_ID=c.Marketplace_LineItem_ID left join (select * from (select order_id ,city ,state ,saleorderitemcode ,sales_order_item_id ,shippingpackagecode ,SHIPPINGPACKAGESTATUS ,shipping_status ,order_status ,Courier ,Dispatch_Date ,Delivered_date ,Return_flag ,Return_quantity ,cancelled_quantity ,shipping_last_update_date ,days_in_shipment ,awb ,payment_method ,PAYMENT_MODE ,email ,row_number() over (partition by order_id, split_part(saleorderitemcode,\'-\',0) order by shipping_last_update_date desc) rw from prd_db.justherbs.dwh_UNICOMMERCE_FACT_ITEMS where lower(marketplace) like any (\'%shopify%\')) where rw=1 ) d on b.order_id=d.order_id and b.line_item_id=split_part(d.saleorderitemcode,\'-\',0) union all select Null as customer_id ,upper(b.SHOP_NAME) SHOP_NAME ,upper(marketplace) marketplace ,upper(marketplace) CHANNEL ,upper(marketplace) SOURCE ,b.ORDER_ID ,reference_code ,contact_num as PHONE ,customer_name as NAME ,email as EMAIL ,b.shipping_last_update_date AS SHIPPING_LAST_UPDATE_DATE ,b.SKU ,b.easyecom_sku PRODUCT_ID ,upper(PRODUCTNAME) AS PRODUCT_NAME ,CURRENCY ,upper(CITY) City ,upper(STATE) AS State ,upper(ORDER_STATUS) as Order_Status ,ORDER_DATE::date AS Order_Date ,ORDER_DATE ,SUBORDER_QUANTITY AS QUANTITY ,ifnull(SELLING_PRICE,0)-ifnull(tax,0)+ifnull(DISCOUNT,0) AS GROSS_SALES_BEFORE_TAX ,case when SUBORDER_QUANTITY*SUBORDER_MRP - (SELLING_PRICE - SHIPPING_PRICE) < 0 then 0 else SUBORDER_QUANTITY*SUBORDER_MRP - (SELLING_PRICE -SHIPPING_PRICE) end AS DISCOUNT ,TAX ,SHIPPING_PRICE ,SELLING_PRICE AS SELLING_PRICE ,upper(ORDER_STATUS) as OMS_Order_Status ,upper(b.Shipping_status) AS SHIPPING_STATUS ,upper( case when lower(oms_order_status) like \'%cancel%\' or lower(b.Shipping_status) like \'%cancel%\' then \'CANCELLED\' else b.shipping_status end) FINAL_SHIPPING_STATUS ,Marketplace_LineItem_ID as SALEORDERITEMCODE ,suborder_id as SALES_ORDER_ITEM_ID ,b.awb AWB ,NULL Payment_Gateway ,b.payment_mode Payment_Mode ,b.courier COURIER ,b.MANIFEST_DATE as DISPATCH_DATE ,b.DELIVERED_DATE DELIVERED_DATE ,case when lower(b.shipping_status) = \'delivered\' then 1 else 0 end AS DELIVERED_STATUS ,IS_REFUND AS RETURN_FLAG ,case when is_refund = 1 then suborder_quantity::int end returned_quantity ,case when RETURN_FLAG = 1 and lower(order_status) not in (\'cancelled\') then ifnull(is_refund,0) end returned_sales ,case when is_refund = 0 and lower(order_status) in (\'cancelled\') then suborder_quantity::int end cancelled_quantity ,new_customer_flag::varchar as NEW_CUSTOMER_FLAG ,NULL as ACQUISITION_PRODUCT ,Days_in_shipment AS DAYS_IN_SHIPMENT ,NULL AS ACQUSITION_DATE ,b.SKU as SKU_CODE ,upper(mapped_product_name) as PRODUCT_NAME_FINAL ,upper(mapped_category) as PRODUCT_CATEGORY ,upper(mapped_sub_category) as PRODUCT_SUB_CATEGORY ,b.mapped_brand ,upper(WAREHOUSE_NAME) WAREHOUSE ,b.pincode ,b.shipping_status easyecom_status from prd_db.justherbs.EasyEcom_JH_FACT_ITEMS b left join (select * from (select * ,row_number() over (partition by transactionid, shop_name order by 1) rw from prd_db.justherbs.dwh_jh_GA_ORDER_BY_SOURCE_CONSOLIDATED ) where rw =1 ) GA on b.reference_code = GA.transactionid where lower(marketplace) not like (\'%shopify%\' ) ; create or replace table prd_db.justherbs.dwh_Final_customerID as with new_phone_numbers as ( select phone, contact_num, 19700000000 + row_number() over( order by contact_num asc ) as maple_monk_id from ( select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) as contact_num, phone from prd_db.justherbs.dwh_sales_consolidated_intermediate ) a ), int as ( select contact_num, email, coalesce(maple_monk_id,id2) as maple_monk_id from ( select contact_num, email, maple_monk_id, 19800000000+row_number() over(partition by maple_monk_id is NULL order by email asc ) as id2 from ( select distinct coalesce(p.contact_num,right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10)) as contact_num, e.email, maple_monk_id from ( select phone as contact_num, email from prd_db.justherbs.dwh_sales_consolidated_intermediate ) e left join new_phone_numbers p on p.contact_num = right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10) ) a ) b ) select contact_num, email, maple_monk_id from int where coalesce(contact_num,email) is not NULL ; create or replace table prd_db.justherbs.dwh_sales_consolidated as select coalesce(m.maple_monk_id_phone, d.maple_monk_id) as customer_id_final, min(order_date) over(partition by customer_id_final) as acquisition_date, min(case when lower(m.order_status) not in (\'cancelled\') then order_date end) over(partition by customer_id_final) as first_complete_order_date, m.*, coalesce(m.order_status, m.shipping_status) as final_status from ( select c.maple_monk_id as maple_monk_id_phone, o.* from prd_db.justherbs.dwh_sales_consolidated_intermediate o left join ( select * from ( select contact_num phone, maple_monk_id, row_number() over (partition by contact_num order by maple_monk_id asc) magic from prd_db.justherbs.dwh_Final_customerID ) where magic =1 )c on c.phone = right(regexp_replace(o.phone, \'[^a-zA-Z0-9]+\'),10) )m left join ( select distinct maple_monk_id, email from prd_db.justherbs.dwh_Final_customerID where contact_num is null )d on d.email = m.email ; ALTER TABLE prd_db.justherbs.dwh_sales_consolidated drop COLUMN new_customer_flag ; ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN new_customer_flag varchar(50); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN new_customer_flag_month varchar(50); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated drop COLUMN acquisition_product ; ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_product varchar(16777216); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_SKUCODE varchar(16777216); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_PRODUCT_SUB_CATEGORY varchar(16777216); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_PRODUCT_CATEGORY varchar(16777216); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_channel varchar(16777216); ALTER TABLE prd_db.justherbs.dwh_sales_consolidated ADD COLUMN acquisition_marketplace varchar(16777216); UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.new_customer_flag = B.flag FROM ( SELECT DISTINCT order_id, customer_id_final, Order_Date, CASE WHEN Order_Date = first_complete_order_date then \'New\' WHEN Order_Date < first_complete_order_date or first_complete_order_date is null THEN \'Yet to make completed order\' WHEN Order_Date > first_complete_order_date then \'Repeat\' END AS Flag FROM prd_db.justherbs.dwh_sales_consolidated)AS B WHERE A.order_id = B.order_id AND A.customer_id_final = B.customer_id_final AND A.order_date::date=B.Order_date::Date; UPDATE prd_db.justherbs.dwh_sales_consolidated SET new_customer_flag = CASE WHEN new_customer_flag IS NULL and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\') end) THEN \'New\' WHEN new_customer_flag IS NULL and (case when lower(order_status) is null then 1=1 else lower(order_status) in (\'cancelled\') end) THEN \'Yet to make completed order\' ELSE new_customer_flag END; UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.new_customer_flag_month = B.flag FROM ( SELECT DISTINCT order_id, customer_id_final, Order_Date, CASE WHEN Last_day(order_date, \'month\') = Last_day(first_complete_order_date, \'month\') THEN \'New\' WHEN Last_day(order_date, \'month\') < Last_day(first_complete_order_date, \'month\') or acquisition_date is null THEN \'Yet to make completed order\' WHEN Last_day(order_date, \'month\') > Last_day(first_complete_order_date, \'month\') THEN \'Repeat\' END AS Flag FROM prd_db.justherbs.dwh_sales_consolidated)AS B WHERE A.order_id = B.order_id AND A.customer_id_final = B.customer_id_final; UPDATE prd_db.justherbs.dwh_sales_consolidated SET new_customer_flag_month = CASE WHEN new_customer_flag_month IS NULL and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\') end) THEN \'New\' ELSE new_customer_flag_month END; create or replace temporary table prd_db.justherbs.dwh_temp_source_1 AS SELECT DISTINCT customer_id_final, channel, marketplace FROM ( SELECT DISTINCT customer_id_final, order_date, source as channel, shop_name as marketplace, Min(case when lower(order_status) <> \'cancelled\' then order_date end) OVER ( partition BY customer_id_final) firstOrderdate FROM prd_db.justherbs.dwh_sales_consolidated ) res WHERE order_date=firstorderdate; UPDATE prd_db.justherbs.dwh_sales_consolidated AS a SET a.acquisition_channel=b.channel FROM prd_db.justherbs.dwh_temp_source_1 b WHERE a.customer_id_final = b.customer_id_final; UPDATE prd_db.justherbs.dwh_sales_consolidated AS a SET a.acquisition_marketplace=b.marketplace FROM prd_db.justherbs.dwh_temp_source_1 b WHERE a.customer_id_final = b.customer_id_final; CREATE OR replace temporary TABLE prd_db.justherbs.dwh_temp_product_1 AS SELECT DISTINCT customer_id_final, product_name_final, product_category, product_sub_category, sku, Row_number() OVER (partition BY customer_id_final ORDER BY SELLING_PRICE DESC) rowid FROM ( SELECT DISTINCT customer_id_final, order_date, product_name_final, product_category, product_sub_category, sku, SELLING_PRICE , Min(case when lower(order_status) <> \'cancelled\' then order_date end) OVER (partition BY customer_id_final) firstOrderdate FROM prd_db.justherbs.dwh_sales_consolidated )res WHERE order_date=firstorderdate; UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.acquisition_product=B.product_name_final FROM ( SELECT * FROM prd_db.justherbs.dwh_temp_product_1 WHERE rowid=1 )B WHERE A.customer_id_final = B.customer_id_final; UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.acquisition_product_category=B.product_category FROM ( SELECT * FROM prd_db.justherbs.dwh_temp_product_1 WHERE rowid=1 )B WHERE A.customer_id_final = B.customer_id_final; UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.acquisition_product_sub_category=B.product_sub_category FROM ( SELECT * FROM prd_db.justherbs.dwh_temp_product_1 WHERE rowid=1 )B WHERE A.customer_id_final = B.customer_id_final; UPDATE prd_db.justherbs.dwh_sales_consolidated AS A SET A.acquisition_SKUCODE=B.SKU FROM ( SELECT * FROM prd_db.justherbs.dwh_temp_product_1 WHERE rowid=1 )B WHERE A.customer_id_final = B.customer_id_final; Create or replace table prd_db.justherbs.dwh_easyecom_returns_fact_items as select ifnull(FE.Source,\'NA\') Marketing_CHANNEL ,FR.* from prd_db.justherbs.dwh_easyecom_returns_intermediate FR left join (select distinct replace(reference_code,\'#\',\'\') REFERENCE_CODE, Source from prd_db.justherbs.dwh_sales_consolidated) FE on FR.REFERENCE_CODE = FE.REFERENCE_CODE; create or replace table prd_db.justherbs.dwh_RETURNS_CONSOLIDATED as select upper(MARKETPLACE) Marketplace ,Return_Date ,upper(Marketing_CHANNEL) Marketing_channel ,sum(RETURNED_QUANTITY) TOTAL_RETURNED_QUANTITY ,sum(TOTAL_RETURN_AMOUNT) TOTAL_RETURN_AMOUNT ,sum(RETURN_TAX) TOTAL_RETURN_TAX ,sum(RETURN_AMOUNT_WITHOUT_TAX) TOTAL_RETURN_AMOUNT_EXCL_TAX from prd_db.justherbs.dwh_easyecom_returns_fact_items group by 1,2,3 order by 2 desc;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from PRD_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            