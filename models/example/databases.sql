{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.snitch.logistics_fact as (select cast(coalesce(t2.customer_id_final, t3.customer_id_final) as varchar) customer_id_final, o.* from (select t3.*,t4.sla, CASE WHEN div0(DATEDIFF(hour, TIMESTAMPADD(DAY, ceil(t4.SLA) , assigned_date),TRY_TO_TIMESTAMP(first_out_for_delivery_date)),24) <= 0 THEN \'intat\' WHEN div0(DATEDIFF(hour, TIMESTAMPADD(DAY, ceil(t4.SLA), assigned_date),try_TO_TIMESTAMP(first_out_for_delivery_date)),24) > 0 THEN \'outtat\' END AS Attempt_In_Tat from ( select t1.*,t2.\"Courier Mode\" as courier_mode,t2.\"Parent Courier\" as parent_courier from (select id, cod, status, zone, is_return, replace(pr.value :name ,\'\"\',\'\') as product_name, replace(pr.value:price,\'\"\',\'\') as price, replace(pr.value:product_cost ,\'\"\',\'\') as selling_price, replace(pr.value:channel_sku ,\'\"\',\'\') as sku , replace(pr.value : quantity ,\'\"\',\'\') as quantity, replace(sh.value : awb ,\'\"\',\'\') as awb, replace(sh.value : courier ,\'\"\',\'\') as courier, DELIVERED_DATE , picked_up_date as pickedup_timestamp, replace(sh.value : pickup_scheduled_date ,\'\"\',\'\') as pickup_scheduled_date, replace(sh.value : shipped_date ,\'\"\',\'\') as shipped_date, CONCAT(\'week_\', CAST(WEEK(sh.value:shipped_date :: date) AS STRING)) as shipped_week, MONTHNAME(sh.value:shipped_date :: date) as shipped_month, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\') as assigned_date, updated_at, manifest_id, customer_name, customer_email, customer_phone, customer_city, customer_state, customer_country, customer_pincode, payment_method, pickup_location, channel_order_id, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\') as channel_created_at, FIRST_OUT_FOR_DELIVERY_DATE, CASE WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'), TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 1 THEN \'D-1\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'), TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 0 THEN \'D-0\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'), TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 2 THEN \'D-2\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'), TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) > 2 THEN \'2+\' ELSE null END AS order_to_assign, DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.channel_created_at, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'), TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')) as order_to_assign_in_hours, CASE WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'),TRY_TO_TIMESTAMP(REPLACE(sh.value : pickedup_timestamp, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 1 THEN \'D-1\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'),TRY_TO_TIMESTAMP(REPLACE(sh.value : pickedup_timestamp, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 0 THEN \'D-0\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'),TRY_TO_TIMESTAMP(REPLACE(sh.value : pickedup_timestamp, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) = 2 THEN \'D-2\' WHEN FLOOR(div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'),TRY_TO_TIMESTAMP(REPLACE(sh.value : pickedup_timestamp, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')),24)) > 2 THEN \'2+\' ELSE null END AS order_to_picked, DATEDIFF(hour, TRY_TO_TIMESTAMP(REPLACE(SR.CREATED_AT, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\'),TRY_TO_TIMESTAMP(REPLACE(sh.value : pickedup_timestamp, \'\"\', \'\'), \'DD MON YYYY, HH12:MI PM\')) as order_to_picked_in_hours, div0(DATEDIFF(hour,TRY_TO_TIMESTAMP(picked_up_date),TRY_TO_TIMESTAMP(first_out_for_delivery_date)),24) as picked_to_attempt, div0(DATEDIFF(hour, TRY_TO_TIMESTAMP(picked_up_date, \'YYYY-MM-DD HH24:MI:SS\'), TRY_TO_TIMESTAMP(delivered_date, \'DD-MM-YYYY HH24:MI:SS\') ),24) as picked_to_deliver from snitch_db.maplemonk.snitch_shiprocket_new_orders sr,LATERAL FLATTEN(input =>sr.products) pr,LATERAL FLATTEN(input => sr.shipments) sh) t1 left join (select * from snitch_db.maplemonk.courier_mapping) t2 on t1.courier = t2.courier)t3 left join (select * from snitch_db.maplemonk.zone_mapping)t4 on t3.zone = t4.zone ) o left join (select distinct phone,customer_id_final from snitch_db.snitch.Customer_DIM )t2 on RIGHT(REGEXP_REPLACE(customer_phone, \'[^a-zA-Z0-9]+\', \'\'), 10) = t2.phone left join (select * from (select lower(email) email,customer_id_final, row_number() over (partition by lower(email) order by lower(email)) rw from snitch_db.snitch.Customer_Details_DIM ) where rw = 1)t3 on lower(customer_email)= lower(t3.email))",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        