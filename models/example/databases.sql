{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table ghc_db.maplemonk.ga_campaign_data_saturn as select a.ga_date, a.view_id, a.ga_campaign, coalesce(b.transactions, a.transactions) transactions, coalesce(b.revenues, a.revenues) revenues from ( select ga_Date, view_id, ga_campaign, count(distinct ga_transactionid) transactions, sum(ga_revenuepertransaction) revenues from ghc_db.maplemonk.ga_saturn_orders_by_source group by 1,2,3 ) a left join ( select ga_date, view_id, ga_campaign, sum(ga_transactions) transactions, sum(ga_transactionrevenue::float) revenues from ghc_db.maplemonk.ga_saturn_orders_by_campaign group by 1,2,3 ) b on a.ga_campaign=b.ga_campaign and a.ga_date = b.ga_date ; create or replace table ghc_db.maplemonk.GoogleAds_FB_GA_Saturn as select account_name, account_id, campaign_id, coalesce(c.campaign_name,d.ga_campaign) campaign_name, coalesce(c.date,d.ga_date) date, month(coalesce(c.date,d.ga_date)) month, year(coalesce(c.date,d.ga_date)) year, channel, ACCOUNT, c.spend, c.impressions, c.clicks, ifnull(c.transactions,0)+ ifnull(d.transactions,0) conversions, ifnull(c.revenues,0)+ ifnull(d.revenues,0) conversion_value from ( select account_name, account_id, campaign_id, campaign_name, date, month, year, channel, ACCOUNT, avg(clicks) clicks, avg(spend) spend, avg(impressions) impressions, sum(ifnull(b.transactions,0)) + sum(ifnull(f.transactions,0)) transactions, sum(ifnull(b.revenues,0)) + sum(ifnull(f.revenues,0)) revenues from ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_GHC_intermediate a left join (select * from ghc_db.maplemonk.ga_campaign_data_saturn where lower(left(ga_campaign,3)) not in (\'yti\',\'yt-\')) b on a.date = b.ga_Date and a.campaign_name = b.ga_campaign left join (select * from ghc_db.maplemonk.ga_campaign_data_saturn where lower(left(ga_campaign,3)) in (\'yt-\')) f on a.date = f.ga_Date and left(a.campaign_name,13) = left(f.ga_campaign,13) where account in (\'Google SATURN\') group by 1,2,3,4,5,6,7,8,9 order by campaign_name ) c full outer join ( select ga_date, ga_campaign, split_part(ga_campaign,\'-\',2) influencer, split_part(ga_campaign,\'-\',3) category, split_part(ga_campaign,\'-\',4) product, transactions, revenues from ghc_db.maplemonk.ga_campaign_data_saturn where left(ga_campaign,3) = \'yti\' and transactions <> 0 )d on c.date = d.ga_date and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.influencer)||\'%\' and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.category)||\'%\' and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.product)||\'%\' union all select account_name, account_id, campaign_id, ad_name campaign_name, date_start Date, month(date_start) month, year(date_Start) year, \'Facebook\' as Channel, \'Facebook Saturn\' as Account, SUM(SPEND) Spend, SUM(IMPRESSIONS) Impressions, SUM(CLICKS) Clicks, sum(transactions) Conversions, sum(revenues) conversion_value from ghc_db.MAPLEMONK.FB_SATURN_ADS_INSIGHTS a left join (select * from ghc_db.maplemonk.ga_campaign_data_saturn where lower(left(ga_campaign,3)) <> \'yti\') b on a.date_start = b.ga_Date and a.ad_name = b.ga_campaign where spend <> 0 group by 1,2,3,4,5,6,7,8,9 ; -------------------- create or replace table ghc_db.maplemonk.ga_campaign_data_mars as select a.ga_date, a.view_id, a.ga_campaign, coalesce(b.transactions, a.transactions) transactions, coalesce(b.revenues, a.revenues) revenues from ( select ga_Date, view_id, ga_campaign, count(distinct ga_transactionid) transactions, sum(ga_revenuepertransaction) revenues from ghc_db.maplemonk.ga_mars_orders_by_source group by 1,2,3 ) a left join ( select ga_date, view_id, ga_campaign, sum(ga_transactions) transactions, sum(ga_transactionrevenue::float) revenues from ghc_db.maplemonk.ga_mars_orders_by_campaign group by 1,2,3 ) b on a.ga_campaign=b.ga_campaign and a.ga_date = b.ga_date ; create or replace table ghc_db.maplemonk.GoogleAds_FB_GA_Mars as select account_name, account_id, campaign_id, coalesce(c.campaign_name, d.ga_campaign) campaign_name, coalesce(c.date,d.ga_date) date, month(coalesce(c.date,d.ga_date)) month, year(coalesce(c.date,d.ga_date)) year, channel, ACCOUNT, c.spend, c.impressions, c.clicks, ifnull(c.transactions,0)+ ifnull(d.transactions,0) conversions, ifnull(c.revenues,0)+ ifnull(d.revenues,0) conversion_value from ( select account_name, account_id, campaign_id, campaign_name, date, month, year, channel, ACCOUNT, avg(clicks) clicks, avg(spend) spend, avg(impressions) impressions, sum(ifnull(b.transactions,0)) + sum(ifnull(f.transactions,0)) transactions, sum(ifnull(b.revenues,0)) + sum(ifnull(f.revenues,0)) revenues from ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_GHC_intermediate a left join (select * from ghc_db.maplemonk.ga_campaign_data_mars where lower(left(ga_campaign,3)) not in (\'yti\',\'yt-\')) b on a.date = b.ga_Date and a.campaign_name = b.ga_campaign left join (select * from ghc_db.maplemonk.ga_campaign_data_mars where lower(left(ga_campaign,3)) in (\'yt-\')) f on a.date = f.ga_Date and left(a.campaign_name,13) = left(f.ga_campaign,13) where account in (\'Google MARS Old\',\'Google MARS New\',\'Google MARS 2\') group by 1,2,3,4,5,6,7,8,9 order by campaign_name ) c full outer join ( select ga_date, ga_campaign, split_part(ga_campaign,\'-\',2) influencer, split_part(ga_campaign,\'-\',3) category, split_part(ga_campaign,\'-\',4) product, transactions, revenues from ghc_db.maplemonk.ga_campaign_data_mars where left(ga_campaign,3) = \'yti\' and transactions <> 0 )d on c.date = d.ga_date and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.influencer)||\'%\' and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.category)||\'%\' and replace(lower(c.campaign_name),\'-\',\'\') like \'%\'||lower(d.product)||\'%\' union all select account_name, account_id, campaign_id, ad_name campaign_name, date_start Date, month(date_start) month, year(date_Start) year, \'Facebook\' as Channel, \'Facebook Mars\' as Account, SUM(SPEND) Spend, SUM(IMPRESSIONS) Impressions, SUM(CLICKS) Clicks, sum(transactions) Conversions, sum(revenues) conversion_value from ghc_db.MAPLEMONK.FB_MARS_ADS_INSIGHTS a left join (select * from ghc_db.maplemonk.ga_campaign_data_mars where lower(left(ga_campaign,3)) <> \'yti\') b on a.date_start = b.ga_Date and a.ad_name = b.ga_campaign where spend <> 0 group by 1,2,3,4,5,6,7,8,9 ; create or replace table ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_GHC as select *, case when lower(account) like \'%mars%\' and lower(campaign_name) like \'%beard%\' then \'Beard\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%wellness%\' then \'Wellness\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%performance%\' then \'Performance\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) is null and lower(campaign_name) like \'%beard%\' then \'Beard\' when lower(account) is null and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) is null and lower(campaign_name) like \'%wellness%\' then \'Wellness\' when lower(account) is null and lower(campaign_name) like \'%performance%\' then \'Performance\' when lower(account) is null and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%wellness%\' then \'Wellness\' end as Category from ( select * from ghc_db.maplemonk.GoogleAds_FB_GA_Saturn union all select * from ghc_db.maplemonk.GoogleAds_FB_GA_Mars ) ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from GHC_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        