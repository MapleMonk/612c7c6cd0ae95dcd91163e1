{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE snitch_db.maplemonk.warehouse_sla_performance AS WITH unicom AS ( SELECT awb, MARKETPLACE, marketplace_mapped, shippingpackagecode, order_id, order_name, sku, order_status, order_date, order_timestamp, SHIPPING_LAST_UPDATE_TIMESTAMP, shipping_courier, warehouse_name, shipping_status, CASE WHEN SALE_ORDER_ITEM_STATUS = \'PICKING_FOR_INVOICING\' THEN shippingpackagestatus ELSE SALE_ORDER_ITEM_STATUS END AS UC_STATUS, dispatched_timestamp AS \"UC_Dispatched\", dispatch_date, delivered_date, days_to_dispatch, days_in_shipment, dispatch_to_delivery_days, item_details, CASE WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 0 THEN \'D0\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 1 THEN \'D1\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 2 THEN \'D2\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) = 3 THEN \'D3\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 3 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 5 THEN \'D>3\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 5 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 7 THEN \'D>5\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 7 AND TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) <= 10 THEN \'D>7\' WHEN TIMESTAMPDIFF(DAY, order_date, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP)) > 10 THEN \'D>10\' ELSE NULL END AS Ageing, category FROM snitch_db.maplemonk.unicommerce_fact_items_intermediate ), unicommerce_get_orders AS ( SELECT ORDER_ID, FULFILLMENT_TAT FROM ( SELECT REPLACE(saleorderdto:code, \'\"\', \'\') AS order_id, CONVERT_TIMEZONE(\'UTC\', \'Asia/Kolkata\', DATEADD(\'ms\', saleorderdto:fulfillmentTat, \'1970-01-01\')) AS fulfillment_tat, ROW_NUMBER() OVER (PARTITION BY order_id ORDER BY 1) RN FROM snitch_db.maplemonk.SNITCH_UNICOMMERCE_GET_ORDERS_BY_IDS_TEST, LATERAL FLATTEN (INPUT => saleorderdto:shippingPackages) sps ) WHERE RN = 1 ), forward AS ( SELECT \"Shipping Package Code\", created_timestamp, picking_timestamp, picked_timestamp, packed_timestamp, rts_timestamp, manifested_timestamp, dispatched_timestamp, shipped_timestamp, delivered_timestamp, cancelled_timestamp, \"created&dispatch\", \"pick&dispatch\", \"pack&dispatch\", LATEST_STATUS, LAST_UPDATED FROM snitch_db.maplemonk.forward_timestamps ), clickpost AS ( SELECT awb, \"Order Date\" AS CP_orderplaced, \"Pickup Date\" AS CP_Pickup, \"Delivery Date\" AS CP_Delivery FROM snitch_db.maplemonk.snitch_clickpost_track_order_dashboard_report ), sr AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_SR ), wh AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_WH ), wh2 AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_WH2 ), emiza AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_SAPL_EMIZA ), marketplace AS ( SELECT \"Order ID\", warehouse FROM snitch_db.maplemonk.GS_MARKET_PLACE_ERROR_ORDERS ), fulfillment AS ( SELECT a.*, b.FULFILLMENT_TAT, CASE WHEN upper(a.MARKETPLACE) = \'SHOPIFY\' AND (EXTRACT(HOUR FROM a.order_timestamp)) < 16 THEN DATE_TRUNC(\'day\', a.order_timestamp::timestamp) + INTERVAL \'18 hours\' WHEN upper(a.MARKETPLACE) = \'SHOPIFY\' AND (EXTRACT(HOUR FROM a.order_timestamp)) >= 16 THEN DATE_TRUNC(\'day\', DATEADD(DAY, 1, a.order_timestamp::timestamp)) + INTERVAL \'18 hours\' ELSE b.fulfillment_tat END AS TAT FROM unicom a LEFT JOIN unicommerce_get_orders b ON a.order_id = b.order_id ), unicom_error AS ( SELECT u.*, COALESCE(sr.Warehouse, wh.Warehouse, wh2.Warehouse, emiza.Warehouse, marketplace.Warehouse) AS Warehouse, CASE WHEN sr.Warehouse IS NOT NULL THEN \'sr\' WHEN wh.Warehouse IS NOT NULL THEN \'wh\' WHEN wh2.Warehouse IS NOT NULL THEN \'wh2\' WHEN emiza.Warehouse IS NOT NULL THEN \'emiza\' WHEN marketplace.Warehouse IS NOT NULL THEN \'marketplace\' ELSE NULL END AS ERROR FROM fulfillment u LEFT JOIN sr ON u.order_id = sr.\"Order ID\" LEFT JOIN wh ON u.order_id = wh.\"Order ID\" LEFT JOIN wh2 ON u.order_id = wh2.\"Order ID\" LEFT JOIN emiza ON u.order_id = emiza.\"Order ID\" LEFT JOIN marketplace ON u.order_id = marketplace.\"Order ID\" ), main_data AS ( SELECT ue.*, f.created_timestamp, f.picking_timestamp, f.picked_timestamp, f.packed_timestamp, f.rts_timestamp, f.manifested_timestamp, f.dispatched_timestamp, f.shipped_timestamp, f.delivered_timestamp, f.cancelled_timestamp, f.\"created&dispatch\", f.\"pick&dispatch\", f.\"pack&dispatch\", f.LATEST_STATUS, f.LAST_UPDATED, cp.CP_orderplaced, cp.CP_Pickup, cp.CP_Delivery FROM unicom_error ue LEFT JOIN forward f ON ue.shippingpackagecode = f.\"Shipping Package Code\" LEFT JOIN clickpost cp ON ue.awb = cp.awb ), new_status AS ( SELECT md.*, CASE WHEN UC_STATUS = \'UNFULFILLABLE\' THEN \'UNFULFILLABLE\' WHEN UC_STATUS = \'CANCELLED\' THEN \'CANCELLED\' ELSE LATEST_STATUS END AS ITEM_STATUS, CASE WHEN TAT > CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', GETDATE()) AND ITEM_STATUS IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURNED\') THEN \'FUTURE DATE-COMPLETED\' WHEN TAT > CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', GETDATE()) AND ITEM_STATUS NOT IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURNED\') THEN \'FUTURE DATE-PENDING\' ELSE CASE WHEN ITEM_STATUS IN (\'DISPATCHED\', \'REPLACED\', \'DELIVERED\', \'SHIPPED\', \'RETURN_EXPECTED\') THEN CASE WHEN \"DISPATCHED_TIMESTAMP\" < TAT THEN \'WITHIN SLA\' ELSE \'BREACHED\' END WHEN ITEM_STATUS = \'CANCELLED\' THEN CASE WHEN \"DISPATCHED_TIMESTAMP\" IS NULL THEN \'CANCELLED\' ELSE CASE WHEN \"DISPATCHED_TIMESTAMP\" < TAT THEN \'WITHIN SLA\' ELSE \'BREACHED\' END END WHEN ITEM_STATUS IN (\'CREATED\', \'MANIFESTED\', \'PICKING\', \'PICKED\', \'PACKED\', \'READY_TO_SHIP\', \'PICKING_FOR_INVOICING\', \'FULFILLABLE\', \'UNFULFILLABLE\') THEN \'BREACHED - PENDING FOR PROCESS\' ELSE \'BREACHED\' END END AS SLA_Status, CASE WHEN marketplace_mapped = \'MYNTRA\' THEN CASE WHEN lower(SLA_Status) = \'cancelled\' THEN \'CANCELLED\' WHEN lower(SLA_STATUS) NOT IN (\'cancelled\',\'within sla\', \'breached\',\'future date-completed\') THEN \'PENDING\' ELSE CASE WHEN category IN (\'Accessories\', \'Sunglass\', \'Shorts\', \'Pyjama\', \'Boxer\', \'Co-ords\', \'Jogsuit\', \'Underpants\') AND item_details IS NULL THEN \'CORRECT\' WHEN lower(item_details) LIKE \'%mp%\' THEN \'CORRECT\' ELSE \'INCORRECT\' END END ELSE \'OTHER CHANNEL\' END AS Myntra_Tag_Loops FROM main_data md ) SELECT * FROM new_status WHERE (warehouse_name LIKE \'%SAPL%\' OR warehouse_name IS NULL) AND order_date::date >= DATEADD(DAY, -60, CONVERT_TIMEZONE(\'Canada/Pacific\', \'Asia/Kolkata\', CURRENT_TIMESTAMP));",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        