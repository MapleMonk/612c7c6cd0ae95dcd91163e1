{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE SNITCH_DB.MAPLEMONK.clicks_itemid AS WITH GA_DATA AS ( SELECT TO_DATE(DATE,\'YYYYMMDD\') AS GA_DATE, CASE WHEN LENGTH(ITEMID) > 14 THEN REPLACE(SPLIT(itemid, \'_\')[2],\'\"\',\'\') ELSE itemid END AS itemid, \'web\' AS type, sum(itemsViewed) AS CLICKS FROM snitch_db.maplemonk.ga4_web_jan24_clicks_impressions_by_itemid WHERE GA_DATE > \'2024-02-27\' group by 1,2 UNION SELECT TO_DATE(DATE,\'YYYYMMDD\') AS GA_DATE, CASE WHEN LENGTH(ITEMID) > 14 THEN REPLACE(SPLIT(itemid, \'_\')[2],\'\"\',\'\') ELSE itemid END AS itemid, \'web\' AS type, sum(itemsViewed) AS CLICKS FROM snitch_db.maplemonk.ga4_web_clicks_impressions_by_itemid WHERE GA_DATE <= \'2024-02-27\' group by 1,2 UNION SELECT TO_DATE(DATE,\'YYYYMMDD\') AS GA_DATE, CASE WHEN LENGTH(ITEMID) > 14 THEN REPLACE(SPLIT(itemid, \'_\')[2],\'\"\',\'\') ELSE itemid END AS itemid, \'app\' AS type, sum(itemsViewed) AS CLICKS FROM snitch_db.maplemonk.ga4_APP_clicks_impressions_by_itemid group by 1,2 UNION SELECT TO_DATE(DATE,\'YYYYMMDD\') AS GA_DATE, CASE WHEN LENGTH(ITEMID) > 14 THEN REPLACE(SPLIT(itemid, \'_\')[2],\'\"\',\'\') ELSE itemid END AS itemid, \'Snitch_IOS\' AS type, ifnull(sum(itemsViewed),0) AS CLICKS from snitch_db.maplemonk.app2_clicks_itemid group by 1,2 ), sku_group as ( select sku_group,id, from (select distinct a.id, REVERSE(SUBSTRING(REVERSE(b.sku),CHARINDEX(\'-\', REVERSE(b.sku)) + 1)) AS SKU_GROUP ,to_timestamp(replace(b.updated_at,\'\"\',\'\')) as UPDATED_AT , row_number ()over (partition by SKU_group order by b.updated_at desc) as rw , b.price as price,status from snitch_db.MAPLEMONK.SHOPIFY_ALL_PRODUCTS a left join snitch_db.maplemonk.shopifyindia_product_variants b on a.id = b.product_id ) where rw=1 and sku_group is not null and sku_group not in (\'1290\',\'Test1\') ), main_data as ( select a.*,b.sku_group from ga_data a left join sku_group b on cast(a.itemid as varchar) = cast(b.id as varchar) ), sales_data as ( select CASE WHEN lower(webshopney) = \'appbrew\' THEN \'app\' ELSE webshopney end as type, order_timestamp::date as date, sku_group, sum(quantity) as total_quantity, sum(gross_sales) as total_gross_sales from snitch_db.maplemonk.fact_items_snitch where lower(ifnull(discount_code,\'n\')) not like \'%eco%\' and lower(ifnull(discount_code,\'n\')) not like \'%influ%\' and order_name not in (\'2431093\',\'2422140\',\'2425364\',\'2430652\',\'2422237\',\'2420623\',\'2429832\',\'2422378\',\'2428311\',\'2429064\',\'2428204\',\'2421343\',\'2431206\',\'2430491\',\'2426682\',\'2426487\',\'2426458\',\'2423575\',\'2422431\',\'2423612\',\'2426625\',\'2428117\',\'2426894\',\'2425461\',\'2426570\',\'2423455\',\'2430777\',\'2426009\',\'2428245\',\'2427269\',\'2430946\',\'2425821\',\'2429986\',\'2429085\',\'2422047\',\'2430789\',\'2420219\',\'2428341\',\'2430444\',\'2426866\',\'2431230\',\'2425839\',\'2430980\',\'2427048\',\'2430597\',\'2420499\',\'2431050\',\'2420271\',\'2426684\',\'2428747\',\'2423523\',\'2431171\',\'2430830\',\'2425325\',\'2428414\',\'2429054\',\'2423596\') and tags not in (\'FLITS_LOGICERP\') group by 1,2,3 ), main_data2 AS ( SELECT gd.GA_DATE as order_date, gd.type as type, gd.sku_group, gd.CLICKS, sd.total_quantity, sd.total_gross_sales, gd.CLICKS / NULLIF(SUM(gd.CLICKS) OVER (PARTITION BY gd.ga_date, gd.type), 0) AS clicks_share, SUM(gd.CLICKS) OVER (PARTITION BY gd.ga_date, gd.type ORDER BY gd.CLICKS DESC) / NULLIF(SUM(gd.CLICKS) OVER (PARTITION BY gd.ga_date, gd.type), 0) AS cumulative_clicks_share FROM main_data gd left join sales_data sd ON gd.GA_DATE = sd.date AND gd.sku_group = sd.sku_group and lower(gd.type) = lower(sd.type) ) SELECT a.order_date, a.type, a.sku_group, a.CLICKS, a.total_quantity, a.total_gross_sales, a.clicks_share, a.cumulative_clicks_share, b.sku_class FROM main_data2 a left join snitch_db.maplemonk.availability_master_v2 b on a.sku_group =b.sku_group ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            