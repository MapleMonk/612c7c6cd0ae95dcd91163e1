{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table FABALLEY_DB.maplemonk.unicommerce_fact_items_intermediate_final as with order_related as ( select B.*, case when currency = \'INR\' then Shipping_price_base when currency = \'EUR\' then Shipping_price_base * INR_EUR when currency = \'AUD\' then Shipping_price_base * INR_AUD when currency = \'GBP\' then Shipping_price_base * INR_GBP when currency = \'USD\' then Shipping_price_base * INR_USD when currency = \'CAD\' then Shipping_price_base * INR_CAD when currency = \'SGD\' then Shipping_price_base * INR_SGD end as shipping_price_INR, case when currency = \'INR\' then discount_base when currency = \'EUR\' then discount_base* INR_EUR when currency = \'AUD\' then discount_base* INR_AUD when currency = \'GBP\' then discount_base* INR_GBP when currency = \'USD\' then discount_base* INR_USD when currency = \'CAD\' then discount_base* INR_CAD when currency = \'SGD\' then discount_base* INR_SGD end as discount_INR, case when currency = \'INR\' then tax_base when currency = \'EUR\' then tax_base* INR_EUR when currency = \'AUD\' then tax_base* INR_AUD when currency = \'GBP\' then tax_base* INR_GBP when currency = \'USD\' then tax_base* INR_USD when currency = \'CAD\' then tax_base* INR_CAD when currency = \'SGD\' then tax_base* INR_SGD end as tax_INR, case when currency = \'INR\' then SELLING_PRICE_base when currency = \'EUR\' then SELLING_PRICE_base* INR_EUR when currency = \'AUD\' then SELLING_PRICE_base* INR_AUD when currency = \'GBP\' then SELLING_PRICE_base* INR_GBP when currency = \'USD\' then SELLING_PRICE_base* INR_USD when currency = \'CAD\' then SELLING_PRICE_base* INR_CAD when currency = \'SGD\' then SELLING_PRICE_base* INR_SGD end as Selling_price_INR from ( select replace(saleorderdto:channel,\'\"\',\'\') as marketplace, replace(saleorderdto:source,\'\"\',\'\') as source, replace(saleorderdto:code,\'\"\',\'\') as order_id, replace(saleorderdto:billingAddress:phone,\'\"\',\'\') as phone, replace(saleorderdto:billingAddress:name,\'\"\',\'\') as name, saleorderdto:billingAddress:email as email, CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',saleorderdto:updated,\'1970-01-01\')) SHIPPING_LAST_UPDATE_DATE, replace(A.Value:itemSku,\'\"\',\'\') as sku, replace(A.Value:channelProductId,\'\"\',\'\') as product_id, replace(A.Value:itemName,\'\"\',\'\') as product_name, replace(saleorderdto:currencyCode,\'\"\',\'\') as currency, upper(replace(saleorderdto:billingAddress:city,\'\"\',\'\')) as city, upper(replace(saleorderdto:billingAddress:state,\'\"\',\'\')) as state, replace(saleorderdto:status,\'\"\',\'\') as ORDER_STATUS, CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',saleorderdto:displayOrderDateTime,\'1970-01-01\')) as order_date, A.Value:shippingCharges::float as Shipping_price_base, A.Value:packetNumber::int as SUBORDER_QUANTITY, A.Value:discount::float as discount_base, A.Value:totalIntegratedGst::float as tax_base, A.Value:totalPrice::float as SELLING_PRICE_base, replace(A.Value:shippingPackageCode,\'\"\',\'\') as shippingPackageCode, replace(A.Value:shippingPackageStatus,\'\"\',\'\') as shippingPackageStatus, replace(A.Value:code,\'\"\',\'\') as saleOrderItemCode, A.Value:id as SALES_ORDER_ITEM_ID from FABALLEY_db.maplemonk.UNICOMMERCE_GET_ORDERS_BY_IDS_TEST, LATERAL FLATTEN (INPUT => saleorderdto:saleOrderItems)A ) B LEFT JOIN (SELECT DATE ,RATES:EUR/RATES:SGD * RATES:INR AS INR_SGD ,RATES:EUR/RATES:CAD * RATES:INR AS INR_CAD ,RATES:EUR/RATES:USD * RATES:INR AS INR_USD ,RATES:EUR/RATES:GBP * RATES:INR AS INR_GBP ,RATES:EUR/RATES:AUD * RATES:INR AS INR_AUD ,RATES:INR AS INR_EUR FROM EXCHANGE_RATES) EX on Ex.date = B.order_date::Date ) , shipping_related as ( select replace(A.Value:shippingProvider,\'\"\',\'\') as courier, replace(A.Value:status,\'\"\',\'\') shipping_status, A.Value:dispatched dispatched, A.Value:delivered delivered, A.Value:code as shippingPackageCode, replace(c.saleorderdto:code,\'\"\',\'\') as order_id from FABALLEY_db.maplemonk.UNICOMMERCE_GET_ORDERS_BY_IDS_TEST c, LATERAL FLATTEN (INPUT => saleorderdto:shippingPackages)A ) , returns as ( select B.Value:saleOrderItemCode as saleOrderItemCode, B.Value:itemSku as itemSku, replace(c.saleorderdto:code,\'\"\',\'\') as order_id from FABALLEY_db.maplemonk.UNICOMMERCE_GET_ORDERS_BY_IDS_TEST C , LATERAL FLATTEN (INPUT => saleorderdto:returns)A, LATERAL FLATTEN (INPUT => A.Value:returnItems)B ) select o.*,s.courier, s.shipping_status, date(CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',s.dispatched,\'1970-01-01\'))) Dispatch_date, date(CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\',dateadd(\'ms\',s.delivered,\'1970-01-01\'))) Delivered_Date, case when r.itemSku is not NUll then 1 else 0 end as return_flag, case when return_flag = 1 then suborder_quantity else 0 end::int as return_quantity, case when order_status = \'CANCELLED\' then suborder_quantity else 0 end::int as cancelled_quantity, case when row_number()over(partition by phone order by order_date asc) = 1 then \'New\' else \'Repeat\' end as new_customer_flag, FIRST_VALUE( product_name) OVER ( PARTITION BY phone ORDER BY order_date asc ) AS acquisition_product, case when order_status=\'COMPLETE\' then delivered_date-order_date::date else current_date - order_date::date end as days_in_shipment from order_related o left join shipping_related s on o.shippingPackageCode= s.shippingPackageCode and o.order_id=s.order_id left join returns r on r.saleOrderItemCode = o.saleOrderItemCode and r.order_id = o.order_id ; create or replace table FABALLEY_db.maplemonk.customerID_test_Final as with new_phone_numbers as ( select contact_num ,9700000000 + row_number() over( order by contact_num asc ) as maple_monk_id from ( select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) as contact_num from FABALLEY_db.maplemonk.unicommerce_fact_items_intermediate_Final ) a ), int as ( select contact_num,email,coalesce(maple_monk_id,id2) as maple_monk_id from ( select contact_num, email,maple_monk_id,9800000000+row_number() over(partition by maple_monk_id is NULL order by email asc ) as id2 from ( select distinct coalesce(p.contact_num,right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10)) as contact_num, e.email,maple_monk_id from ( select phone as contact_num,email from FABALLEY_db.maplemonk.unicommerce_fact_items_intermediate_final ) e left join new_phone_numbers p on p.contact_num = right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10) ) a ) b ) select contact_num,email,case when email is not null and email <> \'\' then min(maple_monk_id) over (partition by email ) else maple_monk_id end maple_monk_id from int where coalesce(contact_num,email) is not NULL; create or replace table FABALLEY_db.maplemonk.unicommerce_fact_items_FABALLEY_Final as select coalesce(c.maple_monk_id,c.maple_monk_id) customer_id, o.*, min(order_date) over(partition by customer_id) as acquisition_date from FABALLEY_db.maplemonk.unicommerce_fact_items_intermediate_final o left join (select distinct contact_num phone,maple_monk_id from FABALLEY_db.maplemonk.customerID_test_final)c on c.phone = o.phone; CREATE OR REPLACE TABLE FABALLEY_db.maplemonk.unicommerce_fact_items_FABALLEY_TEMP_Category as select fi.*,fi.SKU AS SKU_CODE,coalesce(p.Item_Name,fi.product_name) as PRODUCT_NAME_Final,Upper(p.CATEGORY) AS Product_Category, p.Color, p.Size, P.Brand from FABALLEY_db.maplemonk.UNICOMMERCE_FACT_ITEMS_FABALLEY_FINAL fi left join (select distinct \"Sku Code\" SKUCODE, \"Item Name\" Item_Name, CATEGORY, Color, Size, BRAND from FABALLEY_DB.maplemonk.unicommerce_faballey_sku_master) p on fi.sku = p.skucode; CREATE OR REPLACE TABLE FABALLEY_db.maplemonk.unicommerce_fact_items_FABALLEY_Final AS SELECT * FROM FABALLEY_db.maplemonk.unicommerce_fact_items_FABALLEY_TEMP_Category; create or replace table faballey_db.maplemonk.Fact_item_Website_FabAlley AS Select * from FABALLEY_db.maplemonk.unicommerce_fact_items_FABALLEY_Final where lower(marketplace)=\'custom\';",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from FABALLEY_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        