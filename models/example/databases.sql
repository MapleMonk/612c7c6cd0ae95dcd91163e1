{{ config(
            materialized='table',
                post_hook={
                    "sql": "CREATE OR REPLACE TABLE maplemonk.zouk_AA_Sponsored_Products_Intermediate AS SELECT primary_key ,PARSE_DATE(\'%Y-%m-%d\', REPORTDATE) AS Date ,RECORDTYPE ,PROFILEID ,campaignId ,campaignName ,adGroupId ,adGroupName ,campaignStatus ,keywordId ,keywordText ,adId ,matchType ,targetId ,targetingType ,targetingExpression ,targetingText ,currency ,asin ,otherAsin ,sku ,impressions ,clicks ,cost ,attributedSales14d ,attributedConversions14d ,attributedSales7d ,attributedConversions7d ,attributedConversions14dSameSKU ,attributedSales14dSameSKU ,attributedSales14dOtherSKU ,\'EU\' as region FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY primary_key ORDER BY _AIRBYTE_EMITTED_AT DESC) AS rw2 FROM ( SELECT concat( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignStatus\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchasedAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedSku\') AS STRING),\'\') ) AS primary_key, REPORTDATE, RECORDTYPE, PROFILEID, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING) AS campaignId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignName\') AS STRING) AS campaignName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING) AS adGroupId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupName\') AS STRING) AS adGroupName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignStatus\') AS STRING) AS campaignStatus, CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING) AS keywordId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.keyword\') AS STRING) AS keywordText, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING) AS adId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING) AS matchType, NULL AS targetId, NULL AS targetingType, NULL AS targetingExpression, NULL AS targetingText, \'INR\' AS currency, CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedAsin\') AS STRING) AS asin, CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchasedAsin\') AS STRING) AS otherAsin, CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedSku\') AS STRING) AS sku, CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64) AS impressions, CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64) AS clicks, CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64) AS cost, CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales14d\') AS FLOAT64) AS attributedSales14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases14d\') AS FLOAT64) AS attributedConversions14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales7d\') AS FLOAT64) AS attributedSales7d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases7d\') AS FLOAT64) AS attributedConversions7d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchasesSameSku14d\') AS FLOAT64) AS attributedConversions14dSameSKU, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSalesSameSku14d\') AS FLOAT64) AS attributedSales14dSameSKU, CAST(JSON_EXTRACT_SCALAR(metric, \'$.salesOtherSku14d\') AS FLOAT64) AS attributedSales14dOtherSKU, _AIRBYTE_EMITTED_AT, IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales7d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases7d\') AS FLOAT64), 0) AS tt, row_number() over (partition by concat( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignStatus\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchasedAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.advertisedSku\') AS STRING),\'\') ) order by IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales7d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases7d\') AS FLOAT64), 0) desc ) rw FROM maplemonk.Amazon_Advertisement_AA_Zouk_SPONSORED_PRODUCTS_REPORT_STREAM WHERE RECORDTYPE = \'productAds\' ) a where rw = 1 OR tt > 0 ) WHERE rw2 = 1 ; CREATE OR REPLACE TABLE maplemonk.zouk_AA_Sponsored_Brands_Intermediate as SELECT primary_key ,PARSE_DATE(\'%Y-%m-%d\', REPORTDATE) AS Date ,RECORDTYPE ,PROFILEID ,campaignId ,campaignName ,adGroupId ,adGroupName ,campaignStatus ,campaignBudgetType ,adId ,keywordId ,keywordText ,keywordStatus ,matchType ,targetId ,targetingType ,targetingExpression ,targetingText ,currency ,asin ,otherAsin ,sku ,impressions ,clicks ,cost ,attributedSales14d ,attributedConversions14d ,attributedSales7d ,attributedConversions7d ,attributedOrdersNewToBrand14d ,attributedSalesNewToBrand14d ,attributedUnitsOrderedNewToBrand14d ,attributedConversions14dSameSKU ,attributedSales14dSameSKU ,attributedSales14dOtherSKU ,\'EU\' as region FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY primary_key ORDER BY _AIRBYTE_EMITTED_AT DESC) AS rw2 FROM ( SELECT CONCAT( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignBudgetType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordText\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING),\'\') ) AS primary_key, REPORTDATE, RECORDTYPE, PROFILEID, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING) AS campaignId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignName\') AS STRING) AS campaignName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING) AS adGroupId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupName\') AS STRING) AS adGroupName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignStatus\') AS STRING) AS campaignStatus, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignBudgetType\') AS STRING) AS campaignBudgetType, NULL AS adId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordText\') AS STRING) AS keywordText, CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordStatus\') AS STRING) AS keywordStatus, CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING) AS keywordId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING) AS matchType, NULL AS targetId, NULL AS targetingType, NULL AS targetingExpression, NULL AS targetingText, \'INR\' AS currency, NULL AS asin, NULL AS otherAsin, NULL AS sku, CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64) AS impressions, CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64) AS clicks, CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64) AS cost, CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales\') AS FLOAT64) AS attributedSales14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases\') AS FLOAT64) AS attributedConversions14d, NULL AS attributedSales7d, NULL AS attributedConversions7d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.newToBrandPurchases14d\') AS FLOAT64) AS attributedOrdersNewToBrand14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.newToBrandSales14d\') AS FLOAT64) AS attributedSalesNewToBrand14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.newToBrandUnitsSold14d\') AS FLOAT64) AS attributedUnitsOrderedNewToBrand14d, NULL AS attributedConversions14dSameSKU, NULL AS attributedSales14dSameSKU, NULL AS attributedSales14dOtherSKU, IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases\') AS FLOAT64), 0) AS tt, row_number() over (partition by CONCAT( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignBudgetType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.keywordText\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.matchType\') AS STRING),\'\') ) order by IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sales\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.purchases\') AS FLOAT64), 0) desc ) rw, _AIRBYTE_EMITTED_AT FROM maplemonk.Amazon_Advertisement_AA_Zouk_SPONSORED_BRANDS_REPORT_STREAM_V3_MM WHERE RECORDTYPE = \'campaigns\' ) a WHERE rw = 1 OR tt > 0 ) WHERE rw2=1; CREATE OR REPLACE TABLE maplemonk.zouk_AA_Sponsored_Display_Intermediate as SELECT primary_key ,PARSE_DATE(\'%Y%m%d\', REPORTDATE) AS Date ,RECORDTYPE ,PROFILEID ,campaignId ,campaignName ,adGroupId ,adGroupName ,campaignStatus ,campaignBudgetType ,adId ,keywordId ,keywordText ,keywordStatus ,matchType ,targetId ,targetingType ,targetingExpression ,targetingText ,currency ,asin ,otherAsin ,sku ,impressions ,clicks ,cost ,attributedSales14d ,attributedConversions14d ,attributedSales7d ,attributedConversions7d ,attributedOrdersNewToBrand14d ,attributedSalesNewToBrand14d ,attributedUnitsOrderedNewToBrand14d ,attributedConversions14dSameSKU ,attributedSales14dSameSKU ,attributedSales14dOtherSKU ,\'EU\' as region from ( SELECT *, ROW_NUMBER() OVER (PARTITION BY primary_key ORDER BY _AIRBYTE_EMITTED_AT DESC) AS rw2 FROM ( SELECT concat( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetingType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.asin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.otherAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sku\') AS STRING),\'\') ) AS primary_key, REPORTDATE, RECORDTYPE, PROFILEID, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING) AS campaignId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignName\') AS STRING) AS campaignName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING) AS adGroupId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupName\') AS STRING) AS adGroupName, CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignStatus\') AS STRING) AS campaignStatus, NULL AS campaignBudgetType, NULL AS keywordText, NULL AS keywordStatus, NULL AS keywordId, NULL AS matchType, CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING) AS adId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetId\') AS STRING) AS targetId, CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetingType\') AS STRING) AS targetingType, CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetingExpression\') AS STRING) AS targetingExpression, CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetingText\') AS STRING) AS targetingText, \'INR\' AS currency, CAST(JSON_EXTRACT_SCALAR(metric, \'$.asin\') AS STRING) AS asin, CAST(JSON_EXTRACT_SCALAR(metric, \'$.otherAsin\') AS STRING) AS otherAsin, CAST(JSON_EXTRACT_SCALAR(metric, \'$.sku\') AS STRING) AS sku, CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64) AS impressions, CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64) AS clicks, CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64) AS cost, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales14d\') AS FLOAT64) AS attributedSales14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions14d\') AS FLOAT64) AS attributedConversions14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales7d\') AS FLOAT64) AS attributedSales7d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions7d\') AS FLOAT64) AS attributedConversions7d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedOrdersNewToBrand14d\') AS FLOAT64) AS attributedOrdersNewToBrand14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSalesNewToBrand14d\') AS FLOAT64) AS attributedSalesNewToBrand14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedUnitsOrderedNewToBrand14d\') AS FLOAT64) AS attributedUnitsOrderedNewToBrand14d, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions14dSameSKU\') AS FLOAT64) AS attributedConversions14dSameSKU, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales14dSameSKU\') AS FLOAT64) AS attributedSales14dSameSKU, CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales14dOtherSKU\') AS FLOAT64) AS attributedSales14dOtherSKU, IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales7d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions7d\') AS FLOAT64), 0) AS tt, row_number() over (partition by concat( ifnull(CAST(REPORTDATE AS STRING),\'\'), ifnull(CAST(RECORDTYPE AS STRING),\'\'), ifnull(CAST(PROFILEID AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.campaignId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adGroupId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.adId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetId\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.targetingType\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.asin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.otherAsin\') AS STRING),\'\'), ifnull(CAST(JSON_EXTRACT_SCALAR(metric, \'$.sku\') AS STRING),\'\') ) order by IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.impressions\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.clicks\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.cost\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions14d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedSales7d\') AS FLOAT64), 0) + IFNULL(CAST(JSON_EXTRACT_SCALAR(metric, \'$.attributedConversions7d\') AS FLOAT64), 0) desc ) rw, _AIRBYTE_EMITTED_AT FROM maplemonk.Amazon_Advertisement_AA_Zouk_SPONSORED_DISPLAY_REPORT_STREAM WHERE RECORDTYPE = \'productAds\' ) a WHERE rw = 1 OR tt > 0 ) where rw2=1; CREATE OR REPLACE TABLE maplemonk.zouk_AMAZONADS_MARKETING AS with amazonAds as ( SELECT \'SPONSORED PRODUCTS\' CAMPAIGN_TYPE ,sp.PROFILEID ,DATE ,sp.CampaignId ,sp.campaignName ,sp.adGroupId ,sp.adGroupName ,sp.keywordText ,sp.campaignStatus ,sp.ASIN as Asin ,sp.adId ,sp.targetingExpression ,sp.targetingText ,sp.currency ,sp.region ,Null as NewToBrandOrders ,Null as NewToBrandSales ,Null as NewToBrandUnits ,sum(sp.impressions) as Impressions ,sum(sp.clicks) as Clicks ,sum(sp.cost) as Spend ,sum(sp.attributedSales7d) as AdSales ,sum(sp.attributedConversions7d) as Conversions ,sum(sp.attributedConversions14dSameSKU) as ConversionsSameSKU ,sum(sp.attributedSales14dSameSKU) as SalesSameSKU ,sum(sp.attributedSales14dOtherSKU) as OtherSKUSales ,(sum(sp.attributedConversions14d) - sum(sp.attributedConversions14dSameSKU)) as ConversionsOtherSKU FROM maplemonk.zouk_AA_Sponsored_Products_Intermediate sp WHERE sp.RECORDTYPE = \'productAds\' and not (ifnull(cost,0) = 0 and ifnull(Impressions,0) = 0 and ifnull(Clicks,0) = 0 and ifnull(attributedSales7d,0) = 0 and ifnull(attributedConversions7d,0) = 0 and ifnull(attributedConversions14dSameSKU,0) = 0 and ifnull(attributedSales14dSameSKU,0) = 0 and ifnull(attributedSales14dOtherSKU,0) = 0 and ifnull(attributedConversions14d,0) = 0) GROUP BY sp.DATE, sp.PROFILEID, sp.campaignId, sp.campaignName, sp.adGroupId, sp.adGroupName, sp.keywordText, sp.campaignStatus, sp.ASIN ,sp.adId, sp.targetingExpression, sp.targetingText, sp.targetingType, sp.currency, sp.region UNION ALL SELECT \'SPONSORED DISPLAY\' CAMPAIGN_TYPE ,sd.PROFILEID ,Date ,sd.campaignId as CampaignID ,sd.campaignName as CampaignName ,sd.adGroupId as AdGroupId ,sd.adGroupName as AdGroupName ,sd.keywordText as Keywordtext ,sd.campaignStatus as CampaignStatus ,sd.asin as Asin ,sd.adId as AdId ,sd.targetingExpression as TargetingExpression ,sd.targetingText as TargetingText ,sd.currency as Currency ,sd.region ,sum(sd.attributedOrdersNewToBrand14d) as NewToBrandOrders ,sum(sd.attributedSalesNewToBrand14d) as NewToBrandSales ,sum(sd.attributedUnitsOrderedNewToBrand14d) as NewToBrandUnits ,sum(sd.impressions) as Impressions ,sum(sd.clicks) as Clicks ,sum(sd.cost) as Spend ,sum(sd.attributedSales7d) as AdSales ,sum(sd.attributedConversions7d) as Conversions ,sum(sd.attributedConversions14dSameSKU) as ConversionsSameSKU ,sum(sd.attributedSales14dSameSKU) as SalesSameSKU ,sum(sd.attributedSales14dOtherSKU) as OtherSKUSales ,(sum(sd.attributedConversions14d) - sum(sd.attributedConversions14dSameSKU)) as ConversionsOtherSKU FROM maplemonk.zouk_AA_Sponsored_Display_Intermediate sd WHERE sd.RECORDTYPE = \'productAds\' and not (ifnull(cost,0) = 0 and ifnull(Impressions,0) = 0 and ifnull(Clicks,0) = 0 and ifnull(attributedSales7d,0) = 0 and ifnull(attributedConversions7d,0) = 0 and ifnull(attributedConversions14dSameSKU,0) = 0 and ifnull(attributedSales14dSameSKU,0) = 0 and ifnull(attributedSales14dOtherSKU,0) = 0 and ifnull(attributedConversions14d,0) = 0 and ifnull(attributedOrdersNewToBrand14d,0) = 0 and ifnull(attributedSalesNewToBrand14d,0) = 0 and ifnull(attributedUnitsOrderedNewToBrand14d,0) = 0) GROUP BY sd.DATE, sd.PROFILEID, sd.campaignId, sd.campaignName, sd.adGroupId, sd.adGroupName, sd.keywordText, sd.campaignStatus, sd.ASIN, sd.adId ,sd.targetingExpression, sd.targetingText, sd.targetingType, sd.currency, sd.region UNION ALL SELECT \'SPONSORED BRANDS\' CAMPAIGN_TYPE ,sb.PROFILEID ,Date ,sb.campaignId as CampaignID ,sb.campaignName as CampaignName ,sb.adGroupId as AdGroupId ,sb.adGroupName as AdGroupName ,sb.keywordText as Keywordtext ,sb.campaignStatus as CampaignStatus ,sb.asin as Asin ,sb.adId as AdId ,sb.targetingExpression as TargetingExpression ,sb.targetingText as TargetingText ,sb.currency as Currency ,sb.region ,sum(sb.attributedOrdersNewToBrand14d) as NewToBrandOrders ,sum(sb.attributedSalesNewToBrand14d) as NewToBrandSales ,sum(sb.attributedUnitsOrderedNewToBrand14d) as NewToBrandUnits ,sum(sb.impressions) as Impressions ,sum(sb.clicks) as Clicks ,sum(sb.cost) as Spend ,sum(sb.attributedSales14d) as AdSales ,sum(sb.attributedConversions14d) as Conversions ,sum(sb.attributedConversions14dSameSKU) as ConversionsSameSKU ,sum(sb.attributedSales14dSameSKU) as SalesSameSKU ,sum(sb.attributedSales14dOtherSKU) as OtherSKUSales ,(sum(sb.attributedConversions14d) - sum(sb.attributedConversions14dSameSKU)) as ConversionsOtherSKU FROM maplemonk.zouk_AA_Sponsored_Brands_Intermediate sb WHERE sb.RECORDTYPE = \'keywords\' and not (ifnull(cost,0) = 0 and ifnull(Impressions,0) = 0 and ifnull(Clicks,0) = 0 and ifnull(attributedSales14d,0) = 0 and ifnull(attributedConversions14d,0) = 0 and ifnull(attributedConversions14dSameSKU,0) = 0 and ifnull(attributedSales14dSameSKU,0) = 0 and ifnull(attributedSales14dOtherSKU,0) = 0 and ifnull(attributedConversions14d,0) = 0 and ifnull(attributedOrdersNewToBrand14d,0) = 0 and ifnull(attributedSalesNewToBrand14d,0) = 0 and ifnull(attributedUnitsOrderedNewToBrand14d,0) = 0) GROUP BY sb.DATE, sb.PROFILEID, sb.campaignId, sb.campaignName, sb.adGroupId, sb.adGroupName, sb.keywordText, sb.campaignStatus, sb.ASIN ,sb.adId, sb.targetingExpression, sb.targetingText, sb.targetingType, sb.currency, sb.region) select a.date as date ,a.asin as asin ,a.CAMPAIGN_TYPE ,a.PROFILEID ,a.CampaignID ,a.CampaignName ,a.AdGroupId ,a.AdGroupName ,a.KeywordText ,a.CampaignStatus ,a.AdId ,a.TargetingExpression ,a.TargetingText ,a.Currency ,a.NewToBrandOrders ,a.NewToBrandSales ,a.NewToBrandUnits ,a.Impressions ,a.Clicks ,a.spend ,a.AdSales ,a.Conversions ,a.ConversionsSameSKU ,a.SalesSameSKU ,a.OtherSKUSales ,a.ConversionsOtherSKU ,a.region from amazonAds a;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from maplemonk.INFORMATION_SCHEMA.TABLES
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            