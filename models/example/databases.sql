{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE RPSG_DB.maplemonk.CUSTOMER_RETENTION_DRV AS SELECT year(Acq_date) Acquisition_Year, monthname(Acq_date) Acquisition_Month, last_day(Acq_date) Year_Month, Acquisition_channel, Acquisition_Marketplace, Acquisition_Product, count(distinct customer_id_final) total_customers, count(distinct case when last_day(Acq_date)=last_day(order_date) then order_id end) total_orders, sum(case when last_day(Acq_date)=last_day(order_date) then selling_price end) total_sales, count(distinct case when last_day(Acq_date)<>last_day(order_date) then customer_id_final end) mn_c, count(distinct case when last_day(Acq_date)<>last_day(order_date) then order_id end) mn_o, sum(case when last_day(Acq_date)<>last_day(order_date) then selling_price end) mn_s, count(distinct case when acquisition_product=product_name and last_day(Acq_date)<>last_day(order_date) then customer_id_final end) product_mn_c, count(distinct case when acquisition_product=product_name and last_day(Acq_date)<>last_day(order_date) then order_id end) product_mn_o, sum(case when acquisition_product=product_name and last_day(Acq_date)<>last_day(order_date) then selling_price end) product_mn_s, count(distinct case when last_day(dateadd(month,1,Acq_date))=last_day(order_date) then customer_id_final end) m2_c, count(distinct case when last_day(dateadd(month,2,Acq_date))=last_day(order_date) then customer_id_final end) m3_c, count(distinct case when last_day(dateadd(month,3,Acq_date))=last_day(order_date) then customer_id_final end) m4_c, count(distinct case when last_day(dateadd(month,4,Acq_date))=last_day(order_date) then customer_id_final end) m5_c, count(distinct case when last_day(dateadd(month,5,Acq_date))=last_day(order_date) then customer_id_final end) m6_c, count(distinct case when last_day(dateadd(month,6,Acq_date))=last_day(order_date) then customer_id_final end) m7_c, count(distinct case when last_day(dateadd(month,7,Acq_date))=last_day(order_date) then customer_id_final end) m8_c, count(distinct case when last_day(dateadd(month,8,Acq_date))=last_day(order_date) then customer_id_final end) m9_c, count(distinct case when last_day(dateadd(month,9,Acq_date))=last_day(order_date) then customer_id_final end) m10_c, count(distinct case when last_day(dateadd(month,10,Acq_date))=last_day(order_date) then customer_id_final end) m11_c, count(distinct case when last_day(dateadd(month,11,Acq_date))=last_day(order_date) then customer_id_final end) m12_c, count(distinct case when last_day(dateadd(month,1,Acq_date))=last_day(order_date) then order_id end) m2_o, count(distinct case when last_day(dateadd(month,2,Acq_date))=last_day(order_date) then order_id end) m3_o, count(distinct case when last_day(dateadd(month,3,Acq_date))=last_day(order_date) then order_id end) m4_o, count(distinct case when last_day(dateadd(month,4,Acq_date))=last_day(order_date) then order_id end) m5_o, count(distinct case when last_day(dateadd(month,5,Acq_date))=last_day(order_date) then order_id end) m6_o, count(distinct case when last_day(dateadd(month,6,Acq_date))=last_day(order_date) then order_id end) m7_o, count(distinct case when last_day(dateadd(month,7,Acq_date))=last_day(order_date) then order_id end) m8_o, count(distinct case when last_day(dateadd(month,8,Acq_date))=last_day(order_date) then order_id end) m9_o, count(distinct case when last_day(dateadd(month,9,Acq_date))=last_day(order_date) then order_id end) m10_o, count(distinct case when last_day(dateadd(month,10,Acq_date))=last_day(order_date) then order_id end) m11_o, count(distinct case when last_day(dateadd(month,11,Acq_date))=last_day(order_date) then order_id end) m12_o, sum(case when last_day(dateadd(month,1,Acq_date))=last_day(order_date) then selling_price end) m2_s, sum(case when last_day(dateadd(month,2,Acq_date))=last_day(order_date) then selling_price end) m3_s, sum(case when last_day(dateadd(month,3,Acq_date))=last_day(order_date) then selling_price end) m4_s, sum(case when last_day(dateadd(month,4,Acq_date))=last_day(order_date) then selling_price end) m5_s, sum(case when last_day(dateadd(month,5,Acq_date))=last_day(order_date) then selling_price end) m6_s, sum(case when last_day(dateadd(month,6,Acq_date))=last_day(order_date) then selling_price end) m7_s, sum(case when last_day(dateadd(month,7,Acq_date))=last_day(order_date) then selling_price end) m8_s, sum(case when last_day(dateadd(month,8,Acq_date))=last_day(order_date) then selling_price end) m9_s, sum(case when last_day(dateadd(month,9,Acq_date))=last_day(order_date) then selling_price end) m10_s, sum(case when last_day(dateadd(month,10,Acq_date))=last_day(order_date) then selling_price end) m11_s, sum(case when last_day(dateadd(month,11,Acq_date))=last_day(order_date) then selling_price end) m12_s, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,1,Acq_date))= last_day(order_date) then customer_id_final end) product_m2_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,2,Acq_date))= last_day(order_date) then customer_id_final end) product_m3_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,3,Acq_date))= last_day(order_date) then customer_id_final end) product_m4_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,4,Acq_date))= last_day(order_date) then customer_id_final end) product_m5_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,5,Acq_date))= last_day(order_date) then customer_id_final end) product_m6_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,6,Acq_date))= last_day(order_date) then customer_id_final end) product_m7_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,7,Acq_date))= last_day(order_date) then customer_id_final end) product_m8_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,8,Acq_date))= last_day(order_date) then customer_id_final end) product_m9_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,9,Acq_date))= last_day(order_date) then customer_id_final end) product_m10_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,10,Acq_date))= last_day(order_date) then customer_id_final end) product_m11_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,11,Acq_date))= last_day(order_date) then customer_id_final end) product_m12_c, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,1,Acq_date))= last_day(order_date) then order_id end) product_m2_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,2,Acq_date))= last_day(order_date) then order_id end) product_m3_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,3,Acq_date))= last_day(order_date) then order_id end) product_m4_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,4,Acq_date))= last_day(order_date) then order_id end) product_m5_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,5,Acq_date))= last_day(order_date) then order_id end) product_m6_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,6,Acq_date))= last_day(order_date) then order_id end) product_m7_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,7,Acq_date))= last_day(order_date) then order_id end) product_m8_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,8,Acq_date))= last_day(order_date) then order_id end) product_m9_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,9,Acq_date))= last_day(order_date) then order_id end) product_m10_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,10,Acq_date))= last_day(order_date) then order_id end) product_m11_o, count(distinct case when acquisition_product=product_name and last_day(dateadd(month,11,Acq_date))= last_day(order_date) then order_id end) product_m12_o, sum(case when acquisition_product=product_name and last_day(dateadd(month,1,Acq_date))=last_day(order_date) then selling_price end) product_m2_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,2,Acq_date))=last_day(order_date) then selling_price end) product_m3_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,3,Acq_date))=last_day(order_date) then selling_price end) product_m4_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,4,Acq_date))=last_day(order_date) then selling_price end) product_m5_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,5,Acq_date))=last_day(order_date) then selling_price end) product_m6_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,6,Acq_date))=last_day(order_date) then selling_price end) product_m7_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,7,Acq_date))=last_day(order_date) then selling_price end) product_m8_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,8,Acq_date))=last_day(order_date) then selling_price end) product_m9_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,9,Acq_date))=last_day(order_date) then selling_price end) product_m10_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,10,Acq_date))=last_day(order_date) then selling_price end) product_m11_s, sum(case when acquisition_product=product_name and last_day(dateadd(month,11,Acq_date))=last_day(order_date) then selling_price end) product_m12_s from ( select customer_id_final, order_id, acquisition_product, acquisition_channel, acquisition_marketplace, category as product_name, order_date, selling_price, acquisition_date::date as acq_Date from RPSG_DB.maplemonk.SALES_CONSOLIDATED_DRV where customer_id_final is not null and lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) )res group by year(Acq_date), monthname(Acq_date), last_day(Acq_date), acquisition_channel, acquisition_marketplace, Acquisition_Product; create or replace table rpsg_db.maplemonk.category_month_customer_drv as select distinct last_day(order_date) Month_last_day ,category ,customer_id_final from rpsg_db.maplemonk.sales_consolidated_drv; create or replace table rpsg_db.maplemonk.product_retention_summary_drv as select Month_last_day ,category ,Total_Customers_with_purchase ,First_time_product_purchase ,More_than_once_customers ,sum(First_time_product_purchase) over (partition by category order by Month_last_day ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING ) Atleast_One_Purchase_before_Customers from ( select Month_last_day ,category ,count(distinct case when Current_Month_Orders >=1 then customer_id_final end) Total_Customers_with_purchase ,count (distinct case when Orders_Till_Last_Month = 0 and Current_Month_Orders >=1 then customer_id_final end) First_time_product_purchase ,count (distinct case when Orders_Till_Last_Month > 0 and Current_Month_Orders >=1 then customer_id_final end) More_than_once_customers from ( select Month_last_day ,CMC.category ,CMC.customer_id_final ,count(distinct SCL.order_id) Orders_Till_Last_Month ,count(distinct SC.order_id) Current_Month_Orders from rpsg_db.maplemonk.category_month_customer_drv CMC left join (select distinct order_Date ,category ,customer_id_final ,order_id from rpsg_db.maplemonk.sales_consolidated_drv where lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) ) SCL on last_day(SCL.order_date) < CMC.MONTH_LAST_DAY and SCL.CATEGORY = CMC.CATEGORY and SCL.Customer_id_final = CMC.CUSTOMER_ID_FINAL left join (select distinct order_Date ,category ,customer_id_final ,order_id from rpsg_db.maplemonk.sales_consolidated_drv where lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) ) SC on last_day(SC.order_date) = CMC.MONTH_LAST_DAY and SC.CATEGORY = CMC.CATEGORY and SC.customer_id_final = CMC.customer_id_final group by 1,2,3 order by 1 desc ) group by 1,2 order by 1 desc ) order by 1 desc; create or replace table rpsg_db.maplemonk.monthly_retention_drv as with cust as ( select date_trunc(\'month\',order_date::date) Date_Start ,month(date_start) month ,year(date_Start) year ,customer_id_final ,max(case when lower(new_customer_flag_month) = \'new\' then 1 else 0 end) as new_flag ,max(case when lower(new_customer_flag_month) = \'repeat\' then 1 else 0 end) as repeat_flag from rpsg_db.maplemonk.sales_consolidated_drv where lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) group by 1,2,3,4 ), months as ( select distinct date_trunc(\'month\',order_date::date) date_start from rpsg_db.maplemonk.sales_consolidated_drv where lower(shop_name) like any (\'%shopify%\',\'%woocommerce%\') ), All_Customers as ( select date_trunc(\'month\',Date_Start::date) Date_Start ,month(date_start) month ,year(date_Start) year ,count(distinct customer_id_final) All_customers ,sum(new_flag) TM_New_Customers ,sum(repeat_flag) TM_Repeat_Customers from cust group by 1,2,3 ) ,All_Customers_Till_LM as ( select a.month ,a.year ,a.date_start,All_customers_Till_LM ,count(distinct c.customer_id_final ) All_customers_LTM ,count(distinct case when c.new_flag = 1 then c.customer_id_final end) as New_customers_LTM from ( select month(a.date_start) month ,year(a.date_Start) year ,a.date_start ,count(distinct b.customer_id_final ) All_customers_Till_LM from months a left join cust b on b.Date_Start < a.date_start group by 1,2,3 ) a left join cust c on c.Date_Start < a.date_start and c.date_start >= date_trunc(\'month\',a.date_start -365) group by 1,2,3,4 ) Select TM.Date_Start ,TM.month ,TM.year ,TM.All_customers TM_All_customers ,(sum(TM.all_customers) over (partition by 1 order by TM.date_start asc rows between 1 preceding and current row) - TM.All_customers) All_Customers_LM ,TM.TM_New_Customers ,(sum(TM.TM_New_Customers) over (partition by 1 order by TM.date_start asc rows between 1 preceding and current row) - TM.TM_New_Customers) LM_New_Customers ,TM.TM_Repeat_Customers ,TLM.All_customers_Till_LM ,TLM.All_customers_LTM ,TLM.New_customers_LTM from All_customers TM left join All_Customers_Till_LM TLM on TM.date_Start = TLM.date_Start; create or replace table rpsg_db.maplemonk.customers_post_acquisition_month_drv as with MONTHS_FROM_ACQ as (select date_trunc(\'month\',order_date::date) Order_Month ,date_trunc(\'month\',acquisition_date::date) Acquisition_Month ,MONTHS_FROM_ACQ ,count(distinct customer_id_final) customers ,sum(Booked_Revenue) Booked_Revenue from (select order_id ,order_date ,customer_id_final ,acquisition_date ,datediff(month,acquisition_date::DATE, order_date::DATE) MONTHS_FROM_ACQ ,sum(selling_price) Booked_Revenue from rpsg_db.maplemonk.sales_consolidated_drv where lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) group by 1,2,3,4,5 ) group by 1,2,3 order by 1 desc ) ,Acquired_Customers as ( select date_trunc(\'month\',acquisition_date::DATE) acquisition_month ,count(distinct customer_id_final) acquired_customers from rpsg_db.maplemonk.sales_consolidated_drv where lower(acquisition_marketplace) like any (\'%shopify%\',\'%woocommerce%\') and lower(marketplace) like any (\'%shopify%\',\'%woocommerce%\') and (case when lower(order_status) is null then 1=1 else lower(order_status) not in (\'cancelled\',\'returned\') end) and (case when lower(shipping_status) is null then 1=1 else lower(shipping_status) not in (\'cancelled\',\'returned\') end) group by 1 order by 1 desc ) select mfa.Order_Month ,mfa.acquisition_month ,mfa.MONTHS_FROM_ACQ ,mfa.customers ,mfa.Booked_Revenue ,ac.acquired_customers from MONTHS_FROM_ACQ mfa left join Acquired_Customers ac on mfa.Acquisition_Month = ac.acquisition_month;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from RPSG_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        