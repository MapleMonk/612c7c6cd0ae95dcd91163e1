{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE VAHDAM_DB.MAPLEMONK.India_DSR AS WITH CTE AS (SELECT FI.ORDER_TIMESTAMP::date AS DATE, UPPER(DAYNAME(FI.ORDER_TIMESTAMP::DATE)) AS Day, SUM(CASE WHEN FI.shop_name=\'Shopify_India\' THEN FI.Net_Sales_INR END) AS Shopify_India_Sales_INR, sum(case when FI.shop_name=\'Shopify_India\' and customer_flag = \'New\' then FI.Net_Sales_INR END) as Repeat_Revenue_INR, count(distinct case when FI.shop_name=\'Shopify_India\' and customer_flag = \'Repeated\' then customer_id end) as Repeat_customers FROM Vahdam_db.maplemonk.FACT_ITEMS FI WHERE FI.is_refund=0 GROUP BY FI.ORDER_TIMESTAMP::date ORDER BY FI.ORDER_TIMESTAMP::date DESC) SELECT CTE.*, AIN.AMAZON_ADS_IN_SPEND_SPONSORED_PRODUCTS, AIN.AMAZON_ADS_IN_SPEND_SPONSORED_DISPLAY, AIN.AMAZON_ADS_IN_SPEND_SPONSORED_BRANDS_VIDEO, AIN.AMAZON_ADS_IN_SPEND_SPONSORED_BRANDS, FG.GOOGLE_ADS_INDIA_SPEND, FG.FACEBOOK_ADS_INDIA_SPEND, AZS.net_sales_inr AS Amazon_India_Sales_INR, AZS.ORDERS as Amazon_India_Orders, AZS.QUANTITY as Amazon_India_Quantity, ASPS.sessions as Sessions_India FROM CTE LEFT JOIN (SELECT DATE, SUM(CASE WHEN CAMPAIGN_TYPE=\'Sponsored Products\' THEN SPEND END) AS AMAZON_ADS_IN_SPEND_SPONSORED_PRODUCTS, SUM(CASE WHEN CAMPAIGN_TYPE=\'Sponsored Display\' THEN SPEND END) AS AMAZON_ADS_IN_SPEND_SPONSORED_DISPLAY, SUM(CASE WHEN CAMPAIGN_TYPE=\'Sponsored Brands Video\' THEN SPEND END) AS AMAZON_ADS_IN_SPEND_SPONSORED_BRANDS_VIDEO, SUM(CASE WHEN CAMPAIGN_TYPE=\'Sponsored Brands\' THEN SPEND END) AS AMAZON_ADS_IN_SPEND_SPONSORED_BRANDS FROM Vahdam_db.maplemonk.AMAZONADS_IN_MARKETING GROUP BY DATE) AIN ON CTE.DATE=AIN.DATE LEFT JOIN (SELECT DATE, SUM(CASE WHEN CHANNEL=\'Google Ads\' THEN SPEND END) AS GOOGLE_ADS_INDIA_SPEND, SUM(CASE WHEN CHANNEL=\'Facebook Ads\' THEN SPEND END) AS FACEBOOK_ADS_INDIA_SPEND FROM Vahdam_db.maplemonk.MARKETING_CONSOLIDATED_IN GROUP BY DATE) FG ON CTE.DATE=FG.DATE LEFT JOIN ( select convert_timezone(\'UTC\', \'Asia/Kolkata\', ADE.\"purchase-date\"::datetime)::date AS DATE ,sum(ifnull(try_cast(ADE.\"item-price\" as float),0) - ifnull(try_cast(ADE.\"item-promotion-discount\" as float),0)) as net_sales_inr ,sum(ifnull(try_cast(ADE.QUANTITY as float), 0)) as Quantity ,count(distinct ADE.\"amazon-order-id\") Orders from \"VAHDAM_DB\".\"MAPLEMONK\".\"ASP_IN_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_GENERAL\" ADE where ADE.\"sales-channel\" = \'Amazon.in\' and lower(ADE.\"order-status\") <> \'cancelled\' group by convert_timezone(\'UTC\', \'Asia/Kolkata\', ADE.\"purchase-date\"::datetime)::date order by convert_timezone(\'UTC\', \'Asia/Kolkata\', ADE.\"purchase-date\"::datetime)::date desc) AZS ON CTE.DATE=AZS.DATE LEFT JOIN (select DATE, sum(TRAFFICBYDATE:browserSessions::float) browserSessions, sum(TRAFFICBYDATE:mobileAppSessions::float) mobileAppSessions, sum(TRAFFICBYDATE:sessions::float) sessions, sum(TRAFFICBYDATE:browserPageViews::float) browserPageViews, sum(TRAFFICBYDATE:mobileAppPageViews::float) mobileAppPageViews, sum(TRAFFICBYDATE:pageViews::float) pageViews, sum(TRAFFICBYDATE:buyBoxPercentage::float) buyBoxPercentage from \"VAHDAM_DB\".\"MAPLEMONK\".ASP_IN_GET_SALES_AND_TRAFFIC_REPORT_DATE group by DATE) ASPS ON CTE.DATE = ASPS.DATE ORDER BY CTE.DATE DESC;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from VAHDAM_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        