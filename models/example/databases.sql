{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "Create or replace table eggozdb.Maplemonk.Sales_summary_beat_retailer_DSO as select date ,area_classification ,beat_name ,beat_number_operations ,beat_number_original ,code ,SKU ,name classification_name ,sum(sales_per_item) Net_sales from ( select cast(timestampadd(minute,330,o.date) as date) Date ,o.id ,ol1.id ,rr.area_classification Area_Classification ,rr.code ,ba.beat_name ,ba.beat_number beat_number_operations ,rr.beat_number beat_number_original ,rc.name ,rr.onboarding_status ,sum(o.order_price_amount-scheme_discount_amount)/sum(ol2.Items) Sales_per_item ,concat(pp.sku_count,left(pp.name,1)) SKU from eggozdb.Maplemonk.my_sql_order_order o left join eggozdb.Maplemonk.my_sql_order_orderline ol1 ON o.id=ol1.order_id left join eggozdb.Maplemonk.my_sql_product_product pp ON ol1.product_id =pp.id left join eggozdb.Maplemonk.my_sql_retailer_retailer rr ON o.retailer_id =rr.id left join eggozdb.Maplemonk.my_sql_retailer_classification rc ON rr.classification_id = rc.id left join eggozdb.maplemonk.my_sql_distributionchain_beatassignment ba on ba.id = o.beat_assignment_id left join (select order_id, COUNT(1) AS Items from eggozdb.Maplemonk.my_sql_order_orderline group by order_id) ol2 ON o.id=ol2.order_id WHERE o.status in (\'delivered\', \'completed\') and o.is_trial = \'FALSE\' and o.order_brand_type = \'branded\' group by cast(timestampadd(minute,330,o.date) as date) , rr.area_classification, rr.code, ba.beat_name,ba.beat_number, o.id, ol1.id, concat(pp.sku_count,left(pp.name,1)),rc.name, rr.onboarding_status,rr.beat_number ) group by date ,area_classification, beat_name, code, SKU, name, onboarding_status,beat_number_operations, beat_number_original ; CREATE OR REPLACE TABLE eggozdb.maplemonk.Summary_reporting_table_beat_retailer_DSO as WITH SALES_SUMMARY_beat_retailer_CTE AS ( select DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name, SUM(NET_SALES)AS NET_SALES from eggozdb.maplemonk.SALES_SUMMARY_BEAT_RETAILER_DSO GROUP BY DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name), Replacement_Summary_beat_retailer_CTE AS ( SELECT DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name, sum(EGGS_REPLACED_WHITE)EGGS_REPLACED_WHITE, sum(EGGS_REPLACED_BROWN)EGGS_REPLACED_BROWN, sum(EGGS_REPLACED_NUTRA)EGGS_REPLACED_NUTRA, sum(EGGS_REPLACED_LIQUID)EGGS_REPLACED_LIQUID, sum(EGGS_REPLACED)EGGS_REPLACED FROM eggozdb.maplemonk.Replacement_Summary_beat_retailer GROUP BY DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name), EGGS_SOLD_SUMMARY_BEAT_RETAILER_CTE AS ( select DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name, sum(EGGS_SOLD_WHITE)EGGS_SOLD_WHITE, sum(EGGS_SOLD_BROWN)EGGS_SOLD_BROWN, sum(EGGS_SOLD_NUTRA)EGGS_SOLD_NUTRA, sum(EGGS_SOLD_LIQUID)EGGS_SOLD_LIQUID, sum(EGGS_SOLD)EGGS_SOLD FROM eggozdb.maplemonk.EGGS_SOLD_SUMMARY_BEAT_RETAILER GROUP BY DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name), Promo_Summary_beat_retailer_CTE AS ( SELECT DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name, sum(EGGS_PROMO_WHITE)EGGS_PROMO_WHITE, sum(EGGS_PROMO_BROWN)EGGS_PROMO_BROWN, sum(EGGS_PROMO_NUTRA)EGGS_PROMO_NUTRA, sum(EGGS_PROMO_LIQUID)EGGS_PROMO_LIQUID, sum(EGGS_PROMO)EGGS_PROMO FROM eggozdb.maplemonk.Promo_Summary_beat_retailer GROUP BY DATE, AREA_CLASSIFICATION, BEAT_NAME, beat_number_operations, beat_number_original, CODE, classification_name) select v.*,mp.name Parent_retailer_name ,case when v.beat_number_operations = 0 then v.beat_number_original else v.beat_number_operations end as beat_number_consolidated from ( select w.*,(case when k.collections_as_of_today is null then 0 else k.collections_as_of_today end) collections_as_of_today from( select (case when x.date is not null then x.date else p.date end) date ,(case when x.area_classification is not null then x.area_classification else p.area_classification end) Area ,(case when x.beat_name is not null then x.beat_name else p.beat_name end) Beat_Name ,(case when x.beat_number_operations is not null then x.beat_number_operations else p.beat_number_operations end) beat_number_operations ,(case when x.beat_number_original is not null then x.beat_number_original else p.beat_number_original end) beat_number_original ,(case when x.code is not null then x.code else p.code end) Retailer_Name ,(case when x.classification_name is not null then x.classification_name else p.classification_name end) classification_name ,(case when NET_SALES is null then 0 else NET_SALES end) Net_Sales ,(case when eggs_sold is null then 0 else eggs_sold end) eggs_sold ,(case when eggs_sold_white is null then 0 else Eggs_sold_white end) Eggs_sold_white ,(case when Eggs_sold_brown is null then 0 else Eggs_sold_brown end) Eggs_sold_brown ,(case when Eggs_sold_nutra is null then 0 else Eggs_sold_nutra end) Eggs_sold_nutra ,(case when Eggs_sold_liquid is null then 0 else Eggs_sold_liquid end) Eggs_sold_liquid ,(case when collections is null then 0 else collections end) collections ,(case when eggs_replaced is null then 0 else eggs_replaced end) eggs_replaced ,(case when eggs_replaced_white is null then 0 else eggs_replaced_white end) eggs_replaced_white ,(case when eggs_replaced_brown is null then 0 else eggs_replaced_brown end) eggs_replaced_brown ,(case when eggs_replaced_nutra is null then 0 else eggs_replaced_nutra end) eggs_replaced_nutra ,(case when eggs_replaced_liquid is null then 0 else eggs_replaced_liquid end) eggs_replaced_liquid ,(case when eggs_promo is null then 0 else eggs_promo end) eggs_promo ,(case when eggs_promo_white is null then 0 else eggs_promo_white end) eggs_promo_white ,(case when eggs_promo_brown is null then 0 else eggs_promo_brown end) eggs_promo_brown ,(case when eggs_promo_nutra is null then 0 else eggs_promo_nutra end) eggs_promo_nutra ,(case when eggs_promo_liquid is null then 0 else eggs_promo_liquid end) eggs_promo_liquid from( select (case when y.date is not null then y.date else e.date end) date ,(case when y.area_classification is not null then y.area_classification else e.area_classification end) area_classification ,(case when y.beat_name is not null then y.beat_name else e.beat_name end) Beat_Name ,(case when y.beat_number_operations is not null then y.beat_number_operations else e.beat_number_operations end) beat_number_operations ,(case when y.beat_number_original is not null then y.beat_number_original else e.beat_number_original end) beat_number_original ,(case when y.code is not null then y.code else e.code end) code ,(case when y.classification_name is not null then y.classification_name else e.classification_name end) classification_name ,NET_SALES ,collections ,eggs_replaced ,eggs_replaced_white ,eggs_replaced_brown ,eggs_replaced_nutra ,eggs_replaced_liquid ,eggs_sold ,eggs_sold_white ,eggs_sold_brown ,eggs_sold_nutra ,eggs_sold_liquid from (select (case when z.date is not null then z.date else c.date end) date ,(case when z.area_classification is not null then z.area_classification else c.area_classification end) area_classification ,(case when z.beat_name is not null then z.beat_name else c.beat_name end) beat_name ,(case when z.beat_number_operations is not null then z.beat_number_operations else c.beat_number_operations end) beat_number_operations ,(case when z.beat_number_original is not null then z.beat_number_original else c.beat_number_original end) beat_number_original ,(case when z.code is not null then z.code else c.code end) code ,(case when z.classification_name is not null then z.classification_name else c.classification_name end) classification_name ,NET_SALES ,collections ,eggs_replaced ,eggs_replaced_white ,eggs_replaced_brown ,eggs_replaced_nutra ,eggs_replaced_liquid from (select (case when a.date is not null then a.date else b.date end) date ,(case when a.area_classification is not null then a.area_classification else b.area_classification end) area_classification ,(case when a.beat_name is not null then a.beat_name else b.beat_name end) beat_name ,(case when a.beat_number_operations is not null then a.beat_number_operations else b.beat_number_operations end) beat_number_operations ,(case when a.beat_number_original is not null then a.beat_number_original else b.beat_number_original end) beat_number_original ,(case when a.code is not null then a.code else b.code end) code ,(case when a.classification_name is not null then a.classification_name else b.classification_name end) classification_name ,NET_SALES ,collections from SALES_SUMMARY_beat_retailer_CTE a full outer join eggozdb.maplemonk.Collection_Summary_beat_retailer b on a.area_classification = b.area_classification and a.date = b.date and a.code = b.code and a.beat_name = b.beat_name and a.beat_number_operations = b.beat_number_operations and a.beat_number_original = b.beat_number_original and a.classification_name = b.classification_name ) z full outer join Replacement_Summary_beat_retailer_CTE c on z.area_classification = c.area_classification and z.date = c.date and z.code = c.code and z.beat_name = c.beat_name and z.beat_number_operations = c.beat_number_operations and z.beat_number_original = c.beat_number_original and z.classification_name = c.classification_name ) y full outer join EGGS_SOLD_SUMMARY_BEAT_RETAILER_CTE e on e.area_Classification = y.area_classification and e.date = y.date and e.code = y.code and e.beat_name = y.beat_name and e.beat_number_operations = y.beat_number_operations and e.beat_number_original = y.beat_number_original and e.classification_name = y.classification_name )x full outer join Promo_Summary_beat_retailer_CTE p on p.area_Classification = x.area_classification and p.date = x.date and p.code = x.code and p.beat_name = x.beat_name and p.beat_number_operations = x.beat_number_operations and p.beat_number_original = x.beat_number_original and p.classification_name = x.classification_name )w left join eggozdb.maplemonk.Pendency_beat_retailer k on w.area = k.area_classification and w.date = k.date and w.Retailer_Name = k.code and w.beat_name = k.beat_name and w.beat_number_operations = k.beat_number_operations and w.beat_number_original = k.beat_number_original and w.classification_name = k.classification_name )v left join eggozdb.maplemonk.mapping_parent_retailers mp on mp.code = v.retailer_name ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        