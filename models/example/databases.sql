{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.maplemonk.store_wise_daily_orders as WITH UnitsSold AS ( SELECT SKU, SKU_GROUP, category, source AS MAP, marketplace_mapped, COALESCE(SUM(suborder_quantity), 0) AS total_units_sold, COALESCE(SUM(selling_price), 0) AS total_sales, COALESCE(SUM(return_quantity), 0) AS total_return_quantity, COALESCE(SUM(discount), 0) AS total_discount, order_date, EXTRACT(MONTH FROM order_date) AS month, SUBSTRING(sku, LEN(sku) - CHARINDEX(\'-\', REVERSE(sku)) + 2, LEN(sku)) AS size FROM snitch_db.MAPLEMONK.UNICOMMERCE_FACT_ITEMS_SNITCH WHERE SOURCE IN (\'POS1\', \'POS-2\', \'POS-3\', \'POS-4\') GROUP BY SKU, SKU_GROUP, MAP, order_date, month, category, size, marketplace_mapped ), UnitsOnHandInStore AS ( SELECT LOGICUSERCODE, SUM(STOCK_QTY) AS units_in_hand_store, Branch_code, Branch_Name, CASE WHEN Branch_code = 3 THEN \'POS1\' WHEN Branch_code = 6 THEN \'POS-4\' WHEN Branch_code = 5 THEN \'POS-3\' WHEN Branch_code = 4 THEN \'POS-2\' END AS source_uoh FROM snitch_db.MAPLEMONK.LOGICERP_GET_STOCK_IN_HAND GROUP BY LOGICUSERCODE, Branch_code, Branch_Name, source_uoh ), UnitsInWarehouse AS ( SELECT SKU, SUM(UNITS_ON_HAND) AS units_on_hand_warehouse FROM snitch_db.MAPLEMONK.INVENTORY_AGING_BUCKETS_SNITCH GROUP BY SKU ), FirstOrderDate AS ( SELECT SKU, source as abc, MIN(order_date) AS first_order_date FROM snitch_db.MAPLEMONK.UNICOMMERCE_FACT_ITEMS_SNITCH WHERE source IN (\'POS1\', \'POS-2\', \'POS-3\', \'POS-4\') GROUP BY SKU,abc ) , RateOfSale AS ( SELECT us.SKU as sku1, us.source as code, div0(SUM(us.suborder_quantity), (DATEDIFF(DAY, max(fod.first_order_date), CURRENT_DATE))) AS rate_of_sale FROM snitch_db.MAPLEMONK.UNICOMMERCE_FACT_ITEMS_SNITCH us JOIN FirstOrderDate fod ON us.source = fod.abc and us.SKU = fod.SKU WHERE source IN (\'POS1\', \'POS-2\', \'POS-3\', \'POS-4\') GROUP BY SKU1,code ) SELECT us.sku, us.sku_group, us.order_date, us.category, us.size, us.marketplace_mapped, us.MAP AS source, total_units_sold, total_sales, total_return_quantity, total_discount, rate_of_sale, units_in_hand_store, units_on_hand_warehouse, case when source in (\'POS1\',\'POS-4\') then 4 else 6 end as Buffer, CASE WHEN round(COALESCE(ros.rate_of_sale, 0)*Buffer,0) - COALESCE(uh.units_in_hand_store, 0) > 0 THEN CASE WHEN (round(COALESCE(ros.rate_of_sale, 0)*Buffer,0) - COALESCE(uh.units_in_hand_store, 0)) > COALESCE(uw.units_on_hand_warehouse, 0) THEN COALESCE(uw.units_on_hand_warehouse, 0) ELSE (round(COALESCE(ros.rate_of_sale, 0)*Buffer,0) - COALESCE(uh.units_in_hand_store, 0)) END ELSE 0 END AS order_today, case when uw.units_on_hand_warehouse is not null then \'In Stock\' else \'No Stock\' end as Availibity FROM UnitsSold us LEFT JOIN RateOfSale ros ON us.MAP = ros.code and us.SKU = ros.SKU1 LEFT JOIN UnitsOnHandInStore uh ON us.MAP = uh.source_uoh AND us.SKU = uh.LOGICUSERCODE LEFT JOIN UnitsInWarehouse uw ON us.SKU = uw.SKU ORDER BY units_in_hand_store DESC",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        