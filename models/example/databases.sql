{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table mymuse_db.maplemonk.mymuse_db_inventory_fact_items as with sku_list as ( select * from (select replace(\"Modified SKU\",\'\\'\',\'\') SKU ,name ,colour ,category ,\"Category 2\" Category_2 ,\"Produce Generic Name\" Product_Final_Name ,active ,row_number() over (partition by lower(\"Modified SKU\") order by 1) rw from mymuse_db.maplemonk.sku_inventory_mapping where active = 1 ) where rw=1 ), Inventory_Data_Base as ( select * from (select COMPANYID ,COMPANYNAME ,try_to_timestamp(CREATIONDATE) CREATIONDATE ,try_to_timestamp(LASTUPDATEDATE) LASTUPDATEDATE ,try_to_timestamp(DATA_FETCH_DATE) DATA_FETCH_DATE ,replace(SKU,\'\\'\',\'\') SKU ,ACCOUNTINGSKU ,PRODUCTID ,COMPANYPRODUCTID ,MODELNO ,PRODUCTUNIQUECODE ,PRODUCTNAME ,DESCRIPTION ,IS_COMBO ,IMAGEURL ,SIZE ,BRAND ,CATEGORY ,COLOR ,WIDTH ,HEIGHT ,LENGTH ,WEIGHT ,MRP ,COST ,LOCATION_KEY ,ACCOUNTINGUNIT ,RESERVEDINVENTORY ,AVAILABLEINVENTORY ,INVENTORYTHRESHOLD ,SELLINGPRICETHRESHOLD ,row_number() over (partition by companyid,location_key,replace(SKU,\'\\'\',\'\'), productid, try_to_date(data_fetch_date) order by DATA_FETCH_DATE desc) rw from mymuse_db.maplemonk.easyecom_easyecom_mymuse_new_inventory_details ) where rw = 1 and location_key in (\'ur4982101056\',\'en10755971521\') ), Inventory_Data as ( select DATA_FETCH_DATE ,SKU ,PRODUCTID ,PRODUCTNAME ,SIZE ,BRAND ,CATEGORY ,COLOR ,sum(ifnull(AVAILABLEINVENTORY,0)) AVAILABLEINVENTORY from Inventory_Data_Base group by 1,2,3,4,5,6,7,8 ), Sales_Data_Daily as ( SELECT order_date, REPLACE(SKU_CODE_CHILD, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity_child, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity_child, 0)) AS RETURNED_QUANTITY FROM mymuse_db.maplemonk.mymuse_db_sales_consolidated GROUP BY 1, 2 ), Sales_Data_Max_Weekly as ( WITH WeeklySales AS ( SELECT date_trunc(\'week\', order_date) AS week_Start, REPLACE(SKU_CODE_CHILD, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity_child, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity_child, 0)) AS RETURNED_QUANTITY FROM mymuse_db.maplemonk.mymuse_db_sales_consolidated where datediff(day,order_date,current_date()) <=56 GROUP BY 1, 2 ) SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY FROM ( SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY, row_number() OVER (PARTITION BY SKU ORDER BY QUANTITY DESC) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1 ), Sales_Data_Min_Weekly as ( WITH WeeklySales AS ( SELECT date_trunc(\'week\', order_date) AS week_Start, REPLACE(SKU_CODE_CHILD, \'\\'\', \'\') AS SKU, SUM(IFNULL(quantity_child, 0)) AS QUANTITY, SUM(IFNULL(returned_quantity_child, 0)) AS RETURNED_QUANTITY FROM mymuse_db.maplemonk.mymuse_db_sales_consolidated where datediff(day,order_date,current_date()) <=56 GROUP BY 1, 2 ) SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY FROM ( SELECT week_Start, SKU, QUANTITY, RETURNED_QUANTITY, row_number() OVER (PARTITION BY SKU ORDER BY QUANTITY) AS ranking FROM WeeklySales ) ranked_weekly_sales WHERE ranking = 1 ), Sales_56avg_w_Inv as ( select ID.DATA_FETCH_DATE ,coalesce(ID.SKU, SL.SKU) SKU ,ID.productid ,SL.active ,coalesce(SL.Product_Final_Name, ID.PRODUCTNAME) Product_Final_Name ,coalesce(SL.Category, ID.category) Category ,SL.Category_2 ,coalesce(SL.Colour, ID.COLOR) COLOR ,max(case when lower(SL.category_2) like \'%massager%\' then ifnull(ID.availableinventory,0) else 0 end) Massager_Inventory ,max(case when lower(SL.category_2) like \'%device%\' then ifnull(ID.availableinventory,0) else 0 end) Device_Inventory ,max(case when not (lower(SL.category_2) like any (\'%device%\',\'%massager%\')) then ifnull(ID.availableinventory,0) else 0 end) Other_Inventory ,max(ifnull(ID.availableinventory,0)) Available_Inventory ,sum(ifnull(SD56.Quantity,0)) Sold_Quantity_56_Days ,max(ifnull(SWMax.Quantity,0)) Max_Weekly_Sales ,max(ifnull(SWMin.Quantity,0)) Min_Weekly_Sales from Inventory_Data ID full outer join sku_list SL on SL.SKU = ID.SKU left join Sales_Data_Daily SD56 on coalesce(ID.SKU,SL.SKU) = SD56.SKU and (datediff(day,try_to_date(SD56.ORDER_DATE),ifnull(ID.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 56) left join Sales_Data_Max_Weekly SWMax on coalesce(ID.SKU,SL.SKU) = SWMax.SKU left join SALES_DATA_MIN_WEEKLY SWMin on coalesce(ID.SKU,SL.SKU) = SWMin.SKU where active = 1 group by 1,2,3,4,5,6,7,8 ), Sales_56_14_Avg_w_Inv as ( select DATA_FETCH_DATE ,SD56.SKU ,productid ,active ,Product_Final_Name ,Category ,Category_2 ,COLOR ,Massager_Inventory ,Device_Inventory ,Other_Inventory ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,sum(ifnull(SD14.Quantity,0)) Sold_Quantity_14_Days from Sales_56avg_w_Inv SD56 left join Sales_Data_Daily SD14 on SD56.SKU = SD14.SKU and (datediff(day,try_to_date(SD14.ORDER_DATE),ifnull(SD56.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 14) where active = 1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ) select DATA_FETCH_DATE ,SD56_14.SKU ,productid ,active ,Product_Final_Name ,Category ,Category_2 ,COLOR ,Massager_Inventory ,Device_Inventory ,Other_Inventory ,Available_Inventory ,Max_Weekly_Sales ,Min_Weekly_Sales ,Sold_Quantity_56_Days ,Sold_Quantity_14_Days ,sum(ifnull(SD7.Quantity,0)) Sold_Quantity_7_Days from Sales_56_14_Avg_w_Inv SD56_14 left join Sales_Data_Daily SD7 on SD56_14.SKU = SD7.SKU and (datediff(day,try_to_date(SD7.ORDER_DATE),ifnull(SD56_14.DATA_FETCH_DATE,current_date())) BETWEEN 1 AND 7) where active = 1 group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from MYMUSE_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        