{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE RPSG_DB.MAPLEMONK.FACEBOOK_CONSOLIDATED_THREE60YOU AS select Adset_Name,Adset_ID,FB.ad_id,FB.ad_name,Account_Name, Account_ID, Campaign_Name, Campaign_ID,Fb.date_start Date ,SUM(CLICKS) Clicks,SUM(SPEND) Spend,SUM(IMPRESSIONS) Impressions ,SUM(NVL(Fc.Conversions,0)) Conversions ,SUM(NVL(Fcv.Conversion_Value,0)) Conversion_Value ,\'Facebook\' Channel ,\'Facebook Three60you\' Facebook_Account from RPSG_DB.MAPLEMONK.FB_THREE60YOU_CUSTOMCAMPAIGNS_DATA FB left join ( select ad_id,ad_name,date_start ,SUM(C.value:value) Conversions from RPSG_DB.MAPLEMONK.FB_THREE60YOU_CUSTOMCAMPAIGNS_DATA,lateral flatten(input => ACTIONS) C where C.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,ad_name,date_start having SUM(C.value:value) is not null )Fc ON Fb.ad_id = Fc.ad_id and Fb.date_start=Fc.date_start left join ( select ad_id,ad_name,date_start ,SUM(CV.value:value) Conversion_Value from RPSG_DB.MAPLEMONK.FB_THREE60YOU_CUSTOMCAMPAIGNS_DATA,lateral flatten(input => ACTION_VALUES) CV where CV.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,ad_name,date_start having SUM(CV.value:value) is not null )Fcv ON Fb.ad_id = Fcv.ad_id and Fb.date_start=Fcv.date_start group by Adset_Name, Adset_ID,fb.ad_id,fb.AD_NAME, Account_Name, Account_ID, Campaign_Name, Campaign_ID,Fb.date_start; CREATE OR REPLACE TABLE RPSG_DB.MAPLEMONK.MARKETING_CONSOLIDATED_THREE60YOU AS select ADSET_NAME, ADSET_ID,ad_id,ad_name, ACCOUNT_NAME, ACCOUNT_ID ,CAMPAIGN_NAME ,product.product ,CAMPAIGN_ID, DATE ,NULL AD_TYPE,NULL AD_STRENGTH ,NULL AD_NETWORK_TYPE,NULL AD_URL ,NULL Day_of_Week ,YEAR(DATE) AS YEAR ,MONTH(DATE) AS MONTH ,CHANNEL ,upper(case when lower(campaign_name) like \'%consultation%\' then \'CONSULTATIONS\' when lower(CAMPAIGN_NAME) like \'three60plus%\' then \'Three60plus\' else \'Three60\' end) AS ACCOUNT ,SUM(CLICKS) Clicks ,SUM(SPEND) Spend ,SUM(IMPRESSIONS) Impressions ,SUM(CONVERSIONS) Conversions ,SUM(CONVERSION_VALUE) Conversion_Value from RPSG_DB.MAPLEMONK.FACEBOOK_CONSOLIDATED_THREE60YOU three60 left join ( select * from( select \"Campaign Name Contains\", product, channel as channel1 ,row_number() over(partition by lower(product),lower(channel) order by 1)rw from rpsg_db.maplemonk.three60_paid where lower(channel) = \'facebook\' ) where rw= 1 )product on lower(three60.CAMPAIGN_NAME) like \'%\' || lower(product.\"Campaign Name Contains\") || \'%\' group by ADSET_NAME, ADSET_ID,ad_id,ad_name, ACCOUNT_NAME, ACCOUNT_ID ,CAMPAIGN_NAME, CAMPAIGN_ID, DATE, CHANNEL, FACEBOOK_ACCOUNT,product.product UNION ALL select \"ad_group.name\",\"ad_group_ad.ad.id\",NULL,NULL,NULL,NULL ,\"campaign.name\" ,product.product ,\"campaign.id\",\"segments.date\" ,\"ad_group_ad.ad.type\", \"ad_group_ad.ad_strength\" ,\"segments.ad_network_type\", \"ad_group_ad.ad.final_urls\" ,\"segments.day_of_week\" ,YEAR(\"segments.date\") AS YEAR ,MONTH(\"segments.date\") AS MONTH ,\'Google\' Channel ,upper(case when lower(\"campaign.name\") like \'%consultation%\' then \'CONSULTATIONS\' when lower(\"campaign.name\") like \'three60+%\' then \'Three60Plus\' else \'Three60\' end) AS ACCOUNT ,SUM(\"metrics.clicks\") Clicks ,SUM(\"metrics.cost_micros\")/1000000 Spend ,SUM(\"metrics.impressions\") Impressions ,SUM(\"metrics.conversions\") Conversions ,SUM(\"metrics.conversions_value\") Conversion_Value from rpsg_db.maplemonk.gads_three60you_ad_group_ad_report three60 left join ( select * from( select \"Campaign Name Contains\", product, channel as channel1 ,row_number() over(partition by lower(product),lower(channel) order by 1)rw from rpsg_db.maplemonk.three60_paid where lower(channel) = \'google\' ) where rw= 1 )product on lower(three60.\"campaign.name\") like \'%\' || lower(product.\"Campaign Name Contains\") || \'%\' group by \"ad_group.name\",\"ad_group_ad.ad.id\" ,\"segments.date\",\"campaign.name\", \"campaign.id\" ,\"ad_group_ad.ad.type\", \"ad_group_ad.ad_strength\" ,\"segments.ad_network_type\", \"ad_group_ad.ad.final_urls\", \"segments.day_of_week\",product.product UNION all select NULL, NULL, NULL, NULL,NULL,NULL ,\"campaign.name\" ,product.product ,\"campaign.id\", \"segments.date\" ,NULL, NULL,NULL, NULL, NULL ,YEAR(\"segments.date\") YEAR ,MONTH(\"segments.date\") MONTH ,\'Google\' Channel ,upper(case when lower(\"campaign.name\") like \'%consultation%\' then \'CONSULTATIONS\' when lower(\"campaign.name\") like \'three60+%\' then \'Three60Plus\' else \'Three60\' end) AS ACCOUNT ,sum(\"metrics.clicks\") clicks ,sum(\"metrics.cost_micros\")/1000000 spend ,sum(\"metrics.impressions\") impressions ,sum(\"metrics.conversions\") conversions ,sum(\"metrics.conversions_value\") conversions_value from RPSG_DB.maplemonk.gads_three60you_campaign_data three60 left join ( select * from( select \"Campaign Name Contains\", product, channel as channel1 ,row_number() over(partition by lower(product),lower(channel) order by 1)rw from rpsg_db.maplemonk.three60_paid where lower(channel) = \'google\' ) where rw= 1 )product on lower(three60.\"campaign.name\") like \'%\' || lower(product.\"Campaign Name Contains\") || \'%\' where \"campaign.advertising_channel_type\" in (\'PERFORMANCE_MAX\',\'SMART\') group by \"campaign.name\", \"campaign.id\", \"segments.date\",product.product union all Select NULL AS ACCOUNT_NAME ,PROFILEID ,ADID as ad_id ,NULL AS AD_NAME ,upper(CAMPAIGNNAME) CAMPAIGN_NAME ,CAMPAIGNID::varchar CAMPAIGN_ID ,upper(adGroupName) adGroupName ,null as product ,adGroupId ,DATE ,CAMPAIGN_TYPE ,NULL AS AD_STRENGTH ,NULL AS AD_NETWORK_TYPE ,NULL AS AD_URL ,dayname(try_to_date(date)) DAY_OF_WEEK ,year(try_to_date(date)) YEAR ,month(try_to_date(date)) MONTH ,\'AMAZON\' AS CHANNEL ,\'Amazon_Three60\' AS ACCOUNT ,sum(CLICKS)CLICKS ,sum(SPEND)SPEND ,sum(IMPRESSIONS)IMPRESSIONS ,sum(CONVERSIONS) CONVERSIONS ,sum(AdSales) AdSales FROM RPSG_DB.MAPLEMONK.RPSG_DB_AMAZONADS_MARKETING group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from RPSG_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        