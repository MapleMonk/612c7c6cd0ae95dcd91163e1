{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "CREATE OR REPLACE TABLE ghc_db.MAPLEMONK.FACEBOOK_International_CONSOLIDATED_ghc AS select ad_name,Adset_Name,Adset_ID,Account_Name, fb.Account_ID, Campaign_Name, fb.Campaign_ID,Fb.date_start Date ,adset.daily_budget/100 budget ,SUM(inline_link_CLICKS) Clicks,SUM(SPEND) Spend,SUM(IMPRESSIONS) Impressions ,sum(reach) Reach ,SUM(NVL(Fc.Conversions,0)) Conversions ,SUM(NVL(Fcv.Conversion_Value,0)) Conversion_Value ,\'Mars International\' Division ,\'Facebook Australia\' Channel ,\'Facebook Mars Australia\' Facebook_Account from ghc_db.maplemonk.fb_mars_australia_ads_insights Fb left join ghc_db.maplemonk.fb_mars_australia_ad_sets adset on adset.id = fb.adset_id left join ( select ad_id,date_start ,SUM(C.value:value) Conversions from ghc_db.MAPLEMONK.fb_mars_australia_ads_insights,lateral flatten(input => ACTIONS) C where C.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(C.value:value) is not null )Fc ON Fb.ad_id = Fc.ad_id and Fb.date_start=Fc.date_start left join ( select ad_id,date_start ,SUM(CV.value:value) Conversion_Value from ghc_db.MAPLEMONK.fb_mars_australia_ads_insights,lateral flatten(input => ACTION_VALUES) CV where CV.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(CV.value:value) is not null )Fcv ON Fb.ad_id = Fcv.ad_id and Fb.date_start=Fcv.date_start group by ad_name, Adset_Name, Adset_ID, Account_Name, fb.Account_ID, Campaign_Name, fb.Campaign_ID,Fb.date_start, budget union select ad_name,Adset_Name,Adset_ID,Account_Name, fb.Account_ID, Campaign_Name, fb.Campaign_ID,Fb.date_start Date ,adset.daily_budget/100 budget ,SUM(inline_link_CLICKS) Clicks,SUM(SPEND) Spend,SUM(IMPRESSIONS) Impressions ,sum(reach) Reach ,SUM(NVL(Fc.Conversions,0)) Conversions ,SUM(NVL(Fcv.Conversion_Value,0)) Conversion_Value ,\'Mars International\' Division ,\'Facebook USA\' Channel ,\'Facebook Mars USA\' Facebook_Account from ghc_db.MAPLEMONK.fb_mars_usa_ads_insights Fb left join ghc_db.maplemonk.fb_mars_usa_ad_sets adset on adset.id = fb.adset_id left join ( select ad_id,date_start ,SUM(C.value:value) Conversions from ghc_db.MAPLEMONK.fb_mars_usa_ads_insights,lateral flatten(input => ACTIONS) C where C.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(C.value:value) is not null )Fc ON Fb.ad_id = Fc.ad_id and Fb.date_start=Fc.date_start left join ( select ad_id,date_start ,SUM(CV.value:value) Conversion_Value from ghc_db.MAPLEMONK.fb_mars_usa_ads_insights,lateral flatten(input => ACTION_VALUES) CV where CV.value:action_type=\'offsite_conversion.fb_pixel_purchase\' group by ad_id,date_start having SUM(CV.value:value) is not null )Fcv ON Fb.ad_id = Fcv.ad_id and Fb.date_start=Fcv.date_start group by ad_name,Adset_Name, Adset_ID, Account_Name, fb.Account_ID, Campaign_Name, fb.Campaign_ID,Fb.date_start, budget, division ; CREATE OR REPLACE TABLE ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_International_GHC_INTERMEDIATE AS select ACCOUNT_NAME, ACCOUNT_ID ,ad_name CAMPAIGN_NAME, CAMPAIGN_ID, DATE ,NULL AD_TYPE,NULL AD_STRENGTH ,NULL AD_NETWORK_TYPE,NULL AD_URL ,NULL Day_of_Week ,YEAR(DATE) AS YEAR ,MONTH(DATE) AS MONTH ,Division ,CHANNEL ,FACEBOOK_ACCOUNT AS ACCOUNT ,sum(reach) Reach ,SUM(CLICKS) Clicks ,SUM(SPEND) Spend ,SUM(IMPRESSIONS) Impressions ,SUM(CONVERSIONS) Conversions ,SUM(CONVERSION_VALUE) Conversion_Value ,budget from GHC_DB.MAPLEMONK.FACEBOOK_International_CONSOLIDATED_ghc group by ACCOUNT_NAME, ACCOUNT_ID ,ad_name, CAMPAIGN_ID, DATE, CHANNEL, FACEBOOK_ACCOUNT, budget, division union select NULL, NULL ,\"campaign.name\", \"campaign.id\", \"segments.date\" ,NULL, NULL,NULL, NULL, NULL ,YEAR(\"segments.date\") YEAR ,MONTH(\"segments.date\") MONTH ,\'Mars International\' Division ,\'Google\' Channel ,\'Google MARS International 1\' ACCOUNT ,null as reach ,sum(\"metrics.clicks\") clicks ,sum(\"metrics.cost_micros\")/1000000 spend ,sum(\"metrics.impressions\") impressions ,sum(\"metrics.conversions\") conversions ,sum(\"metrics.conversions_value\") conversion_value ,sum(\"campaign_budget.amount_micros\")/1000000 budget from ghc_db.maplemonk.gads_mars_international_1_campaign_data group by \"campaign.name\", \"campaign.id\", \"segments.date\" UNION select NULL, NULL ,\"campaign.name\", \"campaign.id\", \"segments.date\" ,NULL, NULL,NULL, NULL, NULL ,YEAR(\"segments.date\") YEAR ,MONTH(\"segments.date\") MONTH ,\'Mars International\' Division ,\'Google\' Channel ,\'Google MARS International 2\' ACCOUNT ,null as reach ,sum(\"metrics.clicks\") clicks ,sum(\"metrics.cost_micros\")/1000000 spend ,sum(\"metrics.impressions\") impressions ,sum(\"metrics.conversions\") conversions ,sum(\"metrics.conversions_value\") conversion_value ,sum(\"campaign_budget.amount_micros\")/1000000 budget from ghc_db.maplemonk.gads_mars_international_2_campaign_data group by \"campaign.name\", \"campaign.id\", \"segments.date\" ; create or replace table ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_International_GHC_1 as select a.*, case when lower(account) like \'%mars%\' and lower(campaign_name) like \'%beard%\' then \'Beard\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%wellness%\' then \'Wellness\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%performance%\' then \'Performance\' when lower(account) like \'%mars%\' and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) is null and lower(campaign_name) like \'%beard%\' then \'Beard\' when lower(account) is null and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) is null and lower(campaign_name) like \'%wellness%\' then \'Wellness\' when lower(account) is null and lower(campaign_name) like \'%performance%\' then \'Performance\' when lower(account) is null and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%skin%\' then \'Skin\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%hair%\' then \'Hair\' when lower(account) like \'%saturn%\' and lower(campaign_name) like \'%wellness%\' then \'Wellness\' end as Category, ifnull(b.shopify_orders,0) + ifnull(c.shopify_orders,0) shopify_orders, ifnull(b.shopify_revenue,0) + ifnull(c.shopify_revenue,0) shopify_revenue from ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_International_GHC_INTERMEDIATE a left join (select order_timestamp::date date,landing_utm_campaign campaign, count(distinct order_id) shopify_orders, sum(gross_sales_after_tax) shopify_revenue from ghc_db.maplemonk.fact_items_shopify_international_ghc group by 1,2) b on a.date = b.date and a.campaign_name = b.campaign left join (select order_timestamp::date date,referring_utm_campaign campaign, count(distinct order_id) shopify_orders, sum(gross_sales_after_tax) shopify_revenue from ghc_db.maplemonk.fact_items_shopify_international_ghc group by 1,2) c on a.date = c.date and a.campaign_name = c.campaign ; create or replace table ghc_db.MAPLEMONK.MARKETING_CONSOLIDATED_International_GHC as select division, campaign_name, date, month, year, channel, account, budget, category, cd.product_name, cd.\"CAC Limit\" cac_limit, sum(ifnull(spend,0)) spend, sum(ifnull(impressions,0)) impressions, sum(ifnull(reach,0)) reach, sum(ifnull(clicks,0)) clicks, sum(ifnull(conversions,0)) conversions, sum(ifnull(conversion_value,0)) conversion_value, sum(ifnull(shopify_orders,0)) shopify_orders, sum(ifnull(shopify_revenue,0)) shopify_revenue from ghc_db.maplemonk.marketing_consolidated_International_ghc_1 a left join ghc_db.maplemonk.ad_analyzer_campaign_details cd on a.campaign_name = cd.campaigns group by 1,2,3,4,5,6,7,8,9,10,11 ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from GHC_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        