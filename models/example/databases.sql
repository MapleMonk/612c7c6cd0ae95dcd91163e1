{{ config(
            materialized='table',
                post_hook={
                    "sql": "ALTER SESSION SET TIMEZONE = \'Asia/Kolkata\'; create or replace table snitch_db.maplemonk.marketplace_catalog_status as Select Sku, sku_group, BUFFER_INVENTORY, TOTAL_INVENTORY, COALESCE(CATEGORY, CASE WHEN LEFT(SKU_GROUP, 4) = \'4MAC\' THEN \'Accessories\' WHEN LEFT(SKU_GROUP, 4) = \'4MBZ\' THEN \'Blazers\' WHEN LEFT(SKU_GROUP, 5) = \'4MSBX\' THEN \'Boxers\' WHEN LEFT(SKU_GROUP, 4) = \'4MSO\' THEN \'Cargo Pants\' WHEN LEFT(SKU_GROUP, 4) = \'4MSC\' THEN \'Chinos\' WHEN LEFT(SKU_GROUP, 5) = \'4MSCR\' THEN \'Co-ords\' WHEN LEFT(SKU_GROUP, 4) = \'4MSD\' THEN \'Denim\' WHEN LEFT(SKU_GROUP, 5) = \'4MSWH\' THEN \'Hoodies\' WHEN LEFT(SKU_GROUP, 4) = \'4MSK\' THEN \'Jackets\' WHEN LEFT(SKU_GROUP, 4) = \'4MTP\' THEN \'Joggers & Trackpants\' WHEN LEFT(SKU_GROUP, 4) = \'4MSP\' THEN \'Night Suit & Pyjamas\' WHEN LEFT(SKU_GROUP, 4) = \'4MSN\' THEN \'Overshirt\' WHEN LEFT(SKU_GROUP, 5) = \'4MSFR\' THEN \'Perfumes\' WHEN LEFT(SKU_GROUP, 6) = \'4MBGSS\' THEN \'Plus Size\' WHEN LEFT(SKU_GROUP, 4) = \'4MSS\' THEN \'Shirts\' WHEN LEFT(SKU_GROUP, 2) = \'SH\' THEN \'Shoes\' WHEN LEFT(SKU_GROUP, 4) = \'4MSH\' THEN \'Shorts\' WHEN LEFT(SKU_GROUP, 2) = \'SM\' THEN \'Sunglasses\' WHEN LEFT(SKU_GROUP, 4) = \'4MSW\' THEN \'Sweaters\' WHEN LEFT(SKU_GROUP, 4) = \'4MSR\' THEN \'Trousers\' WHEN LEFT(SKU_GROUP, 4) = \'4MST\' THEN \'T-Shirts\' ELSE \'Others\' END ) as CATEGORY, coalesce(Status,\'Not_Cataloged\') as status, SKU_CLASS, Price, product_name, MYNTRA_STATUS, case when MYNTRA_STATUS = \'Not_Cataloged\' then SUB_REMARKS_MYNTRA else \'\' end as catalog_status_myntra, AJIO_STATUS , case when AJIO_STATUS = \'Not_Cataloged\' then SUB_REMARKS_AJIO else \'\' end as catalog_status_ajio, FLIPKART_STATUS, case when FLIPKART_STATUS = \'Not_Cataloged\' then SUB_REMARKS_FLIPKART else \'\' end as catalog_status_flipkart, AMAZON_STATUS, case when AMAZON_STATUS = \'Not_Cataloged\' then SUB_REMARKS_AMAZON else \'\' end as catalog_status_amazon from ( WITH inventory AS ( SELECT \"Item SkuCode\" AS sku, REVERSE(SUBSTRING(REVERSE(\"Item SkuCode\"), CHARINDEX(\'-\', REVERSE(\"Item SkuCode\")) + 1, LEN(\"Item SkuCode\"))) AS sku_group, CASE WHEN SUM(inventory) - 2 <= 0 THEN 0 ELSE SUM(inventory) - 2 END AS Buffer_inventory, SUM(inventory) AS Total_Inventory FROM snitch_db.maplemonk.snitch_final_inventory_wh2 WHERE date = CURRENT_DATE AND facility != \'SAPL-EMIZA\' GROUP BY 1 ), live_products AS ( Select * from ( SELECT sub.\"Item SkuCode\", sub.id, sub.status, b.category, b.sku_class, b.price, b.product_name, row_number() over (partition by sub.\"Item SkuCode\" order by 1 desc) rn FROM ( SELECT np.id, np.status, VARIANTS.value:\"sku\"::string AS \"Item SkuCode\" FROM snitch_db.maplemonk.shopifyindia_new_products np, LATERAL FLATTEN(input => np.variants) AS VARIANTS ) sub LEFT JOIN snitch_db.maplemonk.availability_master_v2 b ON sub.id = b.id ) where rn = 1 ), live_inventory AS ( SELECT a.sku, a.sku_group, a.Buffer_inventory, a.Total_Inventory, b.status, b.category, b.sku_class, b.price, b.product_name FROM inventory a LEFT JOIN live_products b ON a.sku = b.\"Item SkuCode\" ), ajio1 as ( select replace(REPLACE(ajio1_sellersku, \'four\', \'4\'),\' \',\'\') AS sku, from snitch_db.maplemonk.ajio_1 ), ajio2 as ( select replace(REPLACE(ajio2_sellersku, \'four\', \'4\'),\' \',\'\') as sku, case when ajio2_status = \'Live\' then \'Catalog_and_Live\' else \'Catalog_but_not_Live\' end as status from snitch_db.maplemonk.ajio_2 ), ajio as ( Select * from ( Select * , row_number() over (partition by sku order by 1 desc) rn from ( SELECT \'1\' as ajio_marketplace, t1.sku as sku, \'Catalog_and_Live\' AS ajio_status FROM ajio1 t1 LEFT JOIN ajio2 t2 ON t1.sku = t2.sku UNION ALL SELECT \'1\' as ajio_marketplace, t2.sku, t2.status as ajio_status FROM ajio2 t2 LEFT JOIN ajio1 t1 ON t2.sku = t1.sku WHERE t1.sku IS NULL )) where rn =1 ), flipkart as ( Select * from ( Select * , row_number() over (partition by sku order by 1 desc) rn from ( select \'1\' as flipkart_marketplace, replace(REPLACE(\"flipkart_Seller SKU Id\", \'four\', \'4\'),\' \',\'\') as sku, case when \"flipkart_Listing Status\" = \'ACTIVE\' Then \'Catalog_and_Live\' else \'Catalog_but_not_Live\' end as flipkart_status from snitch_db.maplemonk.flipkart ) )where rn =1 ), amazon as ( Select * from ( Select * , row_number() over (partition by sku order by 1 desc) rn from ( select \'1\' as amazon_marketplace, replace(REPLACE(\"amazon_seller-sku\", \'four\', \'4\'),\' \',\'\') as sku, case when \"AMAZON_STATUS\" = \'Active\' then \'Catalog_and_Live\' else \'Catalog_but_not_Live\' end as amazon_status from snitch_db.maplemonk.amazon ) ) where rn = 1 ), myntra as ( Select * from ( Select * , row_number() over (partition by sku order by 1 desc) rn from ( select \'1\' as amazon_marketplace, replace(REPLACE(\"MYNTRA_VAN\", \'four\', \'4\'),\' \',\'\') as sku, case when \"myntra_style status\" = \'P\' then \'Catalog_and_Live\' else \'Catalog_but_not_Live\' end as myntra_status from snitch_db.maplemonk.myntra ) )where rn = 1 ), catalog_ajio as (Select * from ( Select sku_code_ajio, snitch_catalog_team_ajio, sub_remarks_ajio, row_number() over (partition by sku_code_ajio order by 1 desc) rn from snitch_db.maplemonk.snitch_db_ajio_remarks) where rn =1), catalog_flipkart as (Select * from ( Select SKU_CODE_FLIPKART, SNITCH_CATALOG_TEAM_FLIPKART, SUB_REMARKS_FLIPKART, row_number() over (partition by SKU_CODE_FLIPKART order by 1 desc) rn from snitch_db.maplemonk.snitch_db_flipkart_remarks) where rn =1), catalog_amazon as ( Select * from ( Select SKU_CODE_AMAZON, SNITCH_CATALOG_TEAM_AMAZON, SUB_REMARKS_AMAZON, row_number() over (partition by SKU_CODE_AMAZON order by 1 desc) rn from snitch_db.maplemonk.snitch_db_amazon_remarks) where rn =1), catalog_myntra as ( Select * from ( Select SKU_CODE_MYNTRA, SUB_REMARKS_MYNTRA, SNITCH_CATALOG_TEAM_MYNTRA, row_number() over (partition by SKU_CODE_MYNTRA order by 1 desc) rn from snitch_db.maplemonk.snitch_db_myntra_remarks) where rn =1 ) select a.*, coalesce(ajio.ajio_status,\'Not_Cataloged\') as ajio_status, coalesce(flipkart.flipkart_status,\'Not_Cataloged\') as flipkart_status, coalesce(amazon.amazon_status,\'Not_Cataloged\') as amazon_status, coalesce(myntra.myntra_status,\'Not_Cataloged\') as myntra_status, coalesce(snitch_catalog_team_ajio,\'Not_Cataloged\') as snitch_catalog_team_ajio, coalesce(sub_remarks_ajio,\'Not_Cataloged\') as sub_remarks_ajio, coalesce(SNITCH_CATALOG_TEAM_FLIPKART,\'Not_Cataloged\') as SNITCH_CATALOG_TEAM_FLIPKART, coalesce(SUB_REMARKS_FLIPKART,\'Not_Cataloged\') as SUB_REMARKS_FLIPKART, coalesce(SNITCH_CATALOG_TEAM_AMAZON,\'Not_Cataloged\') as SNITCH_CATALOG_TEAM_AMAZON, coalesce(SUB_REMARKS_AMAZON,\'Not_Cataloged\') as SUB_REMARKS_AMAZON, coalesce(SUB_REMARKS_MYNTRA,\'Not_Cataloged\') as SUB_REMARKS_MYNTRA, coalesce(SNITCH_CATALOG_TEAM_MYNTRA,\'Not_Cataloged\') as SNITCH_CATALOG_TEAM_MYNTRA from live_inventory a left join ajio ajio on a.sku= ajio.sku left join flipkart flipkart on a.sku= flipkart.sku left join amazon amazon on a.sku= amazon.sku left join myntra myntra on a.sku= myntra.sku left join catalog_ajio catalog_ajio on a.sku =catalog_ajio.sku_code_ajio left join catalog_flipkart catalog_flipkart on a.sku =catalog_flipkart.SKU_CODE_FLIPKART left join catalog_amazon catalog_amazon on a.sku =catalog_amazon.SKU_CODE_AMAZON left join catalog_myntra catalog_myntra on a.sku =catalog_myntra.SKU_CODE_MYNTRA where a.TOTAL_INVENTORY != 0 ) ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            