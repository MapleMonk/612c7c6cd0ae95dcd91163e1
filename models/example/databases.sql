{{ config(
            materialized='table',
                post_hook={
                    "sql": "Create or replace table snitch_db.maplemonk.demand_planning_ond as SELECT _AIRBYTE_DATA:\"Category\"::STRING AS Category, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Dec-Production\"::STRING, \',\', \'\') AS FLOAT) AS Dec_Production, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Dec-SOH \"::STRING, \',\', \'\') AS FLOAT) AS Dec_SOH, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Dec-styles\"::STRING, \',\', \'\') AS FLOAT) AS Dec_styles, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"MOQ\"::STRING, \',\', \'\') AS FLOAT) AS MOQ, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"New\"::STRING, \'%\', \'\') AS FLOAT) AS New_Percentage, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Nov-Production\"::STRING, \',\', \'\') AS FLOAT) AS Nov_Production, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Nov-SOH \"::STRING, \',\', \'\') AS FLOAT) AS Nov_SOH, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Nov-styles\"::STRING, \',\', \'\') AS FLOAT) AS Nov_styles, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Oct-Production\"::STRING, \',\', \'\') AS FLOAT) AS Oct_Production, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Oct-SOH \"::STRING, \',\', \'\') AS FLOAT) AS Oct_SOH, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Oct-styles\"::STRING, \',\', \'\') AS FLOAT) AS Oct_styles, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Repeat\"::STRING, \'%\', \'\') AS FLOAT) AS Repeat_Percentage, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Sep-Production\"::STRING, \',\', \'\') AS FLOAT) AS Sep_Production, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Sep-SOH \"::STRING, \',\', \'\') AS FLOAT) AS Sep_SOH, TRY_CAST(REPLACE(_AIRBYTE_DATA:\"Sep-styles\"::STRING, \',\', \'\') AS FLOAT) AS Sep_styles FROM snitch_db.maplemonk._airbyte_raw_new_job_demand_planning_ ; Create or replace table snitch_db.maplemonk.demand_planning_ond_1 as Select category, MOQ, New_Percentage, Repeat_Percentage, \'2024-09-01\' as date , Sep_Production as Demand, Sep_SOH AS Cpacity, Sep_styles as Styles from snitch_db.maplemonk.demand_planning_ond union all Select category, MOQ, New_Percentage, Repeat_Percentage, \'2024-10-01\' as date , OCT_PRODUCTION, OCT_SOH, OCT_styles from snitch_db.maplemonk.demand_planning_ond union all Select category, MOQ, New_Percentage, Repeat_Percentage, \'2024-11-01\' as date , NOV_PRODUCTION, NOV_SOH, NOV_STYLES from snitch_db.maplemonk.demand_planning_ond union all select category, MOQ, New_Percentage, Repeat_Percentage, \'2024-12-01\' as date , DEC_PRODUCTION, DEC_SOH, DEC_STYLES from snitch_db.maplemonk.demand_planning_ond; Create or Replace table snitch_db.maplemonk.SOND_PLAN AS WITH Inwards_CTE AS ( Select CATEGORY , date , sum(inwards) as inwards ,sum(repeat_styles) as inward_repeat_styles, sum(new_styles) as inward_new_styles, SUM(repeat_QTY) AS INWARD_repeat_QTY from ( WITH min_order_dates AS ( SELECT sku_group, MIN(order_date) AS min_order_date FROM snitch_db.maplemonk.unicommerce_fact_items_snitch GROUP BY sku_group ) SELECT i.CATEGORY, i.DATE, SUM(i.inwards) AS inwards, count( distinct case when i.DATE> o.min_order_date then i.SKU_GROUP else null end ) as repeat_styles, count( distinct case when i.DATE<= o.min_order_date then i.SKU_GROUP else null end ) as new_styles, SUM( case when i.DATE> o.min_order_date then i.inwards else 0 end ) as repeat_QTY, count(distinct i.sku_group), o.min_order_date FROM ( SELECT CASE WHEN LEFT(SKU_GROUP, 4) = \'4MAC\' THEN \'Accessories\' WHEN LEFT(SKU_GROUP, 4) = \'4MBZ\' THEN \'Blazers\' WHEN LEFT(SKU_GROUP, 5) = \'4MSBX\' THEN \'Boxers\' WHEN LEFT(SKU_GROUP, 4) = \'4MSO\' THEN \'Cargo Pants\' WHEN LEFT(SKU_GROUP, 4) = \'4MSC\' THEN \'Chinos\' WHEN LEFT(SKU_GROUP, 4) = \'4MSCR\' THEN \'Co-ords\' WHEN LEFT(SKU_GROUP, 4) = \'4MSD\' THEN \'Denim\' WHEN LEFT(SKU_GROUP, 4) = \'4MSWH\' THEN \'Hoodies\' WHEN LEFT(SKU_GROUP, 4) = \'4MSK\' THEN \'Jackets\' WHEN LEFT(SKU_GROUP, 4) = \'4MTP\' THEN \'Joggers & Trackpants\' WHEN LEFT(SKU_GROUP, 4) = \'4MSP\' THEN \'Night Suit & Pyjamas\' WHEN LEFT(SKU_GROUP, 4) = \'4MSN\' THEN \'Shirts\' WHEN LEFT(SKU_GROUP, 5) = \'4MSFR\' THEN \'Perfumes\' WHEN LEFT(SKU_GROUP, 6) = \'4MBGSS\' THEN \'Plus Size\' WHEN LEFT(SKU_GROUP, 4) = \'4MSS\' THEN \'Shirts\' WHEN LEFT(SKU_GROUP, 2) = \'SH\' THEN \'Shoes\' WHEN LEFT(SKU_GROUP, 4) = \'4MSH\' THEN \'Shorts\' WHEN LEFT(SKU_GROUP, 2) = \'SN\' THEN \'Sunglasses\' WHEN LEFT(SKU_GROUP, 4) = \'4MSW\' THEN \'Sweaters\' WHEN LEFT(SKU_GROUP, 4) = \'4MSR\' THEN \'Trousers\' WHEN LEFT(SKU_GROUP, 4) = \'4MST\' THEN \'T-Shirts\' WHEN LEFT(SKU_GROUP, 6) = \'4MBGSD\' THEN \'T-Shirts\' WHEN LEFT(SKU_GROUP, 4) = \'4MS0\' THEN \'Cargo Pants\' WHEN LEFT(SKU_GROUP, 4) = \'4MTR\' THEN \'Cargo Pants\' ELSE \'Others\' END AS CATEGORY, sku_group, DATE, inwared_quantity AS inwards FROM snitch_db.maplemonk.INWARDS WHERE inwared_quantity > 0 ) i LEFT JOIN min_order_dates o ON i.sku_group = o.sku_group GROUP BY i.CATEGORY, i.DATE, o.min_order_date ORDER BY i.CATEGORY, i.DATE ) group by 1,2 ), Production_CTE AS ( Select CATEGORY ,EXPECTED_DELIVERY_DATE_1 AS EXPECTED_DELIVERY_DATE, sum(PROJ_QTY) as PROJ_QTY, sum(new_styles) as production_new_styles, sum(repeat_styles) as production_repeat_styles, SUM(repeat_QTY) AS production_repeat_QTY from ( SELECT SUM(PROJ_QTY) AS PROJ_QTY, CASE WHEN LEFT(Adjusted_SKU, 4) = \'4MAC\' THEN \'Accessories\' WHEN LEFT(Adjusted_SKU, 4) = \'4MBZ\' THEN \'Blazers\' WHEN LEFT(Adjusted_SKU, 5) = \'4MSBX\' THEN \'Boxers\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSO\' THEN \'Cargo Pants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSC\' THEN \'Chinos\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSCR\' THEN \'Co-ords\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSD\' THEN \'Denim\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSWH\' THEN \'Hoodies\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSK\' THEN \'Jackets\' WHEN LEFT(Adjusted_SKU, 4) = \'4MTP\' THEN \'Joggers & Trackpants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSP\' THEN \'Night Suit & Pyjamas\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSN\' THEN \'Shirts\' WHEN LEFT(Adjusted_SKU, 5) = \'4MSFR\' THEN \'Perfumes\' WHEN LEFT(Adjusted_SKU, 6) = \'4MBGSS\' THEN \'Plus Size\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSS\' THEN \'Shirts\' WHEN LEFT(Adjusted_SKU, 2) = \'SH\' THEN \'Shoes\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSH\' THEN \'Shorts\' WHEN LEFT(Adjusted_SKU, 2) = \'SN\' THEN \'Sunglasses\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSW\' THEN \'Sweaters\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSR\' THEN \'Trousers\' WHEN LEFT(Adjusted_SKU, 4) = \'4MST\' THEN \'T-Shirts\' WHEN LEFT(Adjusted_SKU, 6) = \'4MBGSD\' THEN \'T-Shirts\' WHEN LEFT(Adjusted_SKU, 4) = \'4MS0\' THEN \'Cargo Pants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MTR\' THEN \'Cargo Pants\' ELSE \'Others\' END AS CATEGORY, CASE WHEN COALESCE(revised_delivery_date, EXPECTED_DELIVERY_DATE) IS NULL THEN case when lower(order_type)=\'fob\' then issued_date + 90 else issued_date + 60 end ELSE COALESCE(revised_delivery_date, EXPECTED_DELIVERY_DATE) END AS EXPECTED_DELIVERY_DATE_1, count( distinct case when lower(type) !=\'repeat\' then adjusted_sku else null end) as new_styles, count( distinct case when lower(type) =\'repeat\' then adjusted_sku else null end) as repeat_styles, SUM(case when lower(type) !=\'new\' then PROJ_QTY else 0 end) as repeat_QTY FROM snitch_db.maplemonk.production_data WHERE status IN (\'Active\', \'Delivered\') group by 2,3 ) where EXPECTED_DELIVERY_DATE_1 IS NOT NULL and EXPECTED_DELIVERY_DATE_1 >=\'2024-09-01\' GROUP BY CATEGORY, EXPECTED_DELIVERY_DATE ), Final_CTE AS ( Select CATEGORY , FI_DATE, sum(RTS_QTY) as RTS_QTY , sum(new_styles) as FI_new_styles, SUM(repeat_styles) AS FI_repeat_styles, sum(repeat_qty) as FI_repeat_qty from ( SELECT SUM(COALESCE(\"RTS QTY\", proj_qty,0)) AS RTS_QTY, CASE WHEN LEFT(Adjusted_SKU, 4) = \'4MAC\' THEN \'Accessories\' WHEN LEFT(Adjusted_SKU, 4) = \'4MBZ\' THEN \'Blazers\' WHEN LEFT(Adjusted_SKU, 5) = \'4MSBX\' THEN \'Boxers\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSO\' THEN \'Cargo Pants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSC\' THEN \'Chinos\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSCR\' THEN \'Co-ords\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSD\' THEN \'Denim\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSWH\' THEN \'Hoodies\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSK\' THEN \'Jackets\' WHEN LEFT(Adjusted_SKU, 4) = \'4MTP\' THEN \'Joggers & Trackpants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSP\' THEN \'Night Suit & Pyjamas\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSN\' THEN \'Shirts\' WHEN LEFT(Adjusted_SKU, 5) = \'4MSFR\' THEN \'Perfumes\' WHEN LEFT(Adjusted_SKU, 6) = \'4MBGSS\' THEN \'Plus Size\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSS\' THEN \'Shirts\' WHEN LEFT(Adjusted_SKU, 2) = \'SH\' THEN \'Shoes\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSH\' THEN \'Shorts\' WHEN LEFT(Adjusted_SKU, 2) = \'SN\' THEN \'Sunglasses\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSW\' THEN \'Sweaters\' WHEN LEFT(Adjusted_SKU, 4) = \'4MSR\' THEN \'Trousers\' WHEN LEFT(Adjusted_SKU, 4) = \'4MST\' THEN \'T-Shirts\' WHEN LEFT(Adjusted_SKU, 6) = \'4MBGSD\' THEN \'T-Shirts\' WHEN LEFT(Adjusted_SKU, 4) = \'4MS0\' THEN \'Cargo Pants\' WHEN LEFT(Adjusted_SKU, 4) = \'4MTR\' THEN \'Cargo Pants\' ELSE \'Others\' END AS CATEGORY, FI_DATE AS FI_DATE, count( distinct case when lower(type) =\'new\' then adjusted_sku else null end) as new_styles, count( distinct case when lower(type) !=\'new\' then adjusted_sku else null end) as repeat_styles, sum(case when lower(type) !=\'new\' then COALESCE(\"RTS QTY\", proj_qty,0) else 0 end) as repeat_qty FROM snitch_db.maplemonk.production_data WHERE status = \'Delivered\' and FI_DATE is not null GROUP BY 2,3 ) where FI_DATE >=\'2024-09-01\' GROUP BY CATEGORY, FI_DATE ), demand_cte as ( SELECT category, date, SUM(demand) AS demand, ROUND(DIV0(SUM(demand)* SUM(REPEAT_PERCENTAGE),100)) AS DEMAND_REPEAT_QTY, ROUND(DIV0(ROUND(DIV0(SUM(demand)* (100- SUM(REPEAT_PERCENTAGE)),100)),SUM(MOQ))) AS DEMAND_NEW_STYLES FROM ( SELECT category, date, demand, MOQ, STYLES, NEW_PERCENTAGE, REPEAT_PERCENTAGE FROM snitch_db.maplemonk.demand_planning_ond_1 ) AS demand_data GROUP BY category, date ORDER BY category, date ) SELECT COALESCE(i.inwards,0) AS INWARDS, COALESCE(p1.PROJ_QTY, 0) AS PROJ_QTY, COALESCE(p2.RTS_QTY, 0) AS RTS_QTY, COALESCE(p3.demand, 0) as demand, COALESCE(i.CATEGORY, p1.CATEGORY, p2.CATEGORY,p3.category) AS CATEGORY, COALESCE(i.DATE, p1.EXPECTED_DELIVERY_DATE, p2.FI_DATE,p3.date) AS DATE, COALESCE(i.inward_repeat_styles,0) AS inward_repeat_styles, COALESCE(i.inward_new_styles,0) AS inward_new_styles, COALESCE(p1.production_new_styles, 0) AS production_new_styles, COALESCE(p1.production_repeat_styles, 0) AS production_repeat_styles, COALESCE(p2.FI_new_styles, 0) AS FI_new_styles, COALESCE(p2.FI_repeat_styles, 0) AS FI_repeat_styles, COALESCE(p3.DEMAND_REPEAT_QTY, 0) as DEMAND_REPEAT_QTY, COALESCE(p3.DEMAND_NEW_STYLES, 0) as DEMAND_NEW_STYLES, COALESCE(i.INWARD_repeat_QTY,0) AS INWARD_repeat_QTY, COALESCE(p1.production_repeat_QTY, 0) AS production_repeat_QTY, COALESCE(p2.FI_repeat_qty, 0) AS FI_repeat_qty FROM Inwards_CTE i FULL OUTER JOIN Production_CTE p1 ON i.CATEGORY = p1.CATEGORY AND i.DATE = p1.EXPECTED_DELIVERY_DATE FULL OUTER JOIN Final_CTE p2 ON i.CATEGORY = p2.CATEGORY AND i.DATE = p2.FI_DATE FULL OUTER JOIN demand_cte p3 ON i.CATEGORY = p3.CATEGORY AND i.DATE = p3.date WHERE COALESCE(i.DATE, p1.EXPECTED_DELIVERY_DATE, p2.FI_DATE,p3.date) >= \'2024-04-01\' GROUP BY i.inwards, COALESCE(i.CATEGORY, p1.CATEGORY, p2.CATEGORY,p3.category), p1.PROJ_QTY, p2.RTS_QTY,p3.demand, COALESCE(i.DATE, p1.EXPECTED_DELIVERY_DATE, p2.FI_DATE,p3.date),i.inward_repeat_styles,i.inward_new_styles,p1.production_new_styles,p1.production_repeat_styles,p2.FI_new_styles,p2.FI_repeat_styles,p3.DEMAND_REPEAT_QTY,p3.DEMAND_NEW_STYLES,i.INWARD_repeat_QTY,p1.production_repeat_QTY,p2.FI_repeat_qty;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from snitch_db.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            