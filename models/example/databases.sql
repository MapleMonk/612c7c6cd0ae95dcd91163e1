{{ config(
            materialized='table',
                post_hook={
                    "sql": "Create or replace table rpsg_db.maplemonk.amplitude_GA_consolidated_three60 as With Sessions as ( with amplitude_data as ( SELECT event_time::date AS DATE, case when lower(event_properties: \"[Amplitude] Page URL\"::string) like any (\'%joint%\', \'%pain%\', \'%plus%\', \'%arthritis%\') then \'Three60plus\' when lower(event_properties: \"[Amplitude] Page URL\"::string) like any (\'%expert%\',\'%appointment%\') then \'CONSULTATIONS\' else \'Three60\' end as shop_name, upper(coalesce(USER_PROPERTIES:\"utm_source\",USER_PROPERTIES:\"initial_utm_source\")::string) as source, upper((USER_PROPERTIES:\"initial_referring_domain\")::string) as referring_domain, upper(coalesce(USER_PROPERTIES:\"utm_medium\",USER_PROPERTIES:\"initial_utm_medium\")::string) as medium, upper(coalesce(USER_PROPERTIES:\"utm_campaign\",USER_PROPERTIES:\"initial_utm_campaign\")::string) as campaign, COUNT(DISTINCT session_id) AS SESSIONS, count(distinct CASE WHEN event_type = \'pdp_view\' THEN session_id END) AS PDP_VIEW, count(distinct CASE WHEN event_type = \'add_to_cart\' THEN session_id END) AS ADD_TO_CARTS, count(distinct CASE WHEN event_type = \'begin_checkout\' THEN session_id END) AS CHECKOUTS, count(distinct CASE WHEN event_type = \'Purchase\' THEN session_id END) AS PURCHASES FROM rpsg_db.maplemonk.amplitude_drv_events GROUP BY 1,2,3,4,5,6 order by 1 desc ) select rf.date ,coalesce(case when lower(referring_domain) like \'%google%\' then \'ORGANIC\' end,final_channel,\'Mapping\') as final_channel ,shop_name ,campaign ,sum(SESSIONS) SESSIONS ,sum(ADD_TO_CARTS) ADD_TO_CARTS ,sum(CHECKOUTS) CHECKOUTS from amplitude_data rf left join ( select * from ( select *, row_number() over(partition by lower(ifnull(source,\'\')),lower(ifnull(medium,\'\')) order by 1)rw, from rpsg_db.maplemonk.three60you_ga_channel_mapping )where rw=1 and (source is not null and medium is not null) )ga_mapping on lower(ga_mapping.source) = lower(rf.source) and lower(ga_mapping.medium) = lower(rf.medium) group by 1,2,3,4 ), Orders as ( WITH GA_MAPPING as ( select rf.*,coalesce(case when lower(referring_domain) like \'%google%\' then \'ORGANIC\' end,final_channel,\'mapping\') final_channel from ( with GA_TransactionId as ( select null as referring_domain,a.sessionsource,a.sessionmedium ,sessioncampaignname as campaign,date,transactionid,case when lower(transactionid) like \'pt%\' then transactionid else transactionid1 end as final_transaction from rpsg_db.maplemonk.three60you_orders_by_source_campaign a left join ( select distinct id, replace(PARSE_JSON(data):transactionId,\'\"\',\'\')transactionid1 from rpsg_db.maplemonk.pg_three60you_payment )b on lower(a.transactionid) = lower(b.id) ), Amplitude_Transactionid as ( select referring_domain,a.source,a.medium ,campaign,date, transactionid,case when lower(transactionid) like \'pt%\' then transactionid else transactionid1 end as final_transaction from rpsg_db.maplemonk.three60_amplitude_order_by_source a left join ( select distinct id, replace(PARSE_JSON(data):transactionId,\'\"\',\'\')transactionid1 from rpsg_db.maplemonk.pg_three60you_payment )b on lower(a.transactionid) = lower(b.id) ) select * from Amplitude_Transactionid where final_transaction is not null union select * from GA_TransactionId where not(final_transaction in (select distinct final_transaction from Amplitude_Transactionid)) and final_transaction is not null )rf left join ( select * from ( select *, row_number() over(partition by lower(ifnull(source,\'\')),lower(ifnull(medium,\'\')) order by 1)rw, from rpsg_db.maplemonk.three60you_ga_channel_mapping )where rw=1 and (source is not null and medium is not null) )ga_mapping on lower(ga_mapping.source) = lower(rf.source) and lower(ga_mapping.medium) = lower(rf.medium) ) , Get_reference_code as ( select source,medium,final_channel,display_id,date,campaign, transactionid, row_number() over(partition by display_id order by 1) rw from ga_mapping obs left join (select * from rpsg_db.maplemonk.pg_three60you_payment_transaction where lower(status) = \'authorized\') pt on lower(pt.id) = lower(obs.final_transaction) left join rpsg_db.maplemonk.pg_three60you_order o on lower(pt.cart_id) = lower(o.cart_id) ) select SCID.order_date as date, SCID.shop_name, rf.campaign, coalesce(rf.final_channel,\'Mapping\') final_channel, count(distinct reference_code ) orders from RPSG_DB.maplemonk.sales_consolidated_three60 SCID left join (select * from Get_reference_code where rw = 1)rf on lower(scid.reference_code) = lower(rf.display_id) where lower(data_source) = \'three60\' group by 1,2,3,4 order by order_date desc ), consultation_campaign as ( WITH amplitude_data as ( select * from ( select event_time::date as date, event_properties:consult[0].consult_id::STRING AS consult_id, case when lower(event_properties: \"[Amplitude] Page URL\"::string) like any (\'%joint%\', \'%pain%\', \'%plus%\', \'%arthritis%\') then \'Three60plus\' when lower(event_properties: \"[Amplitude] Page URL\"::string) like any (\'%expert%\',\'%appointment%\') then \'CONSULTATIONS\' else \'Three60\' end as shop_name ,upper((USER_PROPERTIES:\"initial_referring_domain\")::string) as referring_domain ,upper(coalesce(USER_PROPERTIES:\"utm_source\",USER_PROPERTIES:\"initial_utm_source\")::string) as source ,upper(coalesce(USER_PROPERTIES:\"utm_medium\",USER_PROPERTIES:\"initial_utm_medium\")::string) as medium ,upper(coalesce(USER_PROPERTIES:\"utm_campaign\",USER_PROPERTIES:\"initial_utm_campaign\")::string) as campaign ,row_number() over(partition by consult_id order by 1 desc) rw FROM rpsg_db.maplemonk.amplitude_drv_events where event_type = \'consultation_booked\' and consult_id is not null )where rw = 1 ), amplitude as ( select date ,consult_id ,campaign ,shop_name ,coalesce(case when lower(referring_domain) like \'%google%\' then \'ORGANIC\' end,final_channel,\'Mapping\') as final_channel from amplitude_data rf left join ( select * from ( select *, row_number() over(partition by lower(ifnull(source,\'\')),lower(ifnull(medium,\'\')) order by 1)rw, from rpsg_db.maplemonk.three60you_ga_channel_mapping )where rw=1 and (source is not null and medium is not null) )ga_mapping on lower(ga_mapping.source) = lower(rf.source) and lower(ga_mapping.medium) = lower(rf.medium) ), Appointments as ( select *, consult_orders as consider_order from ( select a.*, case when LOWER(status) = \'completed\' then 1 else 2 end as df, right(regexp_replace(c.phone, \'[^a-zA-Z0-9]+\'),10) phone, row_number() over(partition by end_timestamp::date,phone order by df asc ) rw from rpsg_db.maplemonk.pg_three60you_appointment a left join rpsg_db.maplemonk.pg_three60you_customer c on lower(c.id) = lower(a.customer_id) where right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) not in (select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) from RPSG_DB.maplemonk.three60you_test_consultations ) )ori left join ( select appointment_id,count(distinct reference_code)consult_orders from rpsg_db.maplemonk.sales_consolidated_three60 where appointment_id is not null group by 1 )co on lower(ori.id) = lower(co.appointment_id) where rw=1 ), final_result as ( select ap.*,am.campaign,am.final_channel,am.shop_name from Appointments ap left join amplitude am on lower(ap.id) = lower(am.consult_id) ), consultations1 as ( SELECT CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\', start_timestamp :: DATETIME) ::date AS start_date, final_channel, shop_name, campaign, count(distinct case when LOWER(status) = \'completed\' then id end) as consultation_completed, count(distinct id ) as consultation_confirmed, sum(ifnull(consider_order,0)) as consultation_Order, FROM Final_result where start_date < current_date() group by 1,2,3,4 ), consultations_f as ( select coalesce(start_date,start_date1) start_date, coalesce(final_channel,final_channel1) final_channel, coalesce(shop_name,shop_name1) as shop_name, coalesce(campaign,campaign1) campaign, consultation_completed, consultation_confirmed, consultation_Order, consultation_leads from consultations1 a full outer join ( SELECT CONVERT_TIMEZONE(\'UTC\',\'Asia/Kolkata\', created_at :: DATETIME)::date AS start_date1, final_channel as final_channel1, campaign as campaign1, shop_name as shop_name1, count(distinct id ) as consultation_leads FROM final_result where start_date1 < current_date() group by 1,2,3,4 )b on a.start_date = b.start_date1 and a.final_channel = b.final_channel1 and a.campaign = b.campaign1 and lower(a.shop_name) = lower(b.shop_name1) ) select start_date as date, coalesce(final_channel,\'Mapping\') as Final_channel, campaign as concusltationcampiagn, coalesce(shop_name,\'CONSULTATIONS\') as shop_name, consultation_completed, consultation_confirmed, consultation_Order as first_cosultation_orders, consultation_leads from consultations_f ) select coalesce(s.date,o.date,cc.date) as date ,upper(coalesce(s.shop_name,o.shop_name,cc.shop_name)) as shop_name ,upper(coalesce(s.final_channel,o.final_channel,cc.final_channel)) as final_channel ,upper(coalesce(s.campaign,o.campaign,cc.concusltationcampiagn)) as campaign ,s.SESSIONS ,s.ADD_TO_CARTS ,s.CHECKOUTS ,o.orders ,cc.consultation_completed as consultation_completed ,cc.consultation_confirmed as consultation_confirmed ,cc.consultation_leads as consultation_leads ,cc.first_cosultation_orders from Sessions S full outer join Orders O on s.date = o.date and lower(s.shop_name) = lower(o.shop_name) and lower(s.campaign) = lower(o.campaign) and lower(s.final_channel) = lower(o.final_channel) full outer join consultation_campaign cc on coalesce(s.date,o.date) = cc.date and lower(coalesce(s.shop_name,o.shop_name)) = lower(cc.shop_name) and lower(coalesce(s.campaign,o.campaign)) = lower(cc.concusltationcampiagn) and lower(coalesce(s.final_channel,o.final_channel)) = lower(cc.final_channel) ;",
                    "transaction": true
                }
            ) }}
            with sample_data as (

                select * from RPSG_DB.information_schema.databases
            ),
            
            final as (
                select * from sample_data
            )
            select * from final
            