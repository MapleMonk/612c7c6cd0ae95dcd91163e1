{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table eggozdb.Maplemonk.eggs_sold_new as with cte as (select *, div0(sum(eggs_sold) over(partition by date,area,beat_new order by date),sum(total_eggs) over(partition by date,area,beat_new order by date)) as eggs_sold_ratio_type from (select date, area, beat_new, sku, \'White\' as Type, sum(eggs_sold_white) as eggs_sold, sum(eggs_sold) as total_eggs from (select *, case when beat_number_operations=0 then 9999 else beat_number_operations end as beat_new from eggozdb.Maplemonk.summary_reporting_table_beat_retailer_sku) group by date, area, beat_new, sku) UNION select *, div0(sum(eggs_sold) over(partition by date,area,beat_new order by date),sum(total_eggs) over(partition by date,area,beat_new order by date)) as eggs_sold_ratio_type from (select date, area, beat_new, sku, \'Brown\' as Type, sum(eggs_sold_brown) as eggs_sold, sum(eggs_sold) as total_eggs from (select *, case when beat_number_operations=0 then 9999 else beat_number_operations end as beat_new from eggozdb.Maplemonk.summary_reporting_table_beat_retailer_sku) group by date, area, beat_new, sku) UNION select *, div0(sum(eggs_sold) over(partition by date,area,beat_new order by date),sum(total_eggs) over(partition by date,area,beat_new order by date)) as eggs_sold_ratio_type from (select date, area, beat_new, sku, \'Nutra Plus\' as Type, sum(eggs_sold_nutra) as eggs_sold, sum(eggs_sold) as total_eggs from (select *, case when beat_number_operations=0 then 9999 else beat_number_operations end as beat_new from eggozdb.Maplemonk.summary_reporting_table_beat_retailer_sku) group by date, area, beat_new, sku)) select date, area, beat_new, sku, type, eggs_sold, eggs_sold_ratio_type from cte; create or replace table eggozdb.Maplemonk.procurement_new as select p.date, e.area, e.beat_new, sum(e.eggs_sold_ratio_type * p.cost_per_egg) as cost_per_egg_new from (select date_from_parts(year,month,day) as date, case when type in (\'White\',\'white\') then \'White\' when type in (\'Brown\',\'brown\') then \'Brown\' when type in (\'Nutra Plus\',\'Nutra+\') then \'Nutra Plus\' else type end as type_new, sum(replace(amount,\',\',\'\')::float) as amount, sum(replace(eggs,\',\',\'\')::float) as eggs, div0(sum(replace(amount,\',\',\'\')::float),sum(replace(eggs,\',\',\'\')::float)) as cost_per_egg from eggozdb.Maplemonk.procurement_cost_procure where eggs not in (\'bill total is 78524\',\'GRN missed\',\'2 tray extra\',\'2 tray short\') group by date_from_parts(year,month,day), case when type in (\'White\',\'white\') then \'White\' when type in (\'Brown\',\'brown\') then \'Brown\' when type in (\'Nutra Plus\',\'Nutra+\') then \'Nutra Plus\' else type end) p left join (select distinct date, area, beat_new, type, eggs_sold_ratio_type from eggozdb.Maplemonk.eggs_sold_new) e on p.date = e.date and p.type_new = e.type group by p.date, e.area, e.beat_new order by p.date desc; create or replace table eggozdb.Maplemonk.first_mile_new as select a.date_new, b.area, b.beat_new, a.fm_cost_per_egg from(select fm.date_new, sum(fm.total_expense), sum(p.total_eggs) as total_eggs, div0(sum(fm.total_expense),sum(p.total_eggs)) * div0(sum(s.eggs_sold)+sum(s.eggs_replaced)+sum(s.eggs_return),sum(s.eggs_sold)-sum(s.eggs_return)) as fm_cost_per_egg from (select to_date(date,\'DD/MM/YYYY\') as date_new, sum(total_expense) as total_expense from eggozdb.Maplemonk.transport_costs_fm_vehicle_details group by to_date(date,\'DD/MM/YYYY\')) fm left join (select date_from_parts(year,month,day) as date, sum(replace(eggs,\',\',\'\')::float) as total_eggs from eggozdb.Maplemonk.procurement_cost_procure where eggs not in (\'bill total is 78524\',\'GRN missed\',\'2 tray extra\',\'2 tray short\') group by date_from_parts(year,month,day))p on fm.date_new = p.date left join (select date, sum(eggs_sold) as eggs_sold, sum(eggs_replaced) as eggs_replaced, sum(eggs_return) as eggs_return from eggozdb.Maplemonk.summary_reporting_table_beat_retailer_sku group by date)s group by fm.date_new)a cross join (select distinct area,beat_new from eggozdb.Maplemonk.eggs_sold_new)b ; create or replace table eggozdb.Maplemonk.mid_mile_new as select a.date_new, b.area, b.beat_new, a.mm_cost_per_egg from(select mm.date_new, div0(mm.cost_new,e.eggs_sold) as mm_cost_per_egg from(select to_date(date,\'dd-mon-yyyy\') as date_new, sum(case when cost is null then 0 else replace(cost,\',\',\'\')::float end) as cost_new from eggozdb.Maplemonk.transport_costs_last___mid_mile where \"GT/MT\" in (\'MM\',\'WMT\') group by to_date(date,\'dd-mon-yyyy\')) mm left join (select date, sum(case when area in (\'Delhi-GT\',\'Noida-GT\') then eggs_sold when area=\'NCR-MT\' then 0.3*eggs_sold else 0 end) as eggs_sold from eggozdb.Maplemonk.eggs_sold_new where area in (\'Delhi-GT\',\'Noida-GT\',\'NCR-MT\') group by date)e on mm.date_new = e.date)a cross join (select distinct area,beat_new from eggozdb.Maplemonk.eggs_sold_new where area in (\'Delhi-GT\',\'Noida-GT\'))b ; create or replace table eggozdb.Maplemonk.last_mile_new as select a.area, a.beat, a.date, a.cost, b.eggs_sold, div0(a.cost,b.eggs_sold) as lm_cost_per_egg from ( select case when \"GT/MT\"=\'LMT\' then \'NCR-MT\' when \"GT/MT\"=\'GGT\' then \'Gurgaon-GT\' when \"GT/MT\"=\'DGT\' then \'Delhi-GT\' when \"GT/MT\"=\'NGT\' then \'Noida-GT\' end as area, case when beat like \'%hoc%\' or beat like \'%DHOC%\' then 9999 else beat end as beat, to_date(date,\'dd-mon-yyyy\') as date, sum(case when cost is null then 0 else replace(cost,\',\',\'\')::float end) as cost from eggozdb.Maplemonk.transport_costs_last___mid_mile where \"GT/MT\" in (\'LMT\',\'GGT\',\'DGT\',\'NGT\') and cost not in (\'#REF!\',\'#N/A\') and beat not in (\'Refilling\',\'RTV\') group by case when beat like \'%hoc%\' or beat like \'%DHOC%\' then 9999 else beat end, date, case when \"GT/MT\"=\'LMT\' then \'NCR-MT\' when \"GT/MT\"=\'GGT\' then \'Gurgaon-GT\' when \"GT/MT\"=\'DGT\' then \'Delhi-GT\' when \"GT/MT\"=\'NGT\' then \'Noida-GT\' end )a left join ( select date,area,beat_new,sum(eggs_sold) eggs_sold from eggozdb.Maplemonk.eggs_sold_new group by date,area,beat_new )b on a.beat=b.beat_new and a.date=b.date and a.area=b.area ; create or replace table eggozdb.Maplemonk.packaging_new as select month,region,beat,sum(weighted)/sum(egg_sold) packaging_cost_per_egg from ( select a.month,a.region,a.sku,b.beat,a.cost,b.egg_sold,a.cost*b.egg_sold weighted from ( select region,sku,last_day(to_date(month,\'yyyy/mm/dd\')) as month,sum(packaging_cost) as cost from eggozdb.Maplemonk.packaging_cost_per_sku_per_egg group by region,sku,last_day(to_date(month,\'yyyy/mm/dd\')) )a left join ( select last_day(date) as month,sku ,left(area_classification,charindex(\'-\',area_classification)-1) as region ,case when beat_number_operations IN (0,9999) then 9999 else beat_number_operations end as beat ,sum(eggs_sold) egg_sold from eggozdb.Maplemonk.eggs_sold_summary_beat_retailer group by last_day(date),sku ,left(area_classification,charindex(\'-\',area_classification)-1) ,case when beat_number_operations IN (0,9999) then 9999 else beat_number_operations end )b on a.sku=b.sku and a.month=b.month and a.region=b.region ) group by month,beat,region ; create or replace table eggozdb.Maplemonk.profit as select a.area,a.date,a.beat,a.net_sales,a.eggs_sold,a.eggs_return ,proc.cost_per_egg_new as proc_cost_per_egg ,fm.fm_cost_per_egg ,mm.mm_cost_per_egg ,lm.lm_cost_per_egg ,pack.packaging_cost_per_egg from ( select area,date ,case when beat_number_operations=0 then 9999 else beat_number_operations end as beat ,sum(net_sales) as net_sales ,sum(eggs_sold) as eggs_sold ,sum(eggs_return) as eggs_return from eggozdb.Maplemonk.summary_reporting_table_beat_retailer_sku where beat is not null group by area,date ,case when beat_number_operations=0 then 9999 else beat_number_operations end )a left join (select distinct date,area,beat_new,cost_per_egg_new from eggozdb.Maplemonk.procurement_new) proc on a.date=proc.date and a.beat=proc.beat_new and a.area=proc.area left join (select distinct date_new,area,beat_new,fm_cost_per_egg from eggozdb.Maplemonk.first_mile_new) fm on a.date=fm.date_new and a.beat=fm.beat_new and a.area=fm.area left join (select distinct date_new,area,beat_new,mm_cost_per_egg from eggozdb.Maplemonk.mid_mile_new) mm on a.date=mm.date_new and a.beat=mm.beat_new and a.area=mm.area left join (select distinct date,beat,lm_cost_per_egg from eggozdb.Maplemonk.last_mile_new) lm on a.date=lm.date and a.beat=lm.beat left join (select distinct month,beat,region,packaging_cost_per_egg from eggozdb.Maplemonk.packaging_new) pack on last_day(a.date)=pack.month and a.beat=pack.beat and left(a.area,charindex(\'-\',a.area)-1)=pack.region ;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from EGGOZDB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        