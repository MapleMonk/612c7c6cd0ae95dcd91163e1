{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table nessa_DB.maplemonk.sales_consolidated_intermediate_nessa as select b.SHOP_NAME, NULL as carrier_id, NULL as courier, coalesce(b.name ,null) as Customer_Name, coalesce(b.email ,null) as email, coalesce(b.phone ,null) as phone, b.SHOP_NAME as MARKETPLACE, NULL as MARKETPLACE_ID, b.ORDER_ID, line_item_id::varchar as Line_Item_ID, line_item_id::varchar as Invoice_ID, B.VENDOR AS VENDOR, order_name as Reference_Code, NULL as manifest_date, NULL as shipping_last_update_date, NULL as shipping_status, coalesce(b.sku ,null) as sku, NULL as sku_type, b.PRODUCT_ID, b.PRODUCT_NAME as PRODUCTNAME, b.CURRENCY, b.IS_REFUND as RETURN_FLAG, upper(b.CITY::varchar) City, upper(b.STATE:: varchar) State, coalesce(b.order_status,null) as order_status, coalesce(b.order_status,null) as final_status, b.ORDER_TIMESTAMP::datetime as ORDER_Date, b.shipping_price::float as SHIPPING_PRICE, b.quantity::int suborder_quantity, b.quantity::int shipped_quantity, case when b.is_refund = 1 then b.quantity::int end returned_quantity, case when b.is_refund = 0 and lower(b.order_status) in (\'cancelled\') then quantity::int end cancelled_quantity, case when b.is_refund = 1 then total_sales else 0 end as return_sales, case when b.is_refund = 0 and lower(b.order_status) in (\'cancelled\') then total_sales end as cancel_sales, coalesce(b.TAX::float,0) Tax, coalesce(b.category,null) category, b.discount_before_tax::float as discount, case when b.total_sales::float is null then 0 else b.total_sales::float end selling_price, case when b.new_customer_flag = \'New\' then 1 else 0 end as new_customer_flag, case when b.new_customer_flag_month = \'New\' then 1 else 0 end as new_customer_flag_month, null as Warehouse_Name, null as Days_in_Shipment, FINAL_UTM_CHANNEL as Channel, null as payment_mode, null as import_date, null as last_update_date, null as invoice_date, null as company_name, \'Not Synced\' as EasyEcom_Sync_Flag from nessa_db.maplemonk.FACT_ITEMS_SHOPIFY_NESSA b; create or replace table nessa_DB.maplemonk.sales_consolidated_intermediate_nessa as select (case when GAC.CHANNEL is null then \'NA\' else GAC.channel end) as GA_Channel ,GAC.GA_SOURCE ,GAC.GA_MEDIUM ,GAC.FINAL_MEDIUM AS GA_FINAL_MEDIUM ,GAC.VIEW_ID ,SCID.* from nessa_DB.maplemonk.sales_consolidated_intermediate_nessa SCID left join (select * from (select *, Row_number() OVER (partition BY ga_transactionid ORDER BY GA_DATE DESC) rw from ga_order_by_source_consolidated_nessa ) where rw=1) GAC on SCID.reference_code=GAC.GA_TRANSACTIONID; create or replace table nessa_DB.maplemonk.Final_customerID as with new_phone_numbers as ( select phone, contact_num ,19700000000 + row_number() over( order by contact_num asc ) as maple_monk_id from ( select distinct right(regexp_replace(phone, \'[^a-zA-Z0-9]+\'),10) as contact_num, phone from nessa_DB.maplemonk.SALES_CONSOLIDATED_INTERMEDIATE_NESSA ) a ), int as ( select contact_num,email,coalesce(maple_monk_id,id2) as maple_monk_id from ( select contact_num, email,maple_monk_id,19800000000+row_number() over(partition by maple_monk_id is NULL order by email asc ) as id2 from ( select distinct coalesce(p.contact_num,right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10)) as contact_num, e.email,maple_monk_id from ( select phone as contact_num,email from nessa_DB.maplemonk.SALES_CONSOLIDATED_INTERMEDIATE_nessa ) e left join new_phone_numbers p on p.contact_num = right(regexp_replace(e.contact_num, \'[^a-zA-Z0-9]+\'),10) ) a ) b ) select contact_num, email, maple_monk_id from int where coalesce(contact_num,email) is not NULL; create or replace table nessa_DB.maplemonk.SALES_CONSOLIDATED_nessa as select coalesce(m.maple_monk_id_phone, d.maple_monk_id) as customer_id_final, min(order_date) over(partition by customer_id_final) as acquisition_date, m.* from (select c.maple_monk_id as maple_monk_id_phone, o.* from nessa_DB.maplemonk.SALES_CONSOLIDATED_INTERMEDIATE_NESSA o left join (select * from (select contact_num phone,maple_monk_id, row_number() over (partition by contact_num order by maple_monk_id asc) magic from nessa_DB.maplemonk.Final_customerID) where magic =1 )c on c.phone = right(regexp_replace(o.phone, \'[^a-zA-Z0-9]+\'),10))m left join (select distinct maple_monk_id, email from nessa_DB.maplemonk.Final_customerID where contact_num is null )d on d.email = m.email ; ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa drop COLUMN new_customer_flag ; ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN new_customer_flag varchar(50); ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa drop COLUMN new_customer_flag_month ; ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN new_customer_flag_month varchar(50); ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN acquisition_product varchar(16777216); ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN acquisition_channel varchar(16777216); ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN acquisition_marketplace varchar(16777216); ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa drop COLUMN ACQUISITION_DATE ; ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN ACQUISITION_DATE timestamp; ALTER TABLE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa ADD COLUMN SAME_DAY_ORDERNO number; UPDATE nessa_db.maplemonk.SALES_CONSOLIDATED_nessa AS A SET A.SAME_DAY_ORDERNO = B.rw FROM ( select distinct customer_id_final ,order_id ,rank() over (partition by customer_id_final, order_date order by order_date, order_id) as rw from nessa_DB.maplemonk.SALES_CONSOLIDATED_nessa ) AS B Where A.order_id = B.order_id; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_nessa AS A SET A.ACQUISITION_DATE = B.ACQUISITION_DATE FROM ( select distinct customer_id_final , min(order_Date) OVER ( partition BY customer_id_final) ACQUISITION_DATE from nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA B where lower(order_status) not in (\'cancelled\',\'returned\') ) AS B where A.customer_id_final = B.customer_id_final; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA AS A SET A.new_customer_flag = B.flag FROM ( SELECT DISTINCT order_id, customer_id_final, Order_Date, CASE WHEN Order_Date = ACQUISITION_DATE and lower(order_status) not in (\'cancelled\',\'returned\') then \'New\' WHEN Order_Date < ACQUISITION_DATE THEN \'Yet to make completed order\' ELSE \'Repeat\' END AS Flag FROM nessa_DB.maplemonk.SALES_CONSOLIDATED_nessa)AS B WHERE A.order_id = B.order_id AND A.customer_id_final = B.customer_id_final AND A.order_date::date=B.Order_date::Date; UPDATE nessa_db.maplemonk.SALES_CONSOLIDATED_NESSA SET new_customer_flag = CASE WHEN new_customer_flag IS NULL and lower(order_status) not in (\'cancelled\',\'returned\') THEN \'New\' WHEN new_customer_flag IS NULL and lower(order_status) in (\'cancelled\',\'returned\') THEN \'Yet to make completed order\' ELSE new_customer_flag END; UPDATE nessa_db.maplemonk.SALES_CONSOLIDATED_NESSA AS A SET A.new_customer_flag_month = B.flag FROM ( SELECT DISTINCT order_id, customer_id_final, Order_Date, CASE WHEN Last_day(order_date, \'month\') = Last_day(acquisition_date, \'month\') THEN \'New\' WHEN Last_day(order_date, \'month\') < Last_day(acquisition_date, \'month\') THEN \'Yet to make completed order\' ELSE \'Repeat\' END AS Flag FROM nessa_db.maplemonk.SALES_CONSOLIDATED_NESSA)AS B WHERE A.order_id = B.order_id AND A.customer_id_final = B.customer_id_final; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA SET new_customer_flag_month = CASE WHEN new_customer_flag_month IS NULL and lower(order_status) not in (\'cancelled\',\'returned\') THEN \'New\' ELSE new_customer_flag_month END; CREATE OR replace temporary TABLE nessa_DB.maplemonk.temp_source_1 AS SELECT DISTINCT customer_id_final, channel , marketplace FROM ( SELECT DISTINCT customer_id_final, order_date, ga_channel as channel, marketplace, Min(order_date) OVER ( partition BY customer_id_final) firstOrderdate FROM nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA where lower(order_status) not in (\'cancelled\',\'returned\')) res WHERE order_date=firstorderdate; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA AS a SET a.acquisition_channel=b.channel FROM nessa_db.maplemonk.temp_source_1 b WHERE a.customer_id_final = b.customer_id_final; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA AS a SET a.acquisition_marketplace=b.marketplace FROM nessa_DB.maplemonk.temp_source_1 b WHERE a.customer_id_final = b.customer_id_final; CREATE OR replace temporary TABLE nessa_DB.maplemonk.temp_product_1 AS SELECT DISTINCT customer_id_final, productname, Row_number() OVER (partition BY customer_id_final ORDER BY SELLING_PRICE DESC) rowid FROM ( SELECT DISTINCT customer_id_final, order_date, productname, SELLING_PRICE , Min(order_date) OVER (partition BY customer_id_final) firstOrderdate FROM nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA where lower(order_status) not in (\'cancelled\',\'returned\'))res WHERE order_date=firstorderdate; UPDATE nessa_DB.maplemonk.SALES_CONSOLIDATED_NESSA AS A SET A.acquisition_product=B.productname FROM ( SELECT * FROM nessa_DB.maplemonk.temp_product_1 WHERE rowid=1)B WHERE A.customer_id_final = B.customer_id_final;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from NESSA_DB.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        