{{ config(
                        materialized='table',
                            post_hook={
                                "sql": "create or replace table snitch_db.maplemonk.Inventory_summary_marketplace_snitch as with last180_days as ( select a.sku ,product_name ,marketplace ,c.category ,b.first_order_date::date first_order_date ,dateadd(month,1,b.first_order_date::date) First_order_date_plus_1month ,sum(subordeR_quantity) as quantity ,max(case when order_date::date < dateadd(month,1,b.first_order_date::date) then order_date::date end ) max_sale_date ,datediff(day,b.first_order_date::date, max_sale_Date) days ,sum(case when order_date::date < dateadd(month,1,b.first_order_date::date) then suborder_quantity end) quantity_in_first_month from snitch_db.maplemonk.unicommerce_fact_items_snitch a left join (select sku, min(order_date) first_order_date from snitch_db.maplemonk.unicommerce_fact_items_snitch group by 1) b on a.sku = b.sku left join (select distinct sku, category from snitch_db.maplemonk.fact_items_snitch where category is not null) c on a.sku = c.sku where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-180,current_timestamp()::date) group by 1,2,3,4,5,6 ) ,last90_days as ( select sku ,product_name ,marketplace ,sum(suborder_quantity) as quantity from snitch_db.maplemonk.unicommerce_fact_items_snitch where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-90,current_timestamp()::date) group by 1,2,3 ) ,last30_days as ( select sku ,product_name ,marketplace ,sum(suborder_quantity) as quantity from snitch_db.maplemonk.unicommerce_fact_items_snitch where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-30,current_timestamp()::date) group by 1,2,3 ), last7_days as( select sku ,product_name ,marketplace ,sum(suborder_quantity) as quantity from snitch_db.maplemonk.unicommerce_fact_items_snitch where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-7,current_timestamp()::date) group by 1,2,3 ), last3_days as( select sku ,product_name ,marketplace ,sum(suborder_quantity) as quantity from snitch_db.maplemonk.unicommerce_fact_items_snitch where order_date::date <= current_timestamp()::date and order_date::date >= dateadd(\'day\',-3,current_timestamp()::date) group by 1,2,3 ), inventory as( select \"Item Type skuCode\" sku, count(distinct \"Item Code\") inventory_quantity, max(left(\"Item Created On\",10)::date) updated_at from snitch_db.maplemonk.unicommerce_inventory_aging group by 1 ) select max(i.updated_at ::date) Inventory_last_updated_at ,min(first_order_Date) first_order_date ,case when right(a.sku,2) = \'-S\' then left(a.sku,len(a.sku)-2) else replace(a.sku,concat(\'-\',split_part(a.sku,\'-\',-1)),\'\') end as SKU_group ,a.product_name product_name ,category ,a.marketplace ,max(ifnull(z.days,0)) days ,sum(ifnull(z.quantity_in_first_month,0)) quantity_in_firsT_month ,sum(ifnull(z.quantity,0)) as units_sold_L180 ,sum(ifnull(a.quantity,0)) as units_sold_L90 ,sum(ifnull(b.quantity,0)) as units_sold_L30 ,sum(ifnull(c.quantity,0)) as units_sold_L7 ,sum(ifnull(d.quantity,0)) as units_sold_L3 ,sum(inventory_quantity) as inventory_available ,case when sum(ifnull(a.quantity,0))=0 then 0 else round(sum(inventory_quantity)/((sum(a.quantity) /90)*7),2) end as Weeks_of_Supply_L90 ,case when sum(ifnull(b.quantity,0))=0 then 0 else round(sum(inventory_quantity)/((sum(b.quantity) /30)*7),2) end as Weeks_of_Supply_L30 ,case when sum(ifnull(c.quantity,0))=0 then 0 else round(sum(inventory_quantity)/((sum(c.quantity) /7)*7),2) end as Weeks_of_Supply_L7 from last180_days z left join inventory i on z.sku = i.sku left join last90_days a on z.sku = a.sku and z.marketplace = a.marketplace left join last30_days b on z.sku = b.sku and z.marketplace = b.marketplace left join last7_days c on z.sku = c.sku and z.marketplace = c.marketplace left join last3_days d on z.sku = d.sku and z.marketplace = d.marketplace group by 3,4,5,6 order by 1,2 desc;",
                                "transaction": true
                            }
                        ) }}
                        with sample_data as (

                            select * from snitch_db.information_schema.databases
                        ),
                        
                        final as (
                            select * from sample_data
                        )
                        select * from final
                        